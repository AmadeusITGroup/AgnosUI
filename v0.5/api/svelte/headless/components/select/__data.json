{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":129},true,[3,6,9,48,91,110],{"title":4,"path":5,"submenu":-1},"Types","api/svelte/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/svelte/headless/config",{"title":10,"path":-1,"submenu":11},"Components",[12,16,20,24,28,32,36,40,44],{"path":13,"slug":14,"label":15},"api/svelte/headless/components/accordion","components/accordion","Accordion",{"path":17,"slug":18,"label":19},"api/svelte/headless/components/alert","components/alert","Alert",{"path":21,"slug":22,"label":23},"api/svelte/headless/components/modal","components/modal","Modal",{"path":25,"slug":26,"label":27},"api/svelte/headless/components/pagination","components/pagination","Pagination",{"path":29,"slug":30,"label":31},"api/svelte/headless/components/progressbar","components/progressbar","Progressbar",{"path":33,"slug":34,"label":35},"api/svelte/headless/components/rating","components/rating","Rating",{"path":37,"slug":38,"label":39},"api/svelte/headless/components/select","components/select","Select",{"path":41,"slug":42,"label":43},"api/svelte/headless/components/slider","components/slider","Slider",{"path":45,"slug":46,"label":47},"api/svelte/headless/components/toast","components/toast","Toast",{"title":49,"path":-1,"submenu":50},"Services",[51,55,59,63,67,71,75,79,83,87],{"path":52,"slug":53,"label":54},"api/svelte/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":56,"slug":57,"label":58},"api/svelte/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":60,"slug":61,"label":62},"api/svelte/headless/services/focustrack","services/focustrack","focustrack",{"path":64,"slug":65,"label":66},"api/svelte/headless/services/hash","services/hash","hash",{"path":68,"slug":69,"label":70},"api/svelte/headless/services/intersection","services/intersection","intersection",{"path":72,"slug":73,"label":74},"api/svelte/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":76,"slug":77,"label":78},"api/svelte/headless/services/navManager","services/navManager","navManager",{"path":80,"slug":81,"label":82},"api/svelte/headless/services/portal","services/portal","portal",{"path":84,"slug":85,"label":86},"api/svelte/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":88,"slug":89,"label":90},"api/svelte/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":92,"path":-1,"submenu":93},"Transitions",[94,98,102,106],{"path":95,"slug":96,"label":97},"api/svelte/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":99,"slug":100,"label":101},"api/svelte/headless/services/transitions/collapse","services/transitions/collapse","collapse",{"path":103,"slug":104,"label":105},"api/svelte/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":107,"slug":108,"label":109},"api/svelte/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":111,"path":-1,"submenu":112},"Utils",[113,117,121,125],{"path":114,"slug":115,"label":116},"api/svelte/headless/utils/directive","utils/directive","directive",{"path":118,"slug":119,"label":120},"api/svelte/headless/utils/stores","utils/stores","stores",{"path":122,"slug":123,"label":124},"api/svelte/headless/utils/widget","utils/widget","widget",{"path":126,"slug":127,"label":128},"api/svelte/headless/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":27,"import":28},"components/select",[3,6,9,12,15,18,21,24],{"source":4,"name":5},"## function_createSelect\n> **createSelect**\\\u003C`Item`\\>(`config`?): [`SelectWidget`](#selectwidget)\\\u003C`Item`\\>\n\nCreate a SelectWidget with given config props\n\n### Type Parameters\n\n• **Item**\n\n### Parameters\n\n• **config?**: [`PropsConfig`](../types#propsconfig)\\\u003C[`SelectProps`](#selectprops)\\\u003C`Item`\\>\\>\n\nan optional alert config\n\n### Returns\n\n[`SelectWidget`](#selectwidget)\\\u003C`Item`\\>\n\na SelectWidget\n","createSelect",{"source":7,"name":8},"## function_getSelectDefaultConfig\n> **getSelectDefaultConfig**(): [`SelectProps`](#selectprops)\\\u003C`any`\\>\n\nReturns a shallow copy of the default select config.\n\n### Returns\n\n[`SelectProps`](#selectprops)\\\u003C`any`\\>\n\na copy of the default config\n","getSelectDefaultConfig",{"source":10,"name":11},"## interface_ItemContext\nItem representation built from the items provided in parameters\n\n### Type Parameters\n\n• **T**\n\n### Properties\n\n#### id\n\n> **id**: `string`\n\nUnique id to identify the item\n\n***\n\n#### item\n\n> **item**: `T`\n\nOriginal item given in the parameters\n\n***\n\n#### selected\n\n> **selected**: `boolean`\n\nSpecify if the item is checked\n","ItemContext",{"source":13,"name":14},"## interface_SelectApi\nInterface representing the API for a Select component.\n\n### Type Parameters\n\n• **Item**\n\n### Methods\n\n#### clear\n\n> **clear**(): `void`\n\nClear all the selected items\n\n##### Returns\n\n`void`\n\n***\n\n#### clearText\n\n> **clearText**(): `void`\n\nClear the filter text\n\n##### Returns\n\n`void`\n\n***\n\n#### close\n\n> **close**(): `void`\n\nclose the select\n\n##### Returns\n\n`void`\n\n***\n\n#### highlight\n\n> **highlight**(`item`): `void`\n\nHighlight the given item, if there is a corresponding match among the visible list\n\n##### Parameters\n\n• **item**: `Item`\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightFirst\n\n> **highlightFirst**(): `void`\n\nHighlight the first item among the visible list\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightLast\n\n> **highlightLast**(): `void`\n\nHighlight the last item among the visible list\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightNext\n\n> **highlightNext**(): `void`\n\nHighlight the next item among the visible list.\nLoop to the first item if needed\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightPrevious\n\n> **highlightPrevious**(): `void`\n\nHighlight the previous item among the visible list\nLoop to the last item if needed\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\nopen the select\n\n##### Returns\n\n`void`\n\n***\n\n#### select\n\n> **select**(`item`): `void`\n\nSelect the provided item.\nThe selected list is used to\n\n##### Parameters\n\n• **item**: `Item`\n\nthe item to select\n\n##### Returns\n\n`void`\n\n***\n\n#### toggle\n\n> **toggle**(`isOpen`?): `void`\n\nToggle the dropdown menu\n\n##### Parameters\n\n• **isOpen?**: `boolean`\n\nIf specified, set the menu in the defined state.\n\n##### Returns\n\n`void`\n\n***\n\n#### toggleItem\n\n> **toggleItem**(`item`, `selected`?): `void`\n\nToggle the selection of an item\n\n##### Parameters\n\n• **item**: `Item`\n\nthe item to toggle\n\n• **selected?**: `boolean`\n\nan optional boolean to enforce the selected/unselected state instead of toggling\n\n##### Returns\n\n`void`\n\n***\n\n#### unselect\n\n> **unselect**(`item`): `void`\n\nUnselect the provided item.\n\n##### Parameters\n\n• **item**: `Item`\n\nthe item to unselect\n\n##### Returns\n\n`void`\n","SelectApi",{"source":16,"name":17},"## interface_SelectDirectives\nInterface representing the directives used in the Select component.\n\n### Type Parameters\n\n• **Item**\n\n### Properties\n\n#### badgeAttributesDirective\n\n> **badgeAttributesDirective**: [`Directive`](../types#directive)\\\u003C[`ItemContext`](#itemcontext)\\\u003C`Item`\\>\\>\n\nA directive that applies all the necessary attributes to the container badges\n\n***\n\n#### badgeCloseButtonDirective\n\n> **badgeCloseButtonDirective**: [`Directive`](../types#directive)\\\u003C[`ItemContext`](#itemcontext)\\\u003C`Item`\\>\\>\n\nA directive to be applied to a button that closes a badge\n\n***\n\n#### floatingDirective\n\n> **floatingDirective**: [`Directive`](../types#directive)\\\u003C`void`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\nDirective that enables dynamic positioning of menu element\n\n***\n\n#### hasFocusDirective\n\n> **hasFocusDirective**: [`Directive`](../types#directive)\n\nDirective to be used in the input group and the menu containers\n\n***\n\n#### inputContainerDirective\n\n> **inputContainerDirective**: [`Directive`](../types#directive)\n\nA directive to be applied to the element that contains the badges and the input\n\n***\n\n#### inputDirective\n\n> **inputDirective**: [`Directive`](../types#directive)\n\nA directive to be applied to the input\n\n***\n\n#### itemAttributesDirective\n\n> **itemAttributesDirective**: [`Directive`](../types#directive)\\\u003C[`ItemContext`](#itemcontext)\\\u003C`Item`\\>\\>\n\nA directive that applies all the necessary attributes to the dropdown item\n\n***\n\n#### menuAttributesDirective\n\n> **menuAttributesDirective**: [`Directive`](../types#directive)\n\nA directive that applies all the necessary attributes to the dropdown menu\n\n***\n\n#### referenceDirective\n\n> **referenceDirective**: [`Directive`](../types#directive)\\\u003C`void`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\nA directive to be applied to the input group element serves as the base for menu positioning\n","SelectDirectives",{"source":19,"name":20},"## interface_SelectProps\nProps for the Select component.\n\n### Type Parameters\n\n• **Item**\n\n### Properties\n\n#### allowedPlacements\n\n> **allowedPlacements**: `Placement`[]\n\nList of allowed placements for the dropdown.\nThis refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).\n\n##### Default Value\n\n```ts\n['bottom-start', 'top-start', 'bottom-end', 'top-end']\n```\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `undefined` \\| `string`\n\naria-label used for the input inside the select\n\n##### Default Value\n\n`'Select'`\n\n***\n\n#### badgeClassName\n\n> **badgeClassName**: `string`\n\nClass to be added on selected items (displayed in the input zone)\n\n##### Default Value\n\n`''`\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\ntrue if the select is disabled\n\n##### Default Value\n\n`false`\n\n***\n\n#### filterText\n\n> **filterText**: `string`\n\nFiltered text to be display in the filter input\n\n##### Default Value\n\n`''`\n\n***\n\n#### id\n\n> **id**: `undefined` \\| `string`\n\nid used for the input inside the select\n\n***\n\n#### items\n\n> **items**: `Item`[]\n\nList of available items for the dropdown\n\n##### Default Value\n\n`[]`\n\n***\n\n#### loading\n\n> **loading**: `boolean`\n\ntrue if a loading process is being done\n\n##### Default Value\n\n`false`\n\n***\n\n#### menuClassName\n\n> **menuClassName**: `string`\n\nClass to be added on the dropdown menu container\n\n##### Default Value\n\n`''`\n\n***\n\n#### menuItemClassName\n\n> **menuItemClassName**: `string`\n\nClass to be added on menu items\n\n##### Default Value\n\n`''`\n\n***\n\n#### open\n\n> **open**: `boolean`\n\ntrue if the select is open\n\n##### Default Value\n\n`false`\n\n***\n\n#### selected\n\n> **selected**: `Item`[]\n\nList of selected item ids\n\n##### Default Value\n\n`[]`\n\n### Methods\n\n#### itemIdFn\n\n> **itemIdFn**(`item`): `string`\n\nCustom function to get the id of an item\nBy default, the item is returned\n\n##### Parameters\n\n• **item**: `Item`\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(item: any) => '' + item\n```\n\n***\n\n#### navSelector\n\n> **navSelector**(`node`): `NodeListOf`\\\u003C[`HTMLInputElement`](https://developer.mozilla.org/docs/Web/API/HTMLInputElement) \\| [`HTMLSpanElement`](https://developer.mozilla.org/docs/Web/API/HTMLSpanElement)\\>\n\nRetrieves navigable elements within an HTML element containing badges and the input.\n\n##### Parameters\n\n• **node**: [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\nHTMLElement that contains the badges and the input\n\n##### Returns\n\n`NodeListOf`\\\u003C[`HTMLInputElement`](https://developer.mozilla.org/docs/Web/API/HTMLInputElement) \\| [`HTMLSpanElement`](https://developer.mozilla.org/docs/Web/API/HTMLSpanElement)\\>\n\n##### Default Value\n\n```ts\n(node: HTMLElement) => node.querySelectorAll('.au-select-badge,input')\n```\n\n***\n\n#### onFilterTextChange\n\n> **onFilterTextChange**(`text`): `void`\n\nCallback called when the text filter change\n\n##### Parameters\n\n• **text**: `string`\n\nFiltered text\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onOpenChange\n\n> **onOpenChange**(`isOpen`): `void`\n\nCallback called dropdown open state change\n\n##### Parameters\n\n• **isOpen**: `boolean`\n\nupdated open state\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onSelectedChange\n\n> **onSelectedChange**(`selected`): `void`\n\nCallback called when the selection change\n\n##### Parameters\n\n• **selected**: `Item`[]\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n","SelectProps",{"source":22,"name":23},"## interface_SelectState\nRepresents the state of a Select component.\n\n### Type Parameters\n\n• **Item**\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `undefined` \\| `string`\n\naria-label used for the input inside the select\n\n##### Default Value\n\n`'Select'`\n\n***\n\n#### badgeClassName\n\n> **badgeClassName**: `string`\n\nClass to be added on selected items (displayed in the input zone)\n\n##### Default Value\n\n`''`\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\ntrue if the select is disabled\n\n##### Default Value\n\n`false`\n\n***\n\n#### filterText\n\n> **filterText**: `string`\n\nFiltered text to be display in the filter input\n\n##### Default Value\n\n`''`\n\n***\n\n#### highlighted\n\n> **highlighted**: `undefined` \\| [`ItemContext`](#itemcontext)\\\u003C`Item`\\>\n\nHighlighted item context.\nIt is designed to define the highlighted item in the dropdown menu\n\n***\n\n#### id\n\n> **id**: `undefined` \\| `string`\n\nid used for the input inside the select\n\n***\n\n#### loading\n\n> **loading**: `boolean`\n\ntrue if a loading process is being done\n\n##### Default Value\n\n`false`\n\n***\n\n#### menuClassName\n\n> **menuClassName**: `string`\n\nClass to be added on the dropdown menu container\n\n##### Default Value\n\n`''`\n\n***\n\n#### menuItemClassName\n\n> **menuItemClassName**: `string`\n\nClass to be added on menu items\n\n##### Default Value\n\n`''`\n\n***\n\n#### open\n\n> **open**: `boolean`\n\ntrue if the select is open\n\n##### Default Value\n\n`false`\n\n***\n\n#### placement\n\n> **placement**: `undefined` \\| `Placement`\n\nCurrent placement of the dropdown\n\n***\n\n#### selected\n\n> **selected**: `Item`[]\n\nList of selected item ids\n\n##### Default Value\n\n`[]`\n\n***\n\n#### selectedContexts\n\n> **selectedContexts**: [`ItemContext`](#itemcontext)\\\u003C`Item`\\>[]\n\nList of selected items to be display\n\n***\n\n#### visibleItems\n\n> **visibleItems**: [`ItemContext`](#itemcontext)\\\u003C`Item`\\>[]\n\nList of item contexts, to be displayed in the menu\n","SelectState",{"source":25,"name":26},"## type alias_SelectWidget\n> **SelectWidget**\\\u003C`Item`\\>: [`Widget`](../types#widget)\\\u003C[`SelectProps`](#selectprops)\\\u003C`Item`\\>, [`SelectState`](#selectstate)\\\u003C`Item`\\>, [`SelectApi`](#selectapi)\\\u003C`Item`\\>, [`SelectDirectives`](#selectdirectives)\\\u003C`Item`\\>\\>\n\nRepresents a Select widget component.\n\n### Type Parameters\n\n• **Item**\n","SelectWidget","API select","@agnos-ui/svelte-headless/components/select"],"uses":{"params":["framework","type","slug"]}}]}
