{
	"extends": ["../.eslintrc.json", "plugin:jsdoc/recommended-typescript-error"],
	"overrides": [
		{
			"files": ["*.ts"],
			"parserOptions": {
				"project": ["angular/headless/tsconfig.json", "angular/headless/tsconfig.spec.json"],
				"createDefaultProgram": true
			},
			"rules": {
				"@angular-eslint/directive-selector": [
					"warn",
					{
						"type": "attribute",
						"prefix": "au",
						"style": "camelCase"
					}
				],
				"@angular-eslint/component-selector": [
					"error",
					{
						"type": "attribute",
						"prefix": "au",
						"style": "camelCase"
					}
				],
				"@angular-eslint/no-input-rename": "off",
				"@angular-eslint/no-output-rename": "off",
				"@agnos-ui/check-replace-imports": ["error", "@agnos-ui/core"],
				"jsdoc/tag-lines": "off",
				"jsdoc/check-tag-names": [
					"error",
					{
						"definedTags": ["remarks", "defaultValue"]
					}
				],
				"jsdoc/require-jsdoc": [
					"error",
					{
						"publicOnly": true,
						"contexts": [
							"TSInterfaceDeclaration > TSInterfaceBody > TSPropertySignature",
							"TSInterfaceDeclaration > TSInterfaceBody > TSMethodSignature",
							"TSTypeAliasDeclaration > TSTypeLiteral > TSPropertySignature",
							"TSTypeAliasDeclaration > TSTypeLiteral > TSMethodSignature"
						],
						"require": {
							"FunctionExpression": true,
							"ArrowFunctionExpression": true,
							"FunctionDeclaration": true,
							"MethodDefinition": true
						},
						"checkConstructors": false,
						"checkGetters": false
					}
				]
			}
		},
		{
			"files": ["*.html"],
			"rules": {}
		},
		{
			"files": ["*.spec.ts"],
			"rules": {
				"jsdoc/require-jsdoc": "off",
				"jsdoc/require-param": "off",
				"jsdoc/require-returns": "off"
			}
		},
		{
			"files": ["**/__mocks__/*.ts"],
			"rules": {
				"jsdoc/require-jsdoc": "off"
			}
		}
	],
	"rules": {
		"@agnos-ui/angular-check-props": "error"
	}
}
