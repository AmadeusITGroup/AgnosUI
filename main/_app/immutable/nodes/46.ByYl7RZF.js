import{a as d,t as u}from"../chunks/AF72GVsa.js";import"../chunks/C3YAw_yy.js";import{V as _,h as f,s as r}from"../chunks/CCa7hPa2.js";import{_ as e}from"../chunks/CmsKOCeN.js";import{S as l}from"../chunks/D1K5x-0Z.js";import{S as n}from"../chunks/B4qQ85Oe.js";const h={componentName:"toast",style:"bootstrap",sampleName:"default",files:{angular:{complementaryUrl:"/bootstrap",entryPoint:"default.component.ts",files:{"default.component.ts":()=>e(()=>import("../chunks/DEPl2ng3.js"),[],import.meta.url).then(t=>t.default)}},react:{complementaryUrl:"/bootstrap",entryPoint:"default.tsx",files:{"default.tsx":()=>e(()=>import("../chunks/CXC2obnZ.js"),[],import.meta.url).then(t=>t.default)}},svelte:{complementaryUrl:"/bootstrap",entryPoint:"default.svelte",files:{"default.svelte":()=>e(()=>import("../chunks/_s_7Xqmm.js"),[],import.meta.url).then(t=>t.default)}}}},y={componentName:"toast",style:"bootstrap",sampleName:"dynamic",files:{angular:{complementaryUrl:"/bootstrap",entryPoint:"dynamic.component.ts",files:{"dynamic.component.ts":()=>e(()=>import("../chunks/BgPVZBnJ.js"),[],import.meta.url).then(t=>t.default),"toast-positions.enum.ts":()=>e(()=>import("../chunks/1xcHjqpd.js"),[],import.meta.url).then(t=>t.default)}},react:{complementaryUrl:"/bootstrap",entryPoint:"dynamic.tsx",files:{"dynamic.tsx":()=>e(()=>import("../chunks/DC0i5qr8.js"),[],import.meta.url).then(t=>t.default),"toast-positions.enum.ts":()=>e(()=>import("../chunks/1xcHjqpd.js"),[],import.meta.url).then(t=>t.default)}},svelte:{complementaryUrl:"/bootstrap",entryPoint:"dynamic.svelte",files:{"dynamic.svelte":()=>e(()=>import("../chunks/twvjrJH6.js"),[],import.meta.url).then(t=>t.default),"toast-positions.enum.ts":()=>e(()=>import("../chunks/1xcHjqpd.js"),[],import.meta.url).then(t=>t.default),"toast-service.svelte.ts":()=>e(()=>import("../chunks/8vUe2AF2.js"),[],import.meta.url).then(t=>t.default)}}}},b={componentName:"toast",style:"bootstrap",sampleName:"action",files:{angular:{complementaryUrl:"/bootstrap",entryPoint:"action.component.ts",files:{"action.component.ts":()=>e(()=>import("../chunks/O7Q1aur1.js"),[],import.meta.url).then(t=>t.default)}},react:{complementaryUrl:"/bootstrap",entryPoint:"action.tsx",files:{"action.tsx":()=>e(()=>import("../chunks/fyYI6GoE.js"),[],import.meta.url).then(t=>t.default)}},svelte:{complementaryUrl:"/bootstrap",entryPoint:"action.svelte",files:{"action.svelte":()=>e(()=>import("../chunks/DZUnF1CW.js"),[],import.meta.url).then(t=>t.default),"ActionStructure.svelte":()=>e(()=>import("../chunks/D-CXh8e9.js"),[],import.meta.url).then(t=>t.default)}}}};var v=u(`<p>Toasts are a notification for a user when something changes, in order to allow assistive technologies to announce new information automatically the
	toasts should be wrapped into <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions" target="_blank">aria-live region</a> along with <code>aria-atomic="true"</code> to ensure that the whole toast is read and not only parts of it.</p> <p><strong>Note:</strong> the aria-live region won't be announced if you add it dynamically to the markup. Ensure that it is present before the toast generation.</p> <p>When <code>autoHide: false</code> the close button must be added, so that the toast can be dismissed. <br> <strong>Note:</strong> set <code>dismissible: true</code> to have the close button automatically.</p>`,1);function E(t){var a=v();_(4),d(t,a)}var P=u("<!> <!> <!> <!>",1);function I(t){var a=P(),s=f(a);n(s,{label:"Basic toast",id:"default",level:2,children:(o,i)=>{l(o,{title:"Generic example",sample:h,height:315})},$$slots:{default:!0}});var m=r(s,2);n(m,{label:"Dynamic toast with stacking",id:"dynamic",level:2,children:(o,i)=>{l(o,{title:"Dynamic example",sample:y,height:600})},$$slots:{default:!0}});var p=r(m,2);n(p,{label:"Toast with action",id:"action",level:2,children:(o,i)=>{l(o,{title:"Toast with action",sample:b,height:215})},$$slots:{default:!0}});var c=r(p,2);n(c,{label:"Accessibility",id:"accessibility",level:2,children:(o,i)=>{E(o)},$$slots:{default:!0}}),d(t,a)}export{I as component};
