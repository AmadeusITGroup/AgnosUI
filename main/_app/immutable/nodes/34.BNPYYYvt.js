function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{s as n,n as i}from"../chunks/scheduler.-4Rzn4Bj.js";import{S as c,i as p,c as l,b as m,m as u,t as d,a as g,e as b}from"../chunks/index.BbxhXv5b.js";import{P as f}from"../chunks/Playground.7M1iDth0.js";import{_ as s}from"../chunks/preload-helper.Dch09mLN.js";import{g as h}from"../chunks/progressbar-SBcPMovz.BneVqeVj.js";const y={componentName:"progressbar",style:"bootstrap",sampleName:"playground",files:{angular:{complementaryUrl:"/bootstrap",entryPoint:"playground.component.ts",files:{"playground.component.ts":()=>s(()=>import("../chunks/playground.route.zfSt6O2Z.js"),__vite__mapDeps([]),import.meta.url).then(t=>t.default)}},react:{complementaryUrl:"/bootstrap",entryPoint:"playground.tsx",files:{"playground.tsx":()=>s(()=>import("../chunks/Playground.route.CVokB8Kn.js"),__vite__mapDeps([]),import.meta.url).then(t=>t.default)}},svelte:{complementaryUrl:"/bootstrap",entryPoint:"playground.svelte",files:{"playground.svelte":()=>s(()=>import("../chunks/Playground.route.Cqurq1Km.js"),__vite__mapDeps([]),import.meta.url).then(t=>t.default)}}}},v=[{name:"animated",description:"If `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:51,character:2,position:1412},end:{line:51,character:20,position:1430},type:"boolean",defaultValue:"false"},{name:"ariaLabel",description:"The aria label.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:30,character:2,position:894},end:{line:30,character:20,position:912},type:"string",defaultValue:"'Progressbar'"},{name:"ariaValueTextFn",description:"Return the value for the 'aria-valuetext' attribute.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:87,character:2,position:2219},end:{line:87,character:91,position:2308},type:"(value: number, minimum: number, maximum: number) => string | undefined",defaultValue:"() => undefined"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"height",description:"Height of the progressbar, can be any valid css height value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:42,character:2,position:1174},end:{line:42,character:17,position:1189},type:"string",defaultValue:"''"},{name:"max",description:"The maximum value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:21,character:2,position:781},end:{line:21,character:14,position:793},type:"number",defaultValue:"100"},{name:"min",description:"The minimum value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:16,character:2,position:712},end:{line:16,character:14,position:724},type:"number",defaultValue:"0"},{name:"slotDefault",description:"Label of the progress.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:38,character:2,position:1051},end:{line:38,character:47,position:1096},type:"SlotContent<ProgressbarContext>",defaultValue:"undefined"},{name:"slotStructure",description:"Global template for the Progressbar.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:34,character:2,position:965},end:{line:34,character:49,position:1012},type:"SlotContent<ProgressbarContext>",defaultValue:"undefined"},{name:"striped",description:"If `true`, shows a striped progressbar.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:46,character:2,position:1245},end:{line:46,character:19,position:1262},type:"boolean",defaultValue:"false"},{name:"value",description:"The current value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:26,character:2,position:848},end:{line:26,character:16,position:862},type:"number",defaultValue:"0"}],N=[{name:"animated",description:"If `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:51,character:2,position:1412},end:{line:51,character:20,position:1430},type:"boolean"},{name:"ariaLabel",description:"The aria label.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:30,character:2,position:894},end:{line:30,character:20,position:912},type:"string"},{name:"ariaValueText",description:"The aria value text.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:77,character:2,position:1935},end:{line:77,character:36,position:1969},type:"string | undefined"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"finished",description:"`true` if the value has reached its maximum value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:73,character:2,position:1880},end:{line:73,character:20,position:1898},type:"boolean"},{name:"height",description:"Height of the progressbar, can be any valid css height value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:42,character:2,position:1174},end:{line:42,character:17,position:1189},type:"string"},{name:"max",description:"The maximum value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:21,character:2,position:781},end:{line:21,character:14,position:793},type:"number"},{name:"min",description:"The minimum value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:16,character:2,position:712},end:{line:16,character:14,position:724},type:"number"},{name:"percentage",description:"Percentage of completion.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:65,character:2,position:1713},end:{line:65,character:21,position:1732},type:"number"},{name:"slotDefault",description:"Label of the progress.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:38,character:2,position:1051},end:{line:38,character:47,position:1096},type:"SlotContent<ProgressbarContext>"},{name:"slotStructure",description:"Global template for the Progressbar.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:34,character:2,position:965},end:{line:34,character:49,position:1012},type:"SlotContent<ProgressbarContext>"},{name:"started",description:"`true` if the value is above its minimum value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:69,character:2,position:1796},end:{line:69,character:19,position:1813},type:"boolean"},{name:"striped",description:"If `true`, shows a striped progressbar.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:46,character:2,position:1245},end:{line:46,character:19,position:1262},type:"boolean"},{name:"value",description:"The current value.",fileName:"core/src/components/progressbar/progressbar.ts",start:{line:26,character:2,position:848},end:{line:26,character:16,position:862},type:"number"}],_=[],P={props:v,state:N,api:_};function x(t){let e,a;return e=new f({props:{sample:y,config:h(),doc:P}}),{c(){l(e.$$.fragment)},l(r){m(e.$$.fragment,r)},m(r,o){u(e,r,o),a=!0},p:i,i(r){a||(d(e.$$.fragment,r),a=!0)},o(r){g(e.$$.fragment,r),a=!1},d(r){b(e,r)}}}class w extends c{constructor(e){super(),p(this,e,null,x,n,{})}}export{w as component};
