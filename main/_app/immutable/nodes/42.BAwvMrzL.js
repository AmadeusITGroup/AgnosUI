import{s as o,n as c}from"../chunks/scheduler.Bus5bagK.js";import{S as a,i as r,c as l,b as p,m as d,t as m,a as h,e as f}from"../chunks/index.hvgIYORv.js";import{A as g}from"../chunks/ApiDoc.CXEEeFvT.js";const u=[{name:"allowedPlacements",description:`List of allowed placements for the dropdown.
This refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).`,fileName:"core/src/components/select/select.ts",start:{line:104,character:2,position:3090},end:{line:104,character:33,position:3121},type:"Placement[]",defaultValue:"['bottom-start', 'top-start', 'bottom-end', 'top-end']"},{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:39,character:2,position:1595},end:{line:39,character:32,position:1625},type:"string",defaultValue:"'Select'"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:74,character:2,position:2139},end:{line:74,character:25,position:2162},type:"string",defaultValue:"''"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:54,character:2,position:1817},end:{line:54,character:20,position:1835},type:"boolean",defaultValue:"false"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:49,character:2,position:1750},end:{line:49,character:21,position:1769},type:"string",defaultValue:"''"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:34,character:2,position:1507},end:{line:34,character:25,position:1530},type:"string",defaultValue:"undefined"},{name:"itemIdFn",description:`Custom function to get the id of an item
By default, the item is returned`,fileName:"core/src/components/select/select.ts",start:{line:110,character:2,position:3216},end:{line:110,character:28,position:3242},type:"(item: T) => string",defaultValue:"(item: any) => '' + item"},{name:"items",description:"List of available items for the dropdown",fileName:"core/src/components/select/select.ts",start:{line:98,character:2,position:2791},end:{line:98,character:13,position:2802},type:"T[]",defaultValue:"[]"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:79,character:2,position:2219},end:{line:79,character:19,position:2236},type:"boolean",defaultValue:"false"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:64,character:2,position:1959},end:{line:64,character:24,position:1981},type:"string",defaultValue:"''"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:69,character:2,position:2030},end:{line:69,character:28,position:2056},type:"string",defaultValue:"''"},{name:"navSelector",description:"Retrieves navigable elements within an HTML element containing badges and the input.",fileName:"core/src/components/select/select.ts",start:{line:117,character:2,position:3417},end:{line:117,character:81,position:3496},type:"(node: HTMLElement) => NodeListOf<HTMLSpanElement | HTMLInputElement>",defaultValue:"(node: HTMLElement) => node.querySelectorAll('.au-select-badge,input')"},{name:"onFilterTextChange",description:"Callback called when the text filter change",fileName:"core/src/components/select/select.ts",start:{line:131,character:2,position:3745},end:{line:131,character:41,position:3784},type:"(text: string) => void",defaultValue:"() => {}"},{name:"onOpenChange",description:"Callback called dropdown open state change",fileName:"core/src/components/select/select.ts",start:{line:125,character:2,position:3616},end:{line:125,character:38,position:3652},type:"(isOpen: boolean) => void",defaultValue:"() => {}"},{name:"onSelectedChange",description:"Callback called when the selection change",fileName:"core/src/components/select/select.ts",start:{line:136,character:2,position:3843},end:{line:136,character:40,position:3881},type:"(selected: T[]) => void",defaultValue:"() => {}"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:59,character:2,position:1879},end:{line:59,character:16,position:1893},type:"boolean",defaultValue:"false"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:44,character:2,position:1668},end:{line:44,character:19,position:1685},type:"Item[]",defaultValue:"[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:85,character:2,position:2405},end:{line:85,character:55,position:2458},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}: SelectItemContext<any>) => itemContext.item"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:91,character:2,position:2613},end:{line:91,character:49,position:2660},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}: SelectItemContext<any>) => itemContext.item"}],y=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:39,character:2,position:1595},end:{line:39,character:32,position:1625},type:"string"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:74,character:2,position:2139},end:{line:74,character:25,position:2162},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:54,character:2,position:1817},end:{line:54,character:20,position:1835},type:"boolean"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:49,character:2,position:1750},end:{line:49,character:21,position:1769},type:"string"},{name:"highlighted",description:`Highlighted item context.
It is designed to define the highlighted item in the dropdown menu`,fileName:"core/src/components/select/select.ts",start:{line:175,character:2,position:4572},end:{line:175,character:45,position:4615},type:"ItemContext<Item>"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:34,character:2,position:1507},end:{line:34,character:25,position:1530},type:"string"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:79,character:2,position:2219},end:{line:79,character:19,position:2236},type:"boolean"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:64,character:2,position:1959},end:{line:64,character:24,position:1981},type:"string"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:69,character:2,position:2030},end:{line:69,character:28,position:2056},type:"string"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:59,character:2,position:1879},end:{line:59,character:16,position:1893},type:"boolean"},{name:"placement",description:"Current placement of the dropdown",fileName:"core/src/components/select/select.ts",start:{line:180,character:2,position:4666},end:{line:180,character:35,position:4699},type:'Side | "top-start" | "top-end" | "right-start" | "right-end" | "bottom-start" | "bottom-end" | "left-start" | "left-end"'},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:44,character:2,position:1668},end:{line:44,character:19,position:1685},type:"Item[]"},{name:"selectedContexts",description:`/**
  List of selected items to be display`,fileName:"core/src/components/select/select.ts",start:{line:169,character:2,position:4420},end:{line:169,character:40,position:4458},type:"ItemContext<Item>[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:85,character:2,position:2405},end:{line:85,character:55,position:2458},type:"SlotContent<SelectItemContext<Item>>"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:91,character:2,position:2613},end:{line:91,character:49,position:2660},type:"SlotContent<SelectItemContext<Item>>"},{name:"visibleItems",description:"List of item contexts, to be displayed in the menu",fileName:"core/src/components/select/select.ts",start:{line:163,character:2,position:4327},end:{line:163,character:36,position:4361},type:"ItemContext<Item>[]"}],b=[{name:"clear",description:"Clear all the selected items",fileName:"core/src/components/select/select.ts",start:{line:187,character:2,position:4782},end:{line:187,character:16,position:4796},type:"() => void"},{name:"clearText",description:"Clear the filter text",fileName:"core/src/components/select/select.ts",start:{line:192,character:2,position:4835},end:{line:192,character:20,position:4853},type:"() => void"},{name:"close",description:"close the select",fileName:"core/src/components/select/select.ts",start:{line:246,character:2,position:5973},end:{line:246,character:16,position:5987},type:"() => void"},{name:"highlight",description:"Highlight the given item, if there is a corresponding match among the visible list",fileName:"core/src/components/select/select.ts",start:{line:197,character:2,position:4953},end:{line:197,character:30,position:4981},type:"(item: Item) => void"},{name:"highlightFirst",description:"Highlight the first item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:202,character:2,position:5046},end:{line:202,character:25,position:5069},type:"() => void"},{name:"highlightLast",description:"Highlight the last item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:219,character:2,position:5387},end:{line:219,character:24,position:5409},type:"() => void"},{name:"highlightNext",description:`Highlight the next item among the visible list.
Loop to the first item if needed`,fileName:"core/src/components/select/select.ts",start:{line:214,character:2,position:5301},end:{line:214,character:24,position:5323},type:"() => void"},{name:"highlightPrevious",description:`Highlight the previous item among the visible list
Loop to the last item if needed`,fileName:"core/src/components/select/select.ts",start:{line:208,character:2,position:5173},end:{line:208,character:28,position:5199},type:"() => void"},{name:"open",description:"open the select",fileName:"core/src/components/select/select.ts",start:{line:242,character:2,position:5927},end:{line:242,character:15,position:5940},type:"() => void"},{name:"select",description:`Select the provided item.
The selected list is used to`,fileName:"core/src/components/select/select.ts",start:{line:226,character:2,position:5522},end:{line:226,character:27,position:5547},type:"(item: Item) => void"},{name:"toggle",description:"Toggle the dropdown menu",fileName:"core/src/components/select/select.ts",start:{line:251,character:2,position:6097},end:{line:251,character:33,position:6128},type:"(isOpen?: boolean) => void"},{name:"toggleItem",description:"Toggle the selection of an item",fileName:"core/src/components/select/select.ts",start:{line:237,character:2,position:5845},end:{line:237,character:51,position:5894},type:"(item: Item, selected?: boolean) => void"},{name:"unselect",description:"Unselect the provided item.",fileName:"core/src/components/select/select.ts",start:{line:231,character:2,position:5630},end:{line:231,character:29,position:5657},type:"(item: Item) => void"}],N={props:u,state:y,api:b};function C(n){let e,i;return e=new g({props:{doc:N}}),{c(){l(e.$$.fragment)},l(t){p(e.$$.fragment,t)},m(t,s){d(e,t,s),i=!0},p:c,i(t){i||(m(e.$$.fragment,t),i=!0)},o(t){h(e.$$.fragment,t),i=!1},d(t){f(e,t)}}}class T extends a{constructor(e){super(),r(this,e,null,C,o,{})}}export{T as component};
