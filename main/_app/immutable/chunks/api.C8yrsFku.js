import{n as t}from"./stores.BQj8HhE3.js";const i=e=>""+e,n={id:void 0,ariaLabel:"Select",open:!1,disabled:!1,items:[],filterText:"",loading:!1,selected:[],navSelector:e=>e.querySelectorAll(".au-select-badge,input"),itemIdFn:i,onOpenChange:t,onFilterTextChange:t,onSelectedChange:t,allowedPlacements:["bottom-start","top-start","bottom-end","top-end"],className:"",menuClassName:"",menuItemClassName:"",badgeClassName:"",slotBadgeLabel:({itemContext:e})=>e.item,slotItem:({itemContext:e})=>e.item};function l(){return{...n}}const s=[{name:"allowedPlacements",description:`List of allowed placements for the dropdown.
This refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).`,fileName:"core/src/components/select/select.ts",start:{line:103,character:2,position:2985},end:{line:103,character:33,position:3016},type:"Placement[]",defaultValue:"['bottom-start', 'top-start', 'bottom-end', 'top-end']"},{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:38,character:2,position:1490},end:{line:38,character:32,position:1520},type:"string | undefined",defaultValue:"'Select'"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:73,character:2,position:2034},end:{line:73,character:25,position:2057},type:"string",defaultValue:"''"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:53,character:2,position:1712},end:{line:53,character:20,position:1730},type:"boolean",defaultValue:"false"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:48,character:2,position:1645},end:{line:48,character:21,position:1664},type:"string",defaultValue:"''"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:33,character:2,position:1402},end:{line:33,character:25,position:1425},type:"string | undefined",defaultValue:"undefined"},{name:"itemIdFn",description:`Custom function to get the id of an item
By default, the item is returned`,fileName:"core/src/components/select/select.ts",start:{line:109,character:2,position:3111},end:{line:109,character:28,position:3137},type:"(item: T) => string",defaultValue:"defaultItemId"},{name:"items",description:"List of available items for the dropdown",fileName:"core/src/components/select/select.ts",start:{line:97,character:2,position:2686},end:{line:97,character:13,position:2697},type:"T[]",defaultValue:"[]"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:78,character:2,position:2114},end:{line:78,character:19,position:2131},type:"boolean",defaultValue:"false"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:63,character:2,position:1854},end:{line:63,character:24,position:1876},type:"string",defaultValue:"''"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:68,character:2,position:1925},end:{line:68,character:28,position:1951},type:"string",defaultValue:"''"},{name:"navSelector",description:"Retrieves navigable elements within an HTML element containing badges and the input.",fileName:"core/src/components/select/select.ts",start:{line:116,character:2,position:3312},end:{line:116,character:81,position:3391},type:"(node: HTMLElement) => NodeListOf<HTMLSpanElement | HTMLInputElement>",defaultValue:"(node: HTMLElement) => node.querySelectorAll('.au-select-badge,input')"},{name:"onFilterTextChange",description:"Callback called when the text filter change",fileName:"core/src/components/select/select.ts",start:{line:130,character:2,position:3640},end:{line:130,character:41,position:3679},type:"(text: string) => void",defaultValue:"noop"},{name:"onOpenChange",description:"Callback called dropdown open state change",fileName:"core/src/components/select/select.ts",start:{line:124,character:2,position:3511},end:{line:124,character:38,position:3547},type:"(isOpen: boolean) => void",defaultValue:"noop"},{name:"onSelectedChange",description:"Callback called when the selection change",fileName:"core/src/components/select/select.ts",start:{line:135,character:2,position:3738},end:{line:135,character:40,position:3776},type:"(selected: T[]) => void",defaultValue:"noop"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:58,character:2,position:1774},end:{line:58,character:16,position:1788},type:"boolean",defaultValue:"false"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:43,character:2,position:1563},end:{line:43,character:19,position:1580},type:"Item[]",defaultValue:"[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:84,character:2,position:2300},end:{line:84,character:55,position:2353},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:90,character:2,position:2508},end:{line:90,character:49,position:2555},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"}],o=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:38,character:2,position:1490},end:{line:38,character:32,position:1520},type:"string | undefined"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:73,character:2,position:2034},end:{line:73,character:25,position:2057},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:53,character:2,position:1712},end:{line:53,character:20,position:1730},type:"boolean"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:48,character:2,position:1645},end:{line:48,character:21,position:1664},type:"string"},{name:"highlighted",description:`Highlighted item context.
It is designed to define the highlighted item in the dropdown menu`,fileName:"core/src/components/select/select.ts",start:{line:174,character:2,position:4467},end:{line:174,character:45,position:4510},type:"ItemContext<Item> | undefined"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:33,character:2,position:1402},end:{line:33,character:25,position:1425},type:"string | undefined"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:78,character:2,position:2114},end:{line:78,character:19,position:2131},type:"boolean"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:63,character:2,position:1854},end:{line:63,character:24,position:1876},type:"string"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:68,character:2,position:1925},end:{line:68,character:28,position:1951},type:"string"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:58,character:2,position:1774},end:{line:58,character:16,position:1788},type:"boolean"},{name:"placement",description:"Current placement of the dropdown",fileName:"core/src/components/select/select.ts",start:{line:179,character:2,position:4561},end:{line:179,character:35,position:4594},type:"Placement | undefined"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:43,character:2,position:1563},end:{line:43,character:19,position:1580},type:"Item[]"},{name:"selectedContexts",description:`/**
  List of selected items to be display`,fileName:"core/src/components/select/select.ts",start:{line:168,character:2,position:4315},end:{line:168,character:40,position:4353},type:"ItemContext<Item>[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:84,character:2,position:2300},end:{line:84,character:55,position:2353},type:"SlotContent<SelectItemContext<Item>>"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:90,character:2,position:2508},end:{line:90,character:49,position:2555},type:"SlotContent<SelectItemContext<Item>>"},{name:"visibleItems",description:"List of item contexts, to be displayed in the menu",fileName:"core/src/components/select/select.ts",start:{line:162,character:2,position:4222},end:{line:162,character:36,position:4256},type:"ItemContext<Item>[]"}],a=[{name:"clear",description:"Clear all the selected items",fileName:"core/src/components/select/select.ts",start:{line:186,character:2,position:4677},end:{line:186,character:16,position:4691},type:"() => void"},{name:"clearText",description:"Clear the filter text",fileName:"core/src/components/select/select.ts",start:{line:191,character:2,position:4730},end:{line:191,character:20,position:4748},type:"() => void"},{name:"close",description:"close the select",fileName:"core/src/components/select/select.ts",start:{line:245,character:2,position:5868},end:{line:245,character:16,position:5882},type:"() => void"},{name:"highlight",description:"Highlight the given item, if there is a corresponding match among the visible list",fileName:"core/src/components/select/select.ts",start:{line:196,character:2,position:4848},end:{line:196,character:30,position:4876},type:"(item: Item) => void"},{name:"highlightFirst",description:"Highlight the first item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:201,character:2,position:4941},end:{line:201,character:25,position:4964},type:"() => void"},{name:"highlightLast",description:"Highlight the last item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:218,character:2,position:5282},end:{line:218,character:24,position:5304},type:"() => void"},{name:"highlightNext",description:`Highlight the next item among the visible list.
Loop to the first item if needed`,fileName:"core/src/components/select/select.ts",start:{line:213,character:2,position:5196},end:{line:213,character:24,position:5218},type:"() => void"},{name:"highlightPrevious",description:`Highlight the previous item among the visible list
Loop to the last item if needed`,fileName:"core/src/components/select/select.ts",start:{line:207,character:2,position:5068},end:{line:207,character:28,position:5094},type:"() => void"},{name:"open",description:"open the select",fileName:"core/src/components/select/select.ts",start:{line:241,character:2,position:5822},end:{line:241,character:15,position:5835},type:"() => void"},{name:"select",description:`Select the provided item.
The selected list is used to`,fileName:"core/src/components/select/select.ts",start:{line:225,character:2,position:5417},end:{line:225,character:27,position:5442},type:"(item: Item) => void"},{name:"toggle",description:"Toggle the dropdown menu",fileName:"core/src/components/select/select.ts",start:{line:250,character:2,position:5992},end:{line:250,character:33,position:6023},type:"(isOpen?: boolean) => void"},{name:"toggleItem",description:"Toggle the selection of an item",fileName:"core/src/components/select/select.ts",start:{line:236,character:2,position:5740},end:{line:236,character:51,position:5789},type:"(item: Item, selected?: boolean) => void"},{name:"unselect",description:"Unselect the provided item.",fileName:"core/src/components/select/select.ts",start:{line:230,character:2,position:5525},end:{line:230,character:29,position:5552},type:"(item: Item) => void"}],r={props:s,state:o,api:a};export{r as d,l as g};
