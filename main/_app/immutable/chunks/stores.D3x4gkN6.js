const n=`import { DestroyRef, inject, signal } from '@angular/core';
import { ZoneWrapper } from './zone';
export * from '@agnos-ui/core/utils/stores';
/**
 * Converts a Tansu \`ReadableSignal\` to an Angular \`Signal\`.
 *
 * This function wraps the provided Tansu signal in an Angular signal, ensuring that updates
 * are properly handled within Angular's zone. It subscribes to the Tansu signal and updates
 * the Angular signal with the received values. The equality function for the Angular signal
 * is set to always return false, ensuring that every new value from the Tansu signal triggers
 * an update.
 *
 * @template T - The type of the value emitted by the signals.
 * @param tansuSignal - The Tansu signal to convert.
 * @returns - The resulting Angular signal.
 */
export const toAngularSignal = (tansuSignal) => {
    const zoneWrapper = inject(ZoneWrapper);
    // The equality of objects from 2 sequential emissions is already checked in tansu signal.
    // Here we'll always emit the value received from tansu signal, therefor the equality function
    const res = signal(undefined, { equal: () => false });
    const subscription = zoneWrapper.outsideNgZone(tansuSignal.subscribe)((value) => {
        res.set(value);
        zoneWrapper.planNgZoneRun();
    });
    inject(DestroyRef).onDestroy(zoneWrapper.outsideNgZone(subscription));
    return res;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL3N0b3Jlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUVuQyxjQUFjLDZCQUE2QixDQUFDO0FBRTVDOzs7Ozs7Ozs7Ozs7R0FZRztBQUNILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUFJLFdBQThCLEVBQWEsRUFBRTtJQUMvRSxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDeEMsMEZBQTBGO0lBQzFGLDhGQUE4RjtJQUM5RixNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsU0FBcUIsRUFBRSxFQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO0lBQ2hFLE1BQU0sWUFBWSxHQUFHLFdBQVcsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDL0UsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNmLFdBQVcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUM3QixDQUFDLENBQUMsQ0FBQztJQUNILE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQ3RFLE9BQU8sR0FBRyxDQUFDO0FBQ1osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge1JlYWRhYmxlU2lnbmFsfSBmcm9tICdAYW1hZGV1cy1pdC1ncm91cC90YW5zdSc7XG5pbXBvcnQgdHlwZSB7U2lnbmFsfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGVzdHJveVJlZiwgaW5qZWN0LCBzaWduYWx9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtab25lV3JhcHBlcn0gZnJvbSAnLi96b25lJztcblxuZXhwb3J0ICogZnJvbSAnQGFnbm9zLXVpL2NvcmUvdXRpbHMvc3RvcmVzJztcblxuLyoqXG4gKiBDb252ZXJ0cyBhIFRhbnN1IGBSZWFkYWJsZVNpZ25hbGAgdG8gYW4gQW5ndWxhciBgU2lnbmFsYC5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHdyYXBzIHRoZSBwcm92aWRlZCBUYW5zdSBzaWduYWwgaW4gYW4gQW5ndWxhciBzaWduYWwsIGVuc3VyaW5nIHRoYXQgdXBkYXRlc1xuICogYXJlIHByb3Blcmx5IGhhbmRsZWQgd2l0aGluIEFuZ3VsYXIncyB6b25lLiBJdCBzdWJzY3JpYmVzIHRvIHRoZSBUYW5zdSBzaWduYWwgYW5kIHVwZGF0ZXNcbiAqIHRoZSBBbmd1bGFyIHNpZ25hbCB3aXRoIHRoZSByZWNlaXZlZCB2YWx1ZXMuIFRoZSBlcXVhbGl0eSBmdW5jdGlvbiBmb3IgdGhlIEFuZ3VsYXIgc2lnbmFsXG4gKiBpcyBzZXQgdG8gYWx3YXlzIHJldHVybiBmYWxzZSwgZW5zdXJpbmcgdGhhdCBldmVyeSBuZXcgdmFsdWUgZnJvbSB0aGUgVGFuc3Ugc2lnbmFsIHRyaWdnZXJzXG4gKiBhbiB1cGRhdGUuXG4gKlxuICogQHRlbXBsYXRlIFQgLSBUaGUgdHlwZSBvZiB0aGUgdmFsdWUgZW1pdHRlZCBieSB0aGUgc2lnbmFscy5cbiAqIEBwYXJhbSB0YW5zdVNpZ25hbCAtIFRoZSBUYW5zdSBzaWduYWwgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIC0gVGhlIHJlc3VsdGluZyBBbmd1bGFyIHNpZ25hbC5cbiAqL1xuZXhwb3J0IGNvbnN0IHRvQW5ndWxhclNpZ25hbCA9IDxUPih0YW5zdVNpZ25hbDogUmVhZGFibGVTaWduYWw8VD4pOiBTaWduYWw8VD4gPT4ge1xuXHRjb25zdCB6b25lV3JhcHBlciA9IGluamVjdChab25lV3JhcHBlcik7XG5cdC8vIFRoZSBlcXVhbGl0eSBvZiBvYmplY3RzIGZyb20gMiBzZXF1ZW50aWFsIGVtaXNzaW9ucyBpcyBhbHJlYWR5IGNoZWNrZWQgaW4gdGFuc3Ugc2lnbmFsLlxuXHQvLyBIZXJlIHdlJ2xsIGFsd2F5cyBlbWl0IHRoZSB2YWx1ZSByZWNlaXZlZCBmcm9tIHRhbnN1IHNpZ25hbCwgdGhlcmVmb3IgdGhlIGVxdWFsaXR5IGZ1bmN0aW9uXG5cdGNvbnN0IHJlcyA9IHNpZ25hbCh1bmRlZmluZWQgYXMgYW55IGFzIFQsIHtlcXVhbDogKCkgPT4gZmFsc2V9KTtcblx0Y29uc3Qgc3Vic2NyaXB0aW9uID0gem9uZVdyYXBwZXIub3V0c2lkZU5nWm9uZSh0YW5zdVNpZ25hbC5zdWJzY3JpYmUpKCh2YWx1ZSkgPT4ge1xuXHRcdHJlcy5zZXQodmFsdWUpO1xuXHRcdHpvbmVXcmFwcGVyLnBsYW5OZ1pvbmVSdW4oKTtcblx0fSk7XG5cdGluamVjdChEZXN0cm95UmVmKS5vbkRlc3Ryb3koem9uZVdyYXBwZXIub3V0c2lkZU5nWm9uZShzdWJzY3JpcHRpb24pKTtcblx0cmV0dXJuIHJlcztcbn07XG4iXX0=`;export{n as default};
