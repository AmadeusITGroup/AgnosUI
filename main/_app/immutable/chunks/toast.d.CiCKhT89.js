const t='/// <reference types="react" />\nexport * from \'@agnos-ui/react-headless/components/toast\';\nexport declare const Toast: import("react").ForwardRefExoticComponent<Partial<Omit<import("core/dist/components/toast/toast").ToastProps, `slot${string}`> & {\n    slotDefault: import("react/headless/dist/types").SlotContent<import("core/dist/types").WidgetSlotContext<import("react/headless/dist/types").AdaptWidgetSlots<import("core/dist/services/extendWidget").ExtendWidgetProps<import("core/dist/components/alert/common").CommonAlertWidget, import("@agnos-ui/react-headless/components/toast").ToastExtraProps, import("@agnos-ui/react-headless/components/toast").ExtraDirectives>>> & Omit<Omit<import("core/dist/types").WidgetSlotContext<import("core/dist/services/extendWidget").ExtendWidgetProps<import("core/dist/components/alert/common").CommonAlertWidget, import("@agnos-ui/react-headless/components/toast").ToastExtraProps, import("@agnos-ui/react-headless/components/toast").ExtraDirectives>> & Omit<import("core/dist/components/alert/common").CommonAlertContext, keyof import("core/dist/types").WidgetSlotContext<any>>, keyof import("core/dist/types").WidgetSlotContext<any>>, `slot${string}`> & {}>;\n    slotStructure: import("react/headless/dist/types").SlotContent<import("core/dist/types").WidgetSlotContext<import("react/headless/dist/types").AdaptWidgetSlots<import("core/dist/services/extendWidget").ExtendWidgetProps<import("core/dist/components/alert/common").CommonAlertWidget, import("@agnos-ui/react-headless/components/toast").ToastExtraProps, import("@agnos-ui/react-headless/components/toast").ExtraDirectives>>> & Omit<Omit<import("core/dist/types").WidgetSlotContext<import("core/dist/services/extendWidget").ExtendWidgetProps<import("core/dist/components/alert/common").CommonAlertWidget, import("@agnos-ui/react-headless/components/toast").ToastExtraProps, import("@agnos-ui/react-headless/components/toast").ExtraDirectives>> & Omit<import("core/dist/components/alert/common").CommonAlertContext, keyof import("core/dist/types").WidgetSlotContext<any>>, keyof import("core/dist/types").WidgetSlotContext<any>>, `slot${string}`> & {}>;\n    slotHeader: import("react/headless/dist/types").SlotContent<import("core/dist/types").WidgetSlotContext<import("react/headless/dist/types").AdaptWidgetSlots<import("core/dist/components/toast/toast").ToastWidget>> & Omit<Omit<import("core/dist/components/toast/toast").ToastContext, keyof import("core/dist/types").WidgetSlotContext<any>>, `slot${string}`> & {}>;\n}> & {\n    children?: import("react").ReactNode;\n} & import("react").RefAttributes<unknown>>;\n';export{t as default};
