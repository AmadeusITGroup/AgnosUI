const e=[{name:"ariaLabel",description:"The aria label",fileName:"core/lib/rating.ts",start:{line:62,character:2,position:1500},end:{line:62,character:20,position:1518},type:"string",defaultValue:"'Rating'"},{name:"ariaLabelledBy",description:"The aria labelled by",fileName:"core/lib/rating.ts",start:{line:67,character:2,position:1556},end:{line:67,character:25,position:1579},type:"string",defaultValue:"''"},{name:"ariaValueTextFn",description:"Return the value for the 'aria-valuetext' attribute.",fileName:"core/lib/rating.ts",start:{line:76,character:2,position:1798},end:{line:76,character:65,position:1861},type:"(rating: number, maxRating: number) => string",defaultValue:"(rating: number, maxRating: number) => `${rating} out of ${maxRating}`"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/lib/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"If `true`, the rating is disabled.",fileName:"core/lib/rating.ts",start:{line:34,character:2,position:945},end:{line:34,character:20,position:963},type:"boolean",defaultValue:"false"},{name:"maxRating",description:"The maximum rating that can be given.",fileName:"core/lib/rating.ts",start:{line:29,character:2,position:875},end:{line:29,character:20,position:893},type:"number",defaultValue:"10"},{name:"onHover",description:`An event emitted when the user is hovering over a given rating.

Event payload is equal to the rating being hovered over.`,fileName:"core/lib/rating.ts",start:{line:90,character:2,position:2171},end:{line:90,character:36,position:2205},type:"(rating: number) => void",defaultValue:"noop"},{name:"onLeave",description:`An event emitted when the user stops hovering over a given rating.

Event payload is equal to the rating of the last item being hovered over.`,fileName:"core/lib/rating.ts",start:{line:97,character:2,position:2371},end:{line:97,character:36,position:2405},type:"(rating: number) => void",defaultValue:"noop"},{name:"onRatingChange",description:`An event emitted when the rating is changed.

Event payload is equal to the newly selected rating.`,fileName:"core/lib/rating.ts",start:{line:83,character:2,position:1984},end:{line:83,character:43,position:2025},type:"(rating: number) => void",defaultValue:"noop"},{name:"rating",description:"The current rating. Could be a decimal value like `3.75`.",fileName:"core/lib/rating.ts",start:{line:24,character:2,position:805},end:{line:24,character:17,position:820},type:"number",defaultValue:"0"},{name:"readonly",description:"If `true`, the rating can't be changed.",fileName:"core/lib/rating.ts",start:{line:39,character:2,position:1020},end:{line:39,character:20,position:1038},type:"boolean",defaultValue:"false"},{name:"resettable",description:`Define if the rating can be reset.

If set to true, the user can 'unset' the rating value by cliking on the current rating value.`,fileName:"core/lib/rating.ts",start:{line:46,character:2,position:1192},end:{line:46,character:22,position:1212},type:"boolean",defaultValue:"true"},{name:"slotStar",description:"The template to override the way each star is displayed.",fileName:"core/lib/rating.ts",start:{line:57,character:2,position:1433},end:{line:57,character:37,position:1468},type:"SlotContent<StarContext>",defaultValue:"({fill}) => String.fromCharCode(fill === 100 ? 9733 : 9734)"},{name:"tabindex",description:"Allows setting a custom rating tabindex.\nIf the component is disabled, `tabindex` will still be set to `-1`.",fileName:"core/lib/rating.ts",start:{line:52,character:2,position:1342},end:{line:52,character:19,position:1359},type:"number",defaultValue:"0"}],t=[{name:"ariaLabel",description:"The aria label",fileName:"core/lib/rating.ts",start:{line:62,character:2,position:1500},end:{line:62,character:20,position:1518},type:"string"},{name:"ariaLabelledBy",description:"The aria labelled by",fileName:"core/lib/rating.ts",start:{line:67,character:2,position:1556},end:{line:67,character:25,position:1579},type:"string"},{name:"ariaValueText",description:"the aria value of the rating",fileName:"core/lib/rating.ts",start:{line:104,character:2,position:2518},end:{line:104,character:24,position:2540},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/lib/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"If `true`, the rating is disabled.",fileName:"core/lib/rating.ts",start:{line:34,character:2,position:945},end:{line:34,character:20,position:963},type:"boolean"},{name:"isInteractive",description:"is the rating interactive i.e. listening to hover, click and keyboard events",fileName:"core/lib/rating.ts",start:{line:112,character:2,position:2788},end:{line:112,character:25,position:2811},type:"boolean"},{name:"maxRating",description:"The maximum rating that can be given.",fileName:"core/lib/rating.ts",start:{line:29,character:2,position:875},end:{line:29,character:20,position:893},type:"number"},{name:"rating",description:"The current rating. Could be a decimal value like `3.75`.",fileName:"core/lib/rating.ts",start:{line:24,character:2,position:805},end:{line:24,character:17,position:820},type:"number"},{name:"readonly",description:"If `true`, the rating can't be changed.",fileName:"core/lib/rating.ts",start:{line:39,character:2,position:1020},end:{line:39,character:20,position:1038},type:"boolean"},{name:"resettable",description:`Define if the rating can be reset.

If set to true, the user can 'unset' the rating value by cliking on the current rating value.`,fileName:"core/lib/rating.ts",start:{line:46,character:2,position:1192},end:{line:46,character:22,position:1212},type:"boolean"},{name:"slotStar",description:"The template to override the way each star is displayed.",fileName:"core/lib/rating.ts",start:{line:57,character:2,position:1433},end:{line:57,character:37,position:1468},type:"SlotContent<StarContext>"},{name:"stars",description:"the list of stars",fileName:"core/lib/rating.ts",start:{line:116,character:2,position:2845},end:{line:116,character:23,position:2866},type:"StarContext[]"},{name:"tabindex",description:"Allows setting a custom rating tabindex.\nIf the component is disabled, `tabindex` will still be set to `-1`.",fileName:"core/lib/rating.ts",start:{line:52,character:2,position:1342},end:{line:52,character:19,position:1359},type:"number"},{name:"visibleRating",description:"the visible value of the rating (it changes when hovering over the rating even though the real value did not change)",fileName:"core/lib/rating.ts",start:{line:108,character:2,position:2673},end:{line:108,character:24,position:2695},type:"number"}],i=[],a={props:e,state:t,api:i};export{a as d};
