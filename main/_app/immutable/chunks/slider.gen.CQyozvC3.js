const G=`export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"slider.gen.js","sourceRoot":"","sources":["../../../../src/components/slider/slider.gen.ts"],"names":[],"mappings":"","sourcesContent":["import type {WidgetSlotContext, SlotContent, Widget, Directive} from '@agnos-ui/angular-headless';\n\nexport type SliderContext = WidgetSlotContext<SliderWidget>;\n\nexport type SliderSlotLabelContext = SliderContext & {value: number};\n\nexport type SliderSlotHandleContext = SliderContext & {item: SliderHandle};\n\nexport interface SliderState {\n\t/**\n\t * Sorted slider values\n\t */\n\tsortedValues: number[];\n\t/**\n\t * Combined label left offset in %\n\t */\n\tcombinedLabelPositionLeft: number;\n\t/**\n\t * Combined label top offset in %\n\t */\n\tcombinedLabelPositionTop: number;\n\t/**\n\t * If true, the minimum label will be visible\n\t */\n\tminValueLabelDisplay: boolean;\n\t/**\n\t * If true, the maximum label will be visible\n\t */\n\tmaxValueLabelDisplay: boolean;\n\t/**\n\t * If true, the label when the handles are close is visible\n\t */\n\tcombinedLabelDisplay: boolean;\n\t/**\n\t * Array of the sorted handles to display\n\t */\n\tsortedHandles: SliderHandle[];\n\t/**\n\t * Array of objects representing progress display options\n\t */\n\tprogressDisplayOptions: ProgressDisplayOptions[];\n\t/**\n\t * Array of objects representing handle display options\n\t */\n\thandleDisplayOptions: HandleDisplayOptions[];\n\t/**\n\t * Check if the slider is interactive, meaning it is not disabled or readonly\n\t */\n\tinteractive: boolean;\n\t/**\n\t * Minimum value that can be assigned to the slider\n\t */\n\tmin: number;\n\t/**\n\t * Maximum value that can be assigned to the slider\n\t */\n\tmax: number;\n\t/**\n\t * Unit value between slider steps\n\t */\n\tstepSize: number;\n\t/**\n\t * If `true` slider value cannot be changed but the slider is still focusable\n\t */\n\treadonly: boolean;\n\t/**\n\t * If `true` slider value cannot be changed and the slider cannot be focused\n\t */\n\tdisabled: boolean;\n\t/**\n\t * If `true` is vertically positioned otherwise it is horizontal\n\t */\n\tvertical: boolean;\n\t/**\n\t * Current slider values\n\t */\n\tvalues: number[];\n\t/**\n\t * If `true` the value labels are displayed on the slider\n\t */\n\tshowValueLabels: boolean;\n\t/**\n\t * If `true` the min and max labels are displayed on the slider\n\t */\n\tshowMinMaxLabels: boolean;\n\t/**\n\t * It `true` slider display is inversed\n\t */\n\trtl: boolean;\n\t/**\n\t * CSS classes to be applied on the widget main container\n\t */\n\tclassName: string;\n\t/**\n\t * Slot to change the default display of the slider\n\t */\n\tstructure: SlotContent<SliderContext>;\n\t/**\n\t * Slot to change the default labels of the slider\n\t */\n\tlabel: SlotContent<SliderSlotLabelContext>;\n\t/**\n\t * Slot to change the handlers\n\t */\n\thandle: SlotContent<SliderSlotHandleContext>;\n}\n\nexport interface SliderProps {\n\t/**\n\t * Return the value for the 'aria-label' attribute for the handle\n\t */\n\tariaLabelHandle: (value: number, sortedIndex: number, index: number) => string;\n\t/**\n\t * Return the value for the 'aria-valuetext' attribute for the handle\n\t */\n\tariaValueText: (value: number, sortedIndex: number, index: number) => string;\n\t/**\n\t * An event emitted when slider values are changed\n\t * \n\t * Event payload equals to the updated slider values\n\t */\n\tonValuesChange: (values: number[]) => void;\n\t/**\n\t * Minimum value that can be assigned to the slider\n\t */\n\tmin: number;\n\t/**\n\t * Maximum value that can be assigned to the slider\n\t */\n\tmax: number;\n\t/**\n\t * Unit value between slider steps\n\t */\n\tstepSize: number;\n\t/**\n\t * If `true` slider value cannot be changed but the slider is still focusable\n\t */\n\treadonly: boolean;\n\t/**\n\t * If `true` slider value cannot be changed and the slider cannot be focused\n\t */\n\tdisabled: boolean;\n\t/**\n\t * If `true` is vertically positioned otherwise it is horizontal\n\t */\n\tvertical: boolean;\n\t/**\n\t * Current slider values\n\t */\n\tvalues: number[];\n\t/**\n\t * If `true` the value labels are displayed on the slider\n\t */\n\tshowValueLabels: boolean;\n\t/**\n\t * If `true` the min and max labels are displayed on the slider\n\t */\n\tshowMinMaxLabels: boolean;\n\t/**\n\t * It `true` slider display is inversed\n\t */\n\trtl: boolean;\n\t/**\n\t * CSS classes to be applied on the widget main container\n\t */\n\tclassName: string;\n\t/**\n\t * Slot to change the default display of the slider\n\t */\n\tstructure: SlotContent<SliderContext>;\n\t/**\n\t * Slot to change the default labels of the slider\n\t */\n\tlabel: SlotContent<SliderSlotLabelContext>;\n\t/**\n\t * Slot to change the handlers\n\t */\n\thandle: SlotContent<SliderSlotHandleContext>;\n}\n\nexport type SliderWidget = Widget<SliderProps, SliderState, SliderApi, SliderActions, SliderDirectives>;\n\nexport interface ProgressDisplayOptions {\n\t/**\n\t * Right offset of the progress in %\n\t */\n\tleft: number | null;\n\t/**\n\t * Left offset of the progress in %\n\t */\n\tright: number | null;\n\t/**\n\t * Top offset of the progress in %\n\t */\n\ttop: number | null;\n\t/**\n\t * Bottom offset of the progress in %\n\t */\n\tbottom: number | null;\n\t/**\n\t * Width of the progress in %\n\t */\n\twidth: number;\n\t/**\n\t * Height of hte progress in %\n\t */\n\theight: number;\n}\n\nexport interface HandleDisplayOptions {\n\t/**\n\t * Left offset of the handle in %\n\t */\n\tleft: number | null;\n\t/**\n\t * Top offset of the handle in %\n\t */\n\ttop: number | null;\n}\n\nexport interface SliderHandle {\n\t/**\n\t * Value of the handle\n\t */\n\tvalue: number;\n\t/**\n\t * Handle id\n\t */\n\tid: number;\n\t/**\n\t * ariaLabel of the handle\n\t */\n\tariaLabel: string;\n\t/**\n\t * ariaValueText of the handle\n\t */\n\tariaValueText: string;\n}\n\nexport interface SliderApi {\n}\n\nexport interface SliderDirectives {\n\t/**\n\t * Directive to get the slider component elementRef\n\t */\n\tsliderDirective: Directive;\n\t/**\n\t * Directive used to style the progress display for each handle\n\t */\n\tprogressDisplayDirective: Directive<{option: ProgressDisplayOptions}>;\n\t/**\n\t * Directive to apply to the slider clickable area, to directly move the handle to a given specific position\n\t */\n\tclickableAreaDirective: Directive;\n\t/**\n\t * Directive to apply to the slider handle if any\n\t */\n\thandleDirective: Directive<{item: SliderHandle}>;\n\t/**\n\t * Directive to get the minLabel elementRef\n\t */\n\tminLabelDirective: Directive;\n\t/**\n\t * Directive to get the maxLabel elementRef\n\t */\n\tmaxLabelDirective: Directive;\n\t/**\n\t * Directive to apply to the handle when combined label display is active\n\t */\n\tcombinedHandleLabelDisplayDirective: Directive;\n\t/**\n\t * Directive to apply to the handle when combined label display is not active\n\t */\n\thandleLabelDisplayDirective: Directive<{index: number}>;\n}\n\nexport interface SliderActions {\n\t/**\n\t * Method to handle click on the slider\n\t */\n\tclick(event: MouseEvent): void;\n\t/**\n\t * Method to process the keyboard event\n\t */\n\tkeydown(event: KeyboardEvent, handleNumber: number): void;\n\t/**\n\t * Method describing the behavior of the slider handle on mouse down event\n\t */\n\tmouseDown(event: MouseEvent, handleId: number): void;\n\t/**\n\t * Method describing the behavior of the slider handle on touch start event\n\t */\n\ttouchStart(event: TouchEvent, handleId: number): void;\n}\n\n"]}`;export{G as default};
