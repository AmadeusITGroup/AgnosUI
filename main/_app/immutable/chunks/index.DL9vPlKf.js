const c=`/*
 * Public API Surface of @agnos-ui/angular-bootstrap
 */
export * from '@agnos-ui/angular-headless';
export * from './agnos-ui-angular.module';
export { createAccordion, getAccordionDefaultConfig, createAccordionItem, factoryCreateAccordion } from './components/accordion';
export * from './components/accordion';
export { createAlert, getAlertDefaultConfig } from './components/alert';
export * from './components/alert';
export * from './components/collapse';
export { createModal, getModalDefaultConfig, modalCloseButtonClick, modalOutsideClick } from './components/modal';
export * from './components/modal';
export { createPagination, getPaginationDefaultConfig } from './components/pagination';
export * from './components/pagination';
export { createProgressbar, getProgressbarDefaultConfig } from './components/progressbar';
export * from './components/progressbar';
export { createRating, getRatingDefaultConfig } from './components/rating';
export * from './components/rating';
export { createSelect, getSelectDefaultConfig } from './components/select';
export * from './components/select';
export { createSlider, getSliderDefaultConfig } from './components/slider';
export * from './components/slider';
export { createToast, getToastDefaultConfig } from './components/toast';
export * from './components/toast';
export { createTree, getTreeDefaultConfig } from './components/tree';
export * from './components/tree';
export * from '@agnos-ui/core-bootstrap/services/transitions';
export * from '@agnos-ui/core-bootstrap/types';
export { widgetsConfigInjectionToken, provideWidgetsConfig, injectWidgetConfig, injectWidgetsConfig, callWidgetFactory } from './config';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFDSCxjQUFjLDRCQUE0QixDQUFDO0FBRTNDLGNBQWMsMkJBQTJCLENBQUM7QUFlMUMsT0FBTyxFQUFDLGVBQWUsRUFBRSx5QkFBeUIsRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQy9ILGNBQWMsd0JBQXdCLENBQUM7QUFHdkMsT0FBTyxFQUFDLFdBQVcsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3RFLGNBQWMsb0JBQW9CLENBQUM7QUFFbkMsY0FBYyx1QkFBdUIsQ0FBQztBQUd0QyxPQUFPLEVBQUMsV0FBVyxFQUFFLHFCQUFxQixFQUFFLHFCQUFxQixFQUFFLGlCQUFpQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFDaEgsY0FBYyxvQkFBb0IsQ0FBQztBQVluQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUUsMEJBQTBCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUNyRixjQUFjLHlCQUF5QixDQUFDO0FBR3hDLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSwyQkFBMkIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3hGLGNBQWMsMEJBQTBCLENBQUM7QUFHekMsT0FBTyxFQUFDLFlBQVksRUFBRSxzQkFBc0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3pFLGNBQWMscUJBQXFCLENBQUM7QUFZcEMsT0FBTyxFQUFDLFlBQVksRUFBRSxzQkFBc0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3pFLGNBQWMscUJBQXFCLENBQUM7QUFjcEMsT0FBTyxFQUFDLFlBQVksRUFBRSxzQkFBc0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3pFLGNBQWMscUJBQXFCLENBQUM7QUFHcEMsT0FBTyxFQUFDLFdBQVcsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3RFLGNBQWMsb0JBQW9CLENBQUM7QUFHbkMsT0FBTyxFQUFDLFVBQVUsRUFBRSxvQkFBb0IsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ25FLGNBQWMsbUJBQW1CLENBQUM7QUFFbEMsY0FBYywrQ0FBK0MsQ0FBQztBQUM5RCxjQUFjLGdDQUFnQyxDQUFDO0FBRy9DLE9BQU8sRUFBQywyQkFBMkIsRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUIsRUFBRSxpQkFBaUIsRUFBQyxNQUFNLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgQGFnbm9zLXVpL2FuZ3VsYXItYm9vdHN0cmFwXG4gKi9cbmV4cG9ydCAqIGZyb20gJ0BhZ25vcy11aS9hbmd1bGFyLWhlYWRsZXNzJztcblxuZXhwb3J0ICogZnJvbSAnLi9hZ25vcy11aS1hbmd1bGFyLm1vZHVsZSc7XG5cbmV4cG9ydCB0eXBlIHtcblx0QWNjb3JkaW9uQXBpLFxuXHRBY2NvcmRpb25JdGVtQ29udGV4dCxcblx0QWNjb3JkaW9uSXRlbVByb3BzLFxuXHRBY2NvcmRpb25JdGVtU3RhdGUsXG5cdEFjY29yZGlvbkl0ZW1XaWRnZXQsXG5cdEFjY29yZGlvblByb3BzLFxuXHRBY2NvcmRpb25TdGF0ZSxcblx0QWNjb3JkaW9uV2lkZ2V0LFxuXHRBY2NvcmRpb25EaXJlY3RpdmVzLFxuXHRBY2NvcmRpb25JdGVtQXBpLFxuXHRBY2NvcmRpb25JdGVtRGlyZWN0aXZlcyxcbn0gZnJvbSAnLi9jb21wb25lbnRzL2FjY29yZGlvbic7XG5leHBvcnQge2NyZWF0ZUFjY29yZGlvbiwgZ2V0QWNjb3JkaW9uRGVmYXVsdENvbmZpZywgY3JlYXRlQWNjb3JkaW9uSXRlbSwgZmFjdG9yeUNyZWF0ZUFjY29yZGlvbn0gZnJvbSAnLi9jb21wb25lbnRzL2FjY29yZGlvbic7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvYWNjb3JkaW9uJztcblxuZXhwb3J0IHR5cGUge0FsZXJ0Q29udGV4dCwgQWxlcnRQcm9wcywgQWxlcnRTdGF0ZSwgQWxlcnRXaWRnZXQsIEFsZXJ0QXBpLCBBbGVydERpcmVjdGl2ZXN9IGZyb20gJy4vY29tcG9uZW50cy9hbGVydCc7XG5leHBvcnQge2NyZWF0ZUFsZXJ0LCBnZXRBbGVydERlZmF1bHRDb25maWd9IGZyb20gJy4vY29tcG9uZW50cy9hbGVydCc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvYWxlcnQnO1xuXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvY29sbGFwc2UnO1xuXG5leHBvcnQgdHlwZSB7TW9kYWxDb250ZXh0LCBNb2RhbFByb3BzLCBNb2RhbFN0YXRlLCBNb2RhbFdpZGdldCwgTW9kYWxBcGksIE1vZGFsRGlyZWN0aXZlcywgTW9kYWxCZWZvcmVDbG9zZUV2ZW50fSBmcm9tICcuL2NvbXBvbmVudHMvbW9kYWwnO1xuZXhwb3J0IHtjcmVhdGVNb2RhbCwgZ2V0TW9kYWxEZWZhdWx0Q29uZmlnLCBtb2RhbENsb3NlQnV0dG9uQ2xpY2ssIG1vZGFsT3V0c2lkZUNsaWNrfSBmcm9tICcuL2NvbXBvbmVudHMvbW9kYWwnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL21vZGFsJztcblxuZXhwb3J0IHR5cGUge1xuXHRQYWdpbmF0aW9uQ29udGV4dCxcblx0UGFnaW5hdGlvbk51bWJlckNvbnRleHQsXG5cdFBhZ2luYXRpb25Qcm9wcyxcblx0UGFnaW5hdGlvblN0YXRlLFxuXHRQYWdpbmF0aW9uV2lkZ2V0LFxuXHREaXJlY3Rpb25zSHJlZnMsXG5cdFBhZ2luYXRpb25BcGksXG5cdFBhZ2luYXRpb25EaXJlY3RpdmVzLFxufSBmcm9tICcuL2NvbXBvbmVudHMvcGFnaW5hdGlvbic7XG5leHBvcnQge2NyZWF0ZVBhZ2luYXRpb24sIGdldFBhZ2luYXRpb25EZWZhdWx0Q29uZmlnfSBmcm9tICcuL2NvbXBvbmVudHMvcGFnaW5hdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvcGFnaW5hdGlvbic7XG5cbmV4cG9ydCB0eXBlIHtQcm9ncmVzc2JhckNvbnRleHQsIFByb2dyZXNzYmFyUHJvcHMsIFByb2dyZXNzYmFyU3RhdGUsIFByb2dyZXNzYmFyV2lkZ2V0LCBQcm9ncmVzc2JhckRpcmVjdGl2ZXN9IGZyb20gJy4vY29tcG9uZW50cy9wcm9ncmVzc2Jhcic7XG5leHBvcnQge2NyZWF0ZVByb2dyZXNzYmFyLCBnZXRQcm9ncmVzc2JhckRlZmF1bHRDb25maWd9IGZyb20gJy4vY29tcG9uZW50cy9wcm9ncmVzc2Jhcic7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvcHJvZ3Jlc3NiYXInO1xuXG5leHBvcnQgdHlwZSB7UmF0aW5nUHJvcHMsIFJhdGluZ1N0YXRlLCBSYXRpbmdXaWRnZXQsIFN0YXJDb250ZXh0LCBSYXRpbmdBcGksIFJhdGluZ0RpcmVjdGl2ZXN9IGZyb20gJy4vY29tcG9uZW50cy9yYXRpbmcnO1xuZXhwb3J0IHtjcmVhdGVSYXRpbmcsIGdldFJhdGluZ0RlZmF1bHRDb25maWd9IGZyb20gJy4vY29tcG9uZW50cy9yYXRpbmcnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL3JhdGluZyc7XG5cbmV4cG9ydCB0eXBlIHtcblx0U2VsZWN0Q29udGV4dCxcblx0U2VsZWN0SXRlbUNvbnRleHQsXG5cdFNlbGVjdFByb3BzLFxuXHRTZWxlY3RTdGF0ZSxcblx0U2VsZWN0V2lkZ2V0LFxuXHRJdGVtQ29udGV4dCxcblx0U2VsZWN0QXBpLFxuXHRTZWxlY3REaXJlY3RpdmVzLFxufSBmcm9tICcuL2NvbXBvbmVudHMvc2VsZWN0JztcbmV4cG9ydCB7Y3JlYXRlU2VsZWN0LCBnZXRTZWxlY3REZWZhdWx0Q29uZmlnfSBmcm9tICcuL2NvbXBvbmVudHMvc2VsZWN0JztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9zZWxlY3QnO1xuXG5leHBvcnQgdHlwZSB7XG5cdFNsaWRlckNvbnRleHQsXG5cdFNsaWRlclByb3BzLFxuXHRTbGlkZXJTbG90SGFuZGxlQ29udGV4dCxcblx0U2xpZGVyU2xvdExhYmVsQ29udGV4dCxcblx0U2xpZGVyU3RhdGUsXG5cdFNsaWRlcldpZGdldCxcblx0U2xpZGVySGFuZGxlLFxuXHRIYW5kbGVEaXNwbGF5T3B0aW9ucyxcblx0UHJvZ3Jlc3NEaXNwbGF5T3B0aW9ucyxcblx0U2xpZGVyRGlyZWN0aXZlcyxcbn0gZnJvbSAnLi9jb21wb25lbnRzL3NsaWRlcic7XG5leHBvcnQge2NyZWF0ZVNsaWRlciwgZ2V0U2xpZGVyRGVmYXVsdENvbmZpZ30gZnJvbSAnLi9jb21wb25lbnRzL3NsaWRlcic7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvc2xpZGVyJztcblxuZXhwb3J0IHR5cGUge1RvYXN0Q29udGV4dCwgVG9hc3RQcm9wcywgVG9hc3RTdGF0ZSwgVG9hc3RXaWRnZXQsIFRvYXN0QXBpLCBUb2FzdERpcmVjdGl2ZXN9IGZyb20gJy4vY29tcG9uZW50cy90b2FzdCc7XG5leHBvcnQge2NyZWF0ZVRvYXN0LCBnZXRUb2FzdERlZmF1bHRDb25maWd9IGZyb20gJy4vY29tcG9uZW50cy90b2FzdCc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvdG9hc3QnO1xuXG5leHBvcnQgdHlwZSB7VHJlZVByb3BzLCBUcmVlU3RhdGUsIFRyZWVXaWRnZXQsIFRyZWVBcGksIFRyZWVEaXJlY3RpdmVzLCBUcmVlSXRlbSwgTm9ybWFsaXplZFRyZWVJdGVtfSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZSc7XG5leHBvcnQge2NyZWF0ZVRyZWUsIGdldFRyZWVEZWZhdWx0Q29uZmlnfSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZSc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvdHJlZSc7XG5cbmV4cG9ydCAqIGZyb20gJ0BhZ25vcy11aS9jb3JlLWJvb3RzdHJhcC9zZXJ2aWNlcy90cmFuc2l0aW9ucyc7XG5leHBvcnQgKiBmcm9tICdAYWdub3MtdWkvY29yZS1ib290c3RyYXAvdHlwZXMnO1xuXG5leHBvcnQgdHlwZSB7V2lkZ2V0c0NvbmZpZ30gZnJvbSAnLi9jb25maWcnO1xuZXhwb3J0IHt3aWRnZXRzQ29uZmlnSW5qZWN0aW9uVG9rZW4sIHByb3ZpZGVXaWRnZXRzQ29uZmlnLCBpbmplY3RXaWRnZXRDb25maWcsIGluamVjdFdpZGdldHNDb25maWcsIGNhbGxXaWRnZXRGYWN0b3J5fSBmcm9tICcuL2NvbmZpZyc7XG4iXX0=`;export{c as default};
