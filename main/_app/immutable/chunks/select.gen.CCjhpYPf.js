const G=`export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"select.gen.js","sourceRoot":"","sources":["../../../../src/components/select/select.gen.ts"],"names":[],"mappings":"","sourcesContent":["import type {WidgetSlotContext, SlotContent, Widget, HasFocus, FloatingUI, Directive} from '@agnos-ui/angular-headless';\nimport type {Placement} from '@floating-ui/dom';\n\n\n\n/**\n * A type for the slot context of the pagination widget\n */\nexport type SelectContext<Item> = WidgetSlotContext<SelectWidget<Item>>;\n\n\n\nexport type SelectItemContext<Item> = SelectContext<Item> & {\n\t/**\n\t * Contextual data related to an item\n\t */\n\titemContext: ItemContext<Item>;\n};\n\nexport interface SelectState<Item> {\n\t\n\t/**\n\t * List of item contexts, to be displayed in the menu\n\t */\n\tvisibleItems: ItemContext<Item>[];\n\t\n\n\t/**\n\t * List of selected items to be display\n\t */\n\tselectedContexts: ItemContext<Item>[];\n\t\n\n\t/**\n\t * Highlighted item context.\n\t * It is designed to define the highlighted item in the dropdown menu\n\t */\n\thighlighted: ItemContext<Item> | undefined;\n\t\n\n\t/**\n\t * Current placement of the dropdown\n\t */\n\tplacement: Placement | undefined;\n\t\n\t/**\n\t * id used for the input inside the select\n\t */\n\tid: string | undefined;\n\t\n\n\t/**\n\t * aria-label used for the input inside the select\n\t *\n\t * @defaultValue `'Select'`\n\t */\n\tariaLabel: string | undefined;\n\t\n\n\t/**\n\t * List of selected item ids\n\t *\n\t * @defaultValue `[]`\n\t */\n\tselected: Item[];\n\t\n\n\t/**\n\t * Filtered text to be display in the filter input\n\t *\n\t * @defaultValue `''`\n\t */\n\tfilterText: string;\n\t\n\n\t/**\n\t * true if the select is disabled\n\t *\n\t * @defaultValue `false`\n\t */\n\tdisabled: boolean;\n\t\n\n\t/**\n\t * true if the select is open\n\t *\n\t * @defaultValue `false`\n\t */\n\topen: boolean;\n\t\n\n\t/**\n\t * Class to be added on the dropdown menu container\n\t *\n\t * @defaultValue `''`\n\t */\n\tmenuClassName: string;\n\t\n\n\t/**\n\t * Class to be added on menu items\n\t *\n\t * @defaultValue `''`\n\t */\n\tmenuItemClassName: string;\n\t\n\n\t/**\n\t * Class to be added on selected items (displayed in the input zone)\n\t *\n\t * @defaultValue `''`\n\t */\n\tbadgeClassName: string;\n\t\n\n\t/**\n\t * true if a loading process is being done\n\t *\n\t * @defaultValue `false`\n\t */\n\tloading: boolean;\n\t\n\t/**\n\t * CSS classes to be applied on the widget main container\n\t *\n\t * @defaultValue `''`\n\t */\n\tclassName: string;\n\t\n\t/**\n\t * The template to override the way each badge on the left of the input is displayed.\n\t * This define the content of the badge inside the badge container.\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * ({itemContext}: SelectItemContext<any>) => itemContext.item\n\t * ```\n\t */\n\tbadgeLabel: SlotContent<SelectItemContext<Item>>;\n\t\n\n\t/**\n\t * The template to override the way each item is displayed in the list.\n\t * This define the content of the badge inside the badge container.\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * ({itemContext}: SelectItemContext<any>) => itemContext.item\n\t * ```\n\t */\n\titemLabel: SlotContent<SelectItemContext<Item>>;\n}\n\nexport interface SelectProps<Item> {\n\t\n\t/**\n\t * List of available items for the dropdown\n\t *\n\t * @defaultValue `[]`\n\t */\n\titems: Item[];\n\t\n\n\t/**\n\t * List of allowed placements for the dropdown.\n\t * This refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * ['bottom-start', 'top-start', 'bottom-end', 'top-end']\n\t * ```\n\t */\n\tallowedPlacements: Placement[];\n\t\n\n\t/**\n\t * Custom function to get the id of an item\n\t * By default, the item is returned\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * (item: any) => '' + item\n\t * ```\n\t */\n\titemIdFn(item: Item): string;\n\t\n\n\t/**\n\t * Retrieves navigable elements within an HTML element containing badges and the input.\n\t *\n\t * @param node - HTMLElement that contains the badges and the input\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * (node: HTMLElement) => node.querySelectorAll('.au-select-badge,input')\n\t * ```\n\t */\n\tnavSelector(node: HTMLElement): NodeListOf<HTMLSpanElement | HTMLInputElement>;\n\t\n\n\t// Event callbacks\n\n\t/**\n\t * Callback called dropdown open state change\n\t * @param isOpen - updated open state\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * () => {}\n\t * ```\n\t */\n\tonOpenChange(isOpen: boolean): void;\n\t\n\n\t/**\n\t * Callback called when the text filter change\n\t * @param text - Filtered text\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * () => {}\n\t * ```\n\t */\n\tonFilterTextChange(text: string): void;\n\t\n\n\t/**\n\t * Callback called when the selection change\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * () => {}\n\t * ```\n\t */\n\tonSelectedChange(selected: Item[]): void;\n\t\n\t/**\n\t * id used for the input inside the select\n\t */\n\tid: string | undefined;\n\t\n\n\t/**\n\t * aria-label used for the input inside the select\n\t *\n\t * @defaultValue `'Select'`\n\t */\n\tariaLabel: string | undefined;\n\t\n\n\t/**\n\t * List of selected item ids\n\t *\n\t * @defaultValue `[]`\n\t */\n\tselected: Item[];\n\t\n\n\t/**\n\t * Filtered text to be display in the filter input\n\t *\n\t * @defaultValue `''`\n\t */\n\tfilterText: string;\n\t\n\n\t/**\n\t * true if the select is disabled\n\t *\n\t * @defaultValue `false`\n\t */\n\tdisabled: boolean;\n\t\n\n\t/**\n\t * true if the select is open\n\t *\n\t * @defaultValue `false`\n\t */\n\topen: boolean;\n\t\n\n\t/**\n\t * Class to be added on the dropdown menu container\n\t *\n\t * @defaultValue `''`\n\t */\n\tmenuClassName: string;\n\t\n\n\t/**\n\t * Class to be added on menu items\n\t *\n\t * @defaultValue `''`\n\t */\n\tmenuItemClassName: string;\n\t\n\n\t/**\n\t * Class to be added on selected items (displayed in the input zone)\n\t *\n\t * @defaultValue `''`\n\t */\n\tbadgeClassName: string;\n\t\n\n\t/**\n\t * true if a loading process is being done\n\t *\n\t * @defaultValue `false`\n\t */\n\tloading: boolean;\n\t\n\t/**\n\t * CSS classes to be applied on the widget main container\n\t *\n\t * @defaultValue `''`\n\t */\n\tclassName: string;\n\t\n\t/**\n\t * The template to override the way each badge on the left of the input is displayed.\n\t * This define the content of the badge inside the badge container.\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * ({itemContext}: SelectItemContext<any>) => itemContext.item\n\t * ```\n\t */\n\tbadgeLabel: SlotContent<SelectItemContext<Item>>;\n\t\n\n\t/**\n\t * The template to override the way each item is displayed in the list.\n\t * This define the content of the badge inside the badge container.\n\t *\n\t * @defaultValue\n\t * ```ts\n\t * ({itemContext}: SelectItemContext<any>) => itemContext.item\n\t * ```\n\t */\n\titemLabel: SlotContent<SelectItemContext<Item>>;\n}\n\n\n\nexport type SelectWidget<Item> = Widget<SelectProps<Item>, SelectState<Item>, SelectApi<Item>, SelectActions<Item>, SelectDirectives<Item>>;\n\nexport interface ItemContext<T> {\n\t\n\t/**\n\t * Original item given in the parameters\n\t */\n\titem: T;\n\t\n\n\t/**\n\t * Unique id to identify the item\n\t */\n\tid: string;\n\t\n\n\t/**\n\t * Specify if the item is checked\n\t */\n\tselected: boolean;\n}\n\nexport interface SelectApi<Item> {\n\t\n\t/**\n\t * Clear all the selected items\n\t */\n\tclear(): void;\n\t\n\n\t/**\n\t * Clear the filter text\n\t */\n\tclearText(): void;\n\t\n\n\t/**\n\t * Highlight the given item, if there is a corresponding match among the visible list\n\t */\n\thighlight(item: Item): void;\n\t\n\n\t/**\n\t * Highlight the first item among the visible list\n\t */\n\thighlightFirst(): void;\n\t\n\n\t/**\n\t * Highlight the previous item among the visible list\n\t * Loop to the last item if needed\n\t */\n\thighlightPrevious(): void;\n\t\n\n\t/**\n\t * Highlight the next item among the visible list.\n\t * Loop to the first item if needed\n\t */\n\thighlightNext(): void;\n\t\n\n\t/**\n\t * Highlight the last item among the visible list\n\t */\n\thighlightLast(): void;\n\t\n\n\t/**\n\t * Select the provided item.\n\t * The selected list is used to\n\t * @param item - the item to select\n\t */\n\tselect(item: Item): void;\n\t\n\t/**\n\t * Unselect the provided item.\n\t * @param item - the item to unselect\n\t */\n\tunselect(item: Item): void;\n\t\n\t/**\n\t * Toggle the selection of an item\n\t * @param item - the item to toggle\n\t * @param selected - an optional boolean to enforce the selected/unselected state instead of toggling\n\t */\n\ttoggleItem(item: Item, selected?: boolean): void;\n\t\n\n\t/**\n\t * open the select\n\t */\n\topen(): void;\n\t\n\t/**\n\t * close the select\n\t */\n\tclose(): void;\n\t\n\t/**\n\t * Toggle the dropdown menu\n\t * @param isOpen - If specified, set the menu in the defined state.\n\t */\n\ttoggle(isOpen?: boolean): void;\n}\n\nexport interface SelectDirectives<Item> {\n\t\n\t/**\n\t * Directive to be used in the input group and the menu containers\n\t */\n\thasFocusDirective: HasFocus['directive'];\n\t\n\n\t/**\n\t * Directive that enables dynamic positioning of menu element\n\t */\n\tfloatingDirective: FloatingUI['directives']['floatingDirective'];\n\t\n\n\t/**\n\t * A directive to be applied to the input group element serves as the base for menu positioning\n\t */\n\treferenceDirective: FloatingUI['directives']['referenceDirective'];\n\t\n\n\t/**\n\t * A directive to be applied to the element that contains the badges and the input\n\t */\n\tinputContainerDirective: Directive;\n\t\n\n\t/**\n\t * A directive that applies all the necessary attributes to the container badges\n\t */\n\tbadgeAttributesDirective: Directive<ItemContext<Item>>;\n\t\n\n\t/**\n\t * A directive that applies all the necessary attributes to the dropdown menu\n\t */\n\tmenuAttributesDirective: Directive;\n\t\n\n\t/**\n\t * A directive that applies all the necessary attributes to the dropdown item\n\t */\n\titemAttributesDirective: Directive<ItemContext<Item>>;\n}\n\nexport interface SelectActions<Item> {\n\t\n\t// Dom methods\n\n\t/**\n\t * Method to be plugged to on the 'input' event. The input text will be used as the filter text.\n\t */\n\tonInput: (e: {target: any}) => void;\n\t\n\n\t/**\n\t * Method to be attached to the node element to close a badge on click.\n\t */\n\tonRemoveBadgeClick: (event: MouseEvent, item: Item) => void;\n\t\n\n\t/**\n\t * Method to be plugged to on an keydown event of the main input, in order to control the keyboard interactions with the highlighted item.\n\t * It manages arrow keys to move the highlighted item, or enter to toggle the item.\n\t */\n\tonInputKeydown: (event: KeyboardEvent) => void;\n\t\n\n\t/**\n\t * Method to be plugged to on an keydown event of a badge container, in order to manage main actions on badges.\n\t *\n\t * @param event - keyboard event\n\t * @param item - corresponding item\n\t */\n\tonBadgeKeydown: (event: KeyboardEvent, item: Item) => void;\n}\n\n"]}`;export{G as default};
