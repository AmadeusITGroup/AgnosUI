const A=`{"version":3,"file":"agnos-ui-angular.mjs","sources":["../../../lib/src/lib/slot.directive.ts","../../../lib/src/lib/slotDefault.directive.ts","../../../lib/src/lib/transition/use.directive.ts","../../../lib/src/lib/utils.ts","../../../lib/src/lib/modal/modal.component.ts","../../../lib/src/lib/pagination/pagination.component.ts","../../../lib/src/lib/rating/rating.component.ts","../../../lib/src/lib/select/select.component.ts","../../../lib/src/lib/select/select.component.html","../../../lib/src/lib/alert/alert.component.ts","../../../lib/src/lib/accordion/accordion.component.ts","../../../lib/src/lib/agnos-ui-angular.module.ts","../../../lib/src/lib/modal/modal.service.ts","../../../lib/src/public-api.ts","../../../lib/src/agnos-ui-angular.ts"],"sourcesContent":["import type {ReadableSignal} from '@amadeus-it-group/tansu';\\nimport {computed, readable, writable} from '@amadeus-it-group/tansu';\\nimport type {\\n\\tSlotContent as CoreSlotContent,\\n\\tWidgetsConfig as CoreWidgetsConfig,\\n\\tPartial2Levels,\\n\\tWidget,\\n\\tWidgetFactory,\\n\\tWidgetProps,\\n\\tWidgetSlotContext,\\n\\tWidgetState,\\n\\tWidgetsConfigStore,\\n} from '@agnos-ui/core';\\nimport {createWidgetsConfig} from '@agnos-ui/core';\\nimport {DOCUMENT} from '@angular/common';\\nimport type {ComponentRef, EmbeddedViewRef, FactoryProvider, OnChanges, OnDestroy, SimpleChanges, Type} from '@angular/core';\\nimport {\\n\\tDirective,\\n\\tEnvironmentInjector,\\n\\tInjectionToken,\\n\\tInjector,\\n\\tInput,\\n\\tOptional,\\n\\tSkipSelf,\\n\\tTemplateRef,\\n\\tViewContainerRef,\\n\\tcreateComponent,\\n\\tinject,\\n\\treflectComponentType,\\n\\trunInInjectionContext,\\n} from '@angular/core';\\n\\nexport class ComponentTemplate<Props, K extends string, T extends {[key in K]: TemplateRef<Props>}> {\\n\\tconstructor(public readonly component: Type<T>, public readonly templateProp: K) {}\\n}\\n\\nexport type SlotContent<Props extends object = object> =\\n\\t| CoreSlotContent<Props>\\n\\t| TemplateRef<Props>\\n\\t| Type<unknown>\\n\\t| ComponentTemplate<Props, any, any>;\\n\\nexport type AdaptSlotContentProps<Props extends Record<string, any>> = Props extends WidgetSlotContext<infer U>\\n\\t? WidgetSlotContext<AdaptWidgetSlots<U>> & AdaptPropsSlots<Omit<Props, keyof WidgetSlotContext<any>>>\\n\\t: AdaptPropsSlots<Props>;\\n\\nexport type AdaptPropsSlots<Props> = Omit<Props, \`slot\${string}\`> & {\\n\\t[K in keyof Props & \`slot\${string}\`]: Props[K] extends CoreSlotContent<infer U> ? SlotContent<AdaptSlotContentProps<U>> : Props[K];\\n};\\n\\nexport type AdaptWidgetSlots<W extends Widget> = Widget<\\n\\tAdaptPropsSlots<WidgetProps<W>>,\\n\\tAdaptPropsSlots<WidgetState<W>>,\\n\\tW['api'],\\n\\tW['actions'],\\n\\tW['directives']\\n>;\\n\\nexport type WidgetsConfig = {\\n\\t[WidgetName in keyof CoreWidgetsConfig]: AdaptPropsSlots<CoreWidgetsConfig[WidgetName]>;\\n};\\n\\n/**\\n * Dependency Injection token which can be used to provide or inject the widgets default configuration store.\\n */\\nexport const widgetsConfigInjectionToken = new InjectionToken<WidgetsConfigStore<WidgetsConfig>>('widgetsConfig');\\n\\n/**\\n * Creates a provider of widgets default configuration that inherits from any widgets default configuration already defined at an upper level\\n * in the Angular dependency injection system. It contains its own set of widgets configuration properties that override the same properties form\\n * the parent configuration.\\n *\\n * @remarks\\n * The configuration is computed from the parent configuration in two steps:\\n * - first step: the parent configuration is transformed by the adaptParentConfig function (if specified).\\n * If adaptParentConfig is not specified, this step is skipped.\\n * - second step: the configuration from step 1 is merged (2-levels deep) with the own$ store. The own$ store initially contains\\n * an empty object (i.e. no property from the parent is overridden). It can be changed by calling set on the store returned by\\n * {@link injectWidgetsConfig}.\\n *\\n * @param adaptParentConfig - optional function that receives a 2-levels copy of the widgets default configuration\\n * defined at an upper level in the Angular dependency injection system (or an empty object if there is none) and returns the widgets\\n * default configuration to be used.\\n * It is called only if the configuration is needed, and was not yet computed for the current value of the parent configuration.\\n * It is called in a tansu reactive context, so it can use any tansu store and will be called again if those stores change.\\n * It is also called in an Angular injection context, so it can call the Angular inject function to get and use dependencies from the\\n * Angular dependency injection system.\\n\\n * @returns DI provider to be included a list of \`providers\` (for example at a component level or\\n * any other level of the Angular dependency injection system)\\n *\\n * @example\\n * \`\`\`typescript\\n * @Component({\\n *   // ...\\n *   providers: [\\n *     provideWidgetsConfig((parentConfig) => {\\n *       // first step configuration: transforms the parent configuration\\n *       parentConfig.rating = parentConfig.rating ?? {};\\n *       parentConfig.rating.className = \`\${parentConfig.rating.className ?? ''} my-rating-extra-class\`\\n *       return parentConfig;\\n *     })\\n *   ]\\n * })\\n * class MyComponent {\\n *   widgetsConfig = injectWidgetsConfig();\\n *   constructor() {\\n *     this.widgetsConfig.set({\\n *       // second step configuration: overrides the parent configuration\\n *       rating: {\\n *         slotStar: MyCustomSlotStar\\n *       }\\n *     });\\n *   }\\n *   // ...\\n * }\\n * \`\`\`\\n */\\nexport const provideWidgetsConfig = (\\n\\tadaptParentConfig?: (config: Partial2Levels<WidgetsConfig>) => Partial2Levels<WidgetsConfig>\\n): FactoryProvider => ({\\n\\tprovide: widgetsConfigInjectionToken,\\n\\tuseFactory: (parent: WidgetsConfigStore<WidgetsConfig> | null) => {\\n\\t\\tif (adaptParentConfig) {\\n\\t\\t\\tconst injector = inject(Injector);\\n\\t\\t\\tconst originalAdaptParentConfig = adaptParentConfig;\\n\\t\\t\\tadaptParentConfig = (value) => runInInjectionContext(injector, () => originalAdaptParentConfig(value));\\n\\t\\t}\\n\\t\\treturn createWidgetsConfig(parent ?? undefined, adaptParentConfig);\\n\\t},\\n\\tdeps: [[new SkipSelf(), new Optional(), widgetsConfigInjectionToken]],\\n});\\n\\n/**\\n * Returns the widgets default configuration store that was provided in the current injection context.\\n * Throws if the no widgets default configuration store was provided.\\n *\\n * @remarks\\n * This function must be called from an injection context, such as a constructor, a factory function, a field initializer or\\n * a function used with {@link https://angular.io/api/core/runInInjectionContext | runInInjectionContext}.\\n *\\n * @returns the widgets default configuration store.\\n */\\nexport const injectWidgetsConfig = () => inject(widgetsConfigInjectionToken);\\n\\nconst createPatchSlots = <T extends object>(set: (object: Partial<T>) => void) => {\\n\\tlet lastValue: Partial<T> = {};\\n\\treturn (object: T) => {\\n\\t\\tconst newValue: Partial<T> = {};\\n\\t\\tlet hasChange = false;\\n\\t\\tfor (const key of Object.keys(object) as (string & keyof T)[]) {\\n\\t\\t\\tconst objectKey = (object as any)[key];\\n\\t\\t\\tif (objectKey != null) {\\n\\t\\t\\t\\t// only use defined slots\\n\\t\\t\\t\\tnewValue[key] = objectKey;\\n\\t\\t\\t}\\n\\t\\t\\tif (objectKey != lastValue[key]) {\\n\\t\\t\\t\\thasChange = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (hasChange) {\\n\\t\\t\\tlastValue = newValue;\\n\\t\\t\\tset(newValue);\\n\\t\\t}\\n\\t};\\n};\\n\\nexport type WithPatchSlots<W extends Widget> = AdaptWidgetSlots<W> & {\\n\\tpatchSlots(slots: {\\n\\t\\t[K in keyof WidgetProps<W> & \`slot\${string}\`]: WidgetProps<W>[K] extends CoreSlotContent<infer U>\\n\\t\\t\\t? TemplateRef<AdaptSlotContentProps<U>> | undefined\\n\\t\\t\\t: never;\\n\\t}): void;\\n};\\n\\nexport const callWidgetFactory = <W extends Widget>(\\n\\tfactory: WidgetFactory<W>,\\n\\twidgetName: keyof WidgetsConfig | null,\\n\\tdefaultConfig: Partial<AdaptPropsSlots<WidgetProps<W>>> | ReadableSignal<Partial<AdaptPropsSlots<WidgetProps<W>>>> = {}\\n): WithPatchSlots<W> => {\\n\\tconst defaultConfigStore = typeof defaultConfig !== 'function' ? readable(defaultConfig) : defaultConfig;\\n\\tconst slots$ = writable({});\\n\\tconst widgetsConfig = widgetName ? inject(widgetsConfigInjectionToken, {optional: true}) : undefined;\\n\\treturn {\\n\\t\\t...(factory(\\n\\t\\t\\tcomputed(() => ({...(defaultConfigStore() as any), ...(widgetName ? widgetsConfig?.()[widgetName] : undefined), ...slots$()}))\\n\\t\\t) as any),\\n\\t\\tpatchSlots: createPatchSlots(slots$.set),\\n\\t};\\n};\\n\\nabstract class SlotHandler<Props extends Record<string, any>, Slot extends SlotContent<Props> = SlotContent<Props>> {\\n\\tconstructor(public viewContainerRef: ViewContainerRef, public document: Document) {}\\n\\tslotChange(slot: Slot, props: Props) {}\\n\\tpropsChange(slot: Slot, props: Props) {}\\n\\tdestroy() {}\\n}\\n\\nclass StringSlotHandler<Props extends Record<string, any>> extends SlotHandler<Props, string> {\\n\\t#nodeRef: Text | undefined;\\n\\t#previousText = '';\\n\\n\\toverride slotChange(slot: string): void {\\n\\t\\tif (slot === this.#previousText) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tthis.#previousText = slot;\\n\\t\\tif (this.#nodeRef) {\\n\\t\\t\\tthis.#nodeRef.textContent = slot;\\n\\t\\t} else {\\n\\t\\t\\tconst viewContainerElement: Comment | undefined = this.viewContainerRef.element.nativeElement;\\n\\t\\t\\tif (this.document && viewContainerElement?.parentNode) {\\n\\t\\t\\t\\tthis.#nodeRef = viewContainerElement.parentNode.insertBefore(this.document.createTextNode(slot), viewContainerElement);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\toverride destroy(): void {\\n\\t\\tthis.#nodeRef?.parentNode?.removeChild(this.#nodeRef);\\n\\t\\tthis.#nodeRef = undefined;\\n\\t}\\n}\\n\\nclass FunctionSlotHandler<Props extends Record<string, any>> extends SlotHandler<Props, (props: Props) => string> {\\n\\t#stringSlotHandler = new StringSlotHandler(this.viewContainerRef, this.document);\\n\\n\\toverride slotChange(slot: (props: Props) => string, props: Props): void {\\n\\t\\tthis.#stringSlotHandler.slotChange(slot(props));\\n\\t}\\n\\n\\toverride propsChange(slot: (props: Props) => string, props: Props): void {\\n\\t\\tthis.#stringSlotHandler.slotChange(slot(props));\\n\\t}\\n\\n\\toverride destroy(): void {\\n\\t\\tthis.#stringSlotHandler.destroy();\\n\\t}\\n}\\n\\nclass ComponentSlotHandler<Props extends Record<string, any>> extends SlotHandler<Props, Type<unknown>> {\\n\\t#componentRef: ComponentRef<any> | undefined;\\n\\t#properties: string[];\\n\\n\\toverride slotChange(slot: Type<unknown>, props: Props): void {\\n\\t\\tif (this.#componentRef) {\\n\\t\\t\\tthis.destroy();\\n\\t\\t}\\n\\t\\tthis.#componentRef = this.viewContainerRef.createComponent(slot);\\n\\t\\tthis.#applyProperties(props);\\n\\t}\\n\\n\\t#applyProperties(props: Props, oldProperties?: Set<string>) {\\n\\t\\tconst properties = Object.keys(props);\\n\\t\\tthis.#properties = properties;\\n\\t\\tconst componentRef = this.#componentRef!;\\n\\t\\tfor (const property of properties) {\\n\\t\\t\\tcomponentRef.setInput(property, props[property]);\\n\\t\\t\\toldProperties?.delete(property);\\n\\t\\t}\\n\\t}\\n\\n\\toverride propsChange(slot: Type<unknown>, props: Props): void {\\n\\t\\tconst oldProperties = new Set(this.#properties);\\n\\t\\tthis.#applyProperties(props, oldProperties);\\n\\t\\tconst componentRef = this.#componentRef!;\\n\\t\\tfor (const property of oldProperties) {\\n\\t\\t\\tcomponentRef.setInput(property, undefined);\\n\\t\\t}\\n\\t}\\n\\n\\toverride destroy(): void {\\n\\t\\tthis.viewContainerRef.clear();\\n\\t\\tthis.#componentRef = undefined;\\n\\t}\\n}\\n\\nclass TemplateRefSlotHandler<Props extends Record<string, any>> extends SlotHandler<Props, TemplateRef<Props>> {\\n\\t#viewRef: EmbeddedViewRef<Props> | undefined;\\n\\t#props: Props;\\n\\n\\toverride slotChange(slot: TemplateRef<Props>, props: Props): void {\\n\\t\\tif (this.#viewRef) {\\n\\t\\t\\tthis.destroy();\\n\\t\\t}\\n\\t\\tprops = {...props};\\n\\t\\tthis.#props = props;\\n\\t\\tthis.#viewRef = this.viewContainerRef.createEmbeddedView(slot, props);\\n\\t}\\n\\n\\toverride propsChange(slot: TemplateRef<Props>, props: Props): void {\\n\\t\\tif (this.#viewRef) {\\n\\t\\t\\tconst templateProps = this.#props;\\n\\t\\t\\tconst oldProperties = new Set<keyof Props>(Object.keys(templateProps));\\n\\t\\t\\tfor (const property of Object.keys(props) as (keyof Props)[]) {\\n\\t\\t\\t\\ttemplateProps[property] = props[property];\\n\\t\\t\\t\\toldProperties.delete(property);\\n\\t\\t\\t}\\n\\t\\t\\tfor (const oldProperty of oldProperties) {\\n\\t\\t\\t\\tdelete templateProps[oldProperty];\\n\\t\\t\\t}\\n\\t\\t\\tthis.#viewRef.markForCheck();\\n\\t\\t}\\n\\t}\\n\\n\\toverride destroy(): void {\\n\\t\\tthis.viewContainerRef.clear();\\n\\t}\\n}\\n\\nclass ComponentTemplateSlotHandler<\\n\\tProps extends Record<string, any>,\\n\\tK extends string,\\n\\tT extends {[key in K]: TemplateRef<Props>}\\n> extends SlotHandler<Props, ComponentTemplate<Props, K, T>> {\\n\\t#componentRef: ComponentRef<T> | undefined;\\n\\t#templateSlotHandler = new TemplateRefSlotHandler(this.viewContainerRef, this.document);\\n\\t#templateRef: TemplateRef<Props> | undefined;\\n\\n\\toverride slotChange(slot: ComponentTemplate<Props, K, T>, props: Props): void {\\n\\t\\tif (this.#componentRef) {\\n\\t\\t\\tthis.destroy();\\n\\t\\t}\\n\\t\\tthis.#componentRef = createComponent(slot.component, {\\n\\t\\t\\telementInjector: this.viewContainerRef.injector,\\n\\t\\t\\tenvironmentInjector: this.viewContainerRef.injector.get(EnvironmentInjector),\\n\\t\\t});\\n\\t\\tthis.#templateRef = this.#componentRef.instance[slot.templateProp];\\n\\t\\tthis.#templateSlotHandler.slotChange(this.#templateRef, props);\\n\\t}\\n\\n\\toverride propsChange(slot: ComponentTemplate<Props, K, T>, props: Props): void {\\n\\t\\tthis.#templateSlotHandler.propsChange(this.#templateRef!, props);\\n\\t}\\n\\n\\toverride destroy(): void {\\n\\t\\tthis.#templateSlotHandler.destroy();\\n\\t\\tthis.#componentRef?.destroy();\\n\\t\\tthis.#componentRef = undefined;\\n\\t}\\n}\\n\\nconst getSlotType = (value: any): undefined | {new (viewContainerRef: ViewContainerRef, document: Document): SlotHandler<any>} => {\\n\\tif (!value) return undefined;\\n\\tconst type = typeof value;\\n\\tswitch (type) {\\n\\t\\tcase 'string':\\n\\t\\t\\treturn StringSlotHandler;\\n\\t\\tcase 'function':\\n\\t\\t\\tif (reflectComponentType(value)) {\\n\\t\\t\\t\\treturn ComponentSlotHandler;\\n\\t\\t\\t}\\n\\t\\t\\treturn FunctionSlotHandler;\\n\\t\\tcase 'object':\\n\\t\\t\\tif (value instanceof TemplateRef) {\\n\\t\\t\\t\\treturn TemplateRefSlotHandler;\\n\\t\\t\\t}\\n\\t\\t\\tif (value instanceof ComponentTemplate) {\\n\\t\\t\\t\\treturn ComponentTemplateSlotHandler;\\n\\t\\t\\t}\\n\\t\\t\\tbreak;\\n\\t}\\n\\treturn undefined;\\n};\\n\\n@Directive({\\n\\tselector: '[auSlot]',\\n\\tstandalone: true,\\n})\\nexport class SlotDirective<Props extends Record<string, any>> implements OnChanges, OnDestroy {\\n\\t@Input('auSlot') slot: SlotContent<Props>;\\n\\t@Input('auSlotProps') props: Props;\\n\\n\\tprivate _viewContainerRef = inject(ViewContainerRef);\\n\\tprivate _document = inject(DOCUMENT);\\n\\tprivate _slotType: ReturnType<typeof getSlotType>;\\n\\tprivate _slotHandler: SlotHandler<Props> | undefined;\\n\\n\\tngOnChanges(changes: SimpleChanges): void {\\n\\t\\tconst slotChange = changes['slot'];\\n\\t\\tconst propsChange = changes['props'];\\n\\t\\tconst slot = this.slot;\\n\\t\\tif (slotChange) {\\n\\t\\t\\tconst newSlotType = getSlotType(slot);\\n\\t\\t\\tif (newSlotType !== this._slotType) {\\n\\t\\t\\t\\tthis._slotHandler?.destroy();\\n\\t\\t\\t\\tthis._slotHandler = newSlotType ? new newSlotType(this._viewContainerRef, this._document) : undefined;\\n\\t\\t\\t\\tthis._slotType = newSlotType;\\n\\t\\t\\t}\\n\\t\\t\\tthis._slotHandler?.slotChange(slot, this.props);\\n\\t\\t} else if (propsChange) {\\n\\t\\t\\tthis._slotHandler?.propsChange(slot, this.props);\\n\\t\\t}\\n\\t}\\n\\n\\tngOnDestroy(): void {\\n\\t\\tthis._slotHandler?.destroy();\\n\\t\\tthis._slotHandler = undefined;\\n\\t}\\n}\\n","import type {WritableSignal} from '@amadeus-it-group/tansu';\\nimport type {OnInit} from '@angular/core';\\nimport {Directive, Input, TemplateRef, inject} from '@angular/core';\\nimport type {SlotContent} from './slot.directive';\\n\\n@Directive({selector: '[auSlotDefault]', standalone: true})\\nexport class SlotDefaultDirective<T extends object> implements OnInit {\\n\\t@Input() auSlotDefault: WritableSignal<{slotDefault?: SlotContent<T>}>;\\n\\n\\ttemplateRef = inject(TemplateRef<T>);\\n\\n\\tngOnInit(): void {\\n\\t\\tthis.auSlotDefault.update((value) => ({...value, slotDefault: this.templateRef}));\\n\\t}\\n}\\n","import type {OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\\nimport {Directive, ElementRef, inject, Input} from '@angular/core';\\nimport type {Directive as AgnosUIDirective} from '@agnos-ui/core';\\n\\n@Directive({\\n\\tstandalone: true,\\n\\tselector: '[auUse]',\\n})\\nexport class UseDirective<T> implements OnChanges, OnDestroy {\\n\\t@Input('auUse')\\n\\tuse: AgnosUIDirective<T> | undefined;\\n\\n\\t@Input('auUseParams')\\n\\tparams: T | undefined;\\n\\n\\tprivate _ref = inject(ElementRef);\\n\\n\\tprivate _directive: AgnosUIDirective<T> | undefined;\\n\\tprivate _directiveInstance?: ReturnType<AgnosUIDirective<T>>;\\n\\n\\tasync ngOnChanges(changes: SimpleChanges): Promise<void> {\\n\\t\\tif (this.use !== this._directive) {\\n\\t\\t\\tthis._directiveInstance?.destroy?.();\\n\\t\\t\\tthis._directiveInstance = undefined;\\n\\t\\t\\tconst directive = this.use;\\n\\t\\t\\tthis._directive = directive;\\n\\t\\t\\tif (directive) {\\n\\t\\t\\t\\t// waiting here is necessary to avoid ExpressionChangedAfterItHasBeenCheckedError\\n\\t\\t\\t\\t// in case calling the directive changes variables used in the template\\n\\t\\t\\t\\tawait Promise.resolve();\\n\\t\\t\\t\\t// checks that the directive did not change while waiting:\\n\\t\\t\\t\\tif (directive === this._directive && !this._directiveInstance) {\\n\\t\\t\\t\\t\\tthis._directiveInstance = directive(this._ref.nativeElement, this.params as T);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else if (changes['params']) {\\n\\t\\t\\t// waiting here is necessary to avoid ExpressionChangedAfterItHasBeenCheckedError\\n\\t\\t\\t// in case calling the directive changes variables used in the template\\n\\t\\t\\tawait Promise.resolve();\\n\\t\\t\\tthis._directiveInstance?.update?.(this.params as T);\\n\\t\\t}\\n\\t}\\n\\n\\tngOnDestroy(): void {\\n\\t\\tthis._directiveInstance?.destroy?.();\\n\\t\\tthis._directiveInstance = undefined;\\n\\t\\tthis._directive = undefined;\\n\\t}\\n}\\n","import type {SubscribableStore} from '@amadeus-it-group/tansu';\\nimport type {SimpleChanges} from '@angular/core';\\n\\nexport function patchSimpleChanges(patchFn: (obj: any) => void, changes: SimpleChanges) {\\n\\tconst obj: any = {};\\n\\tfor (const [key, simpleChange] of Object.entries(changes)) {\\n\\t\\tif (simpleChange !== undefined) {\\n\\t\\t\\tobj[key] = simpleChange.currentValue;\\n\\t\\t}\\n\\t}\\n\\tpatchFn(obj);\\n}\\n\\nexport type ExtractStoreType<T> = T extends SubscribableStore<infer U> ? U : never;\\n","import {writable} from '@amadeus-it-group/tansu';\\nimport type {ModalBeforeCloseEvent, ModalContext as ModalCoreContext, TransitionFn, WidgetProps, WidgetState} from '@agnos-ui/core';\\nimport {createModal, mergeDirectives, toSlotContextWidget} from '@agnos-ui/core';\\nimport {NgIf} from '@angular/common';\\nimport type {AfterContentChecked, OnChanges, Signal, SimpleChanges} from '@angular/core';\\nimport {\\n\\tChangeDetectionStrategy,\\n\\tComponent,\\n\\tContentChild,\\n\\tDirective,\\n\\tEventEmitter,\\n\\tInput,\\n\\tOutput,\\n\\tTemplateRef,\\n\\tViewChild,\\n\\teffect,\\n\\tinject,\\n} from '@angular/core';\\nimport {toSignal} from '@angular/core/rxjs-interop';\\nimport type {AdaptSlotContentProps, AdaptWidgetSlots, SlotContent} from '../slot.directive';\\nimport {ComponentTemplate, SlotDirective, callWidgetFactory} from '../slot.directive';\\nimport {SlotDefaultDirective} from '../slotDefault.directive';\\nimport {UseDirective} from '../transition/use.directive';\\nimport {patchSimpleChanges} from '../utils';\\n\\nexport type ModalWidget = AdaptWidgetSlots<ReturnType<typeof createModal>>;\\nexport type ModalProps = WidgetProps<ModalWidget>;\\nexport type ModalState = WidgetState<ModalWidget>;\\nexport type ModalContext = AdaptSlotContentProps<ModalCoreContext>;\\n\\n/**\\n * Directive to provide the slot structure for the modal widget.\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auModalStructure]', standalone: true})\\nexport class ModalStructureDirective {\\n\\tpublic templateRef = inject(TemplateRef<ModalContext>);\\n\\tstatic ngTemplateContextGuard(dir: ModalStructureDirective, context: unknown): context is ModalContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * Directive to provide the slot header for the modal widget.\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auModalHeader]', standalone: true})\\nexport class ModalHeaderDirective {\\n\\tpublic templateRef = inject(TemplateRef<ModalContext>);\\n\\tstatic ngTemplateContextGuard(dir: ModalHeaderDirective, context: unknown): context is ModalContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * Directive to provide the slot title for the modal widget.\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auModalTitle]', standalone: true})\\nexport class ModalTitleDirective {\\n\\tpublic templateRef = inject(TemplateRef<ModalContext>);\\n\\tstatic ngTemplateContextGuard(dir: ModalTitleDirective, context: unknown): context is ModalContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * Directive to provide the default slot for the modal widget.\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auModalBody]', standalone: true})\\nexport class ModalBodyDirective {\\n\\tpublic templateRef = inject(TemplateRef<ModalContext>);\\n\\tstatic ngTemplateContextGuard(dir: ModalBodyDirective, context: unknown): context is ModalContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * Directive to provide the slot footer for the modal widget.\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auModalFooter]', standalone: true})\\nexport class ModalFooterDirective {\\n\\tpublic templateRef = inject(TemplateRef<ModalContext>);\\n\\tstatic ngTemplateContextGuard(dir: ModalFooterDirective, context: unknown): context is ModalContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * Component containing the default slots for the modal.\\n */\\n@Component({\\n\\tstandalone: true,\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\timports: [NgIf, SlotDirective, ModalHeaderDirective, ModalStructureDirective],\\n\\ttemplate: \`\\n\\t\\t<ng-template auModalHeader #header let-state=\\"state\\" let-widget=\\"widget\\">\\n\\t\\t\\t<h5 class=\\"modal-title\\">\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotTitle\\" [auSlotProps]=\\"{state, widget}\\"></ng-template>\\n\\t\\t\\t</h5>\\n\\t\\t\\t<button\\n\\t\\t\\t\\t*ngIf=\\"state.closeButton\\"\\n\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\tclass=\\"btn-close\\"\\n\\t\\t\\t\\t[attr.aria-label]=\\"state.ariaCloseButtonLabel\\"\\n\\t\\t\\t\\t(click)=\\"widget.actions.closeButtonClick($event)\\"\\n\\t\\t\\t></button>\\n\\t\\t</ng-template>\\n\\t\\t<ng-template auModalStructure #structure let-state=\\"state\\" let-widget=\\"widget\\">\\n\\t\\t\\t<div class=\\"modal-header\\" *ngIf=\\"state.slotTitle\\">\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotHeader\\" [auSlotProps]=\\"{state, widget}\\"></ng-template>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"modal-body\\">\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotDefault\\" [auSlotProps]=\\"{state, widget}\\"></ng-template>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"modal-footer\\" *ngIf=\\"state.slotFooter\\">\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotFooter\\" [auSlotProps]=\\"{state, widget}\\"></ng-template>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\t\`,\\n})\\nexport class ModalDefaultSlotsComponent {\\n\\t@ViewChild('header', {static: true}) header: TemplateRef<ModalContext>;\\n\\t@ViewChild('structure', {static: true}) structure: TemplateRef<ModalContext>;\\n}\\n\\n/**\\n * Default slot for modal header.\\n */\\nexport const modalDefaultSlotHeader = new ComponentTemplate(ModalDefaultSlotsComponent, 'header');\\n\\n/**\\n * Default slot for modal structure.\\n */\\nexport const modalDefaultSlotStructure = new ComponentTemplate(ModalDefaultSlotsComponent, 'structure');\\n\\nconst defaultConfig: Partial<ModalProps> = {\\n\\tslotHeader: modalDefaultSlotHeader,\\n\\tslotStructure: modalDefaultSlotStructure,\\n};\\n\\n/**\\n * Modal component.\\n */\\n@Component({\\n\\tselector: 'au-modal',\\n\\tstandalone: true,\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\timports: [UseDirective, NgIf, SlotDirective, SlotDefaultDirective],\\n\\ttemplate: \`\\n\\t\\t<ng-template [auSlotDefault]=\\"defaultSlots\\"><ng-content></ng-content></ng-template>\\n\\t\\t<div *ngIf=\\"!state().backdropHidden\\" class=\\"modal-backdrop {{ state().backdropClass }}\\" [auUse]=\\"backdropDirective\\"></div>\\n\\t\\t<div *ngIf=\\"!state().hidden\\" class=\\"modal d-block {{ state().modalClass }}\\" [auUse]=\\"modalDirective\\" (click)=\\"widget.actions.modalClick($event)\\">\\n\\t\\t\\t<div class=\\"modal-dialog\\">\\n\\t\\t\\t\\t<div class=\\"modal-content\\">\\n\\t\\t\\t\\t\\t<ng-template [auSlot]=\\"state().slotStructure\\" [auSlotProps]=\\"{state: state(), widget}\\"></ng-template>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\`,\\n})\\nexport class ModalComponent implements OnChanges, AfterContentChecked {\\n\\t/**\\n\\t * Whether the modal and its backdrop (if present) should be animated when shown or hidden.\\n\\t */\\n\\t@Input() animation: boolean | undefined;\\n\\n\\t/**\\n\\t * The transition to use for the backdrop behind the modal (if present).\\n\\t */\\n\\t@Input() backdropTransition: TransitionFn | undefined;\\n\\n\\t/**\\n\\t * The transition to use for the modal.\\n\\t */\\n\\t@Input() modalTransition: TransitionFn | undefined;\\n\\n\\t/**\\n\\t * Whether the modal should be visible when the transition is completed.\\n\\t */\\n\\t@Input() visible: boolean | undefined;\\n\\n\\t/**\\n\\t * Whether a backdrop should be created behind the modal.\\n\\t */\\n\\t@Input() backdrop: boolean | undefined;\\n\\n\\t/**\\n\\t * Whether the modal should be closed when clicking on the viewport outside the modal.\\n\\t */\\n\\t@Input() closeOnOutsideClick: boolean | undefined;\\n\\n\\t/**\\n\\t * Which element should contain the modal and backdrop DOM elements.\\n\\t * If it is not null, the modal and backdrop DOM elements are moved to the specified container.\\n\\t * Otherwise, they stay where the widget is located.\\n\\t */\\n\\t@Input() container: HTMLElement | null | undefined;\\n\\n\\t/**\\n\\t * Value of the aria-label attribute to put on the close button.\\n\\t */\\n\\t@Input() ariaCloseButtonLabel: string | undefined;\\n\\n\\t/**\\n\\t * Classes to add on the backdrop DOM element.\\n\\t */\\n\\t@Input() backdropClass: string | undefined;\\n\\n\\t/**\\n\\t * Whether to display the close button.\\n\\t */\\n\\t@Input() closeButton: boolean | undefined;\\n\\n\\t/**\\n\\t * Classes to add on the modal DOM element.\\n\\t */\\n\\t@Input() modalClass: string | undefined;\\n\\n\\t@Input() slotStructure: SlotContent<ModalContext>;\\n\\t@ContentChild(ModalStructureDirective, {static: false})\\n\\tslotStructureFromContent: ModalStructureDirective | null;\\n\\n\\t@Input() slotHeader: SlotContent<ModalContext>;\\n\\t@ContentChild(ModalHeaderDirective, {static: false})\\n\\tslotHeaderFromContent: ModalHeaderDirective | null;\\n\\n\\t@Input() slotTitle: SlotContent<ModalContext>;\\n\\t@ContentChild(ModalTitleDirective, {static: false})\\n\\tslotTitleFromContent: ModalTitleDirective | null;\\n\\n\\t@Input() slotDefault: SlotContent<ModalContext>;\\n\\t@ContentChild(ModalBodyDirective, {static: false})\\n\\tslotDefaultFromContent: ModalBodyDirective | null;\\n\\n\\t@Input() slotFooter: SlotContent<ModalContext>;\\n\\t@ContentChild(ModalFooterDirective, {static: false})\\n\\tslotFooterFromContent: ModalFooterDirective | null;\\n\\n\\t/**\\n\\t * Event to be triggered when the visible property changes.\\n\\t */\\n\\t@Output() visibleChange = new EventEmitter<boolean>();\\n\\n\\t/**\\n\\t * Event to be triggered when the modal is about to be closed (i.e. the close method was called).\\n\\t */\\n\\t@Output() beforeClose = new EventEmitter<ModalBeforeCloseEvent>();\\n\\n\\t/**\\n\\t * Event to be triggered when the transition is completed and the modal is not visible.\\n\\t */\\n\\t@Output() hidden = new EventEmitter<void>();\\n\\n\\t/**\\n\\t * Event to be triggered when the transition is completed and the modal is visible.\\n\\t */\\n\\t@Output() shown = new EventEmitter<void>();\\n\\n\\treadonly defaultSlots = writable(defaultConfig);\\n\\treadonly _widget = callWidgetFactory(createModal, 'modal', this.defaultSlots);\\n\\treadonly widget = toSlotContextWidget(this._widget);\\n\\treadonly api = this._widget.api;\\n\\treadonly modalDirective = mergeDirectives(this._widget.directives.modalPortalDirective, this._widget.directives.modalDirective);\\n\\treadonly backdropDirective = mergeDirectives(this._widget.directives.backdropPortalDirective, this._widget.directives.backdropDirective);\\n\\n\\treadonly state: Signal<ModalState> = toSignal(this._widget.state$, {requireSync: true});\\n\\n\\tconstructor() {\\n\\t\\tthis._widget.patch({\\n\\t\\t\\tonShown: () => this.shown.emit(),\\n\\t\\t\\tonHidden: () => this.hidden.emit(),\\n\\t\\t\\tonBeforeClose: (event) => this.beforeClose.emit(event),\\n\\t\\t\\tonVisibleChange: (event) => this.visibleChange.emit(event),\\n\\t\\t});\\n\\t\\teffect(() => {\\n\\t\\t\\t// TODO: workaround to be removed when https://github.com/angular/angular/issues/50320 is fixed\\n\\t\\t\\tthis.state();\\n\\t\\t});\\n\\t}\\n\\n\\tngAfterContentChecked(): void {\\n\\t\\tthis._widget.patchSlots({\\n\\t\\t\\tslotDefault: this.slotDefaultFromContent?.templateRef,\\n\\t\\t\\tslotFooter: this.slotFooterFromContent?.templateRef,\\n\\t\\t\\tslotHeader: this.slotHeaderFromContent?.templateRef,\\n\\t\\t\\tslotStructure: this.slotStructureFromContent?.templateRef,\\n\\t\\t\\tslotTitle: this.slotTitleFromContent?.templateRef,\\n\\t\\t});\\n\\t}\\n\\n\\tngOnChanges(changes: SimpleChanges): void {\\n\\t\\tpatchSimpleChanges(this._widget.patch, changes);\\n\\t}\\n}\\n","import type {\\n\\tWidgetProps,\\n\\tPaginationContext as PaginationCoreContext,\\n\\tPaginationNumberContext as PaginationNumberCoreContext,\\n\\tWidgetState,\\n} from '@agnos-ui/core';\\nimport {createPagination, toSlotContextWidget} from '@agnos-ui/core';\\nimport {AsyncPipe, NgForOf, NgIf} from '@angular/common';\\nimport type {AfterContentChecked, OnChanges, Signal, SimpleChanges} from '@angular/core';\\nimport {\\n\\tChangeDetectionStrategy,\\n\\tComponent,\\n\\tContentChild,\\n\\tDirective,\\n\\tEventEmitter,\\n\\tInput,\\n\\tOutput,\\n\\tTemplateRef,\\n\\tViewChild,\\n\\tViewEncapsulation,\\n\\tinject,\\n} from '@angular/core';\\nimport type {AdaptWidgetSlots, AdaptSlotContentProps, SlotContent} from '../slot.directive';\\nimport {ComponentTemplate, SlotDirective, callWidgetFactory} from '../slot.directive';\\nimport {patchSimpleChanges} from '../utils';\\nimport {toSignal} from '@angular/core/rxjs-interop';\\n\\n/**\\n * A type for the context of the pagination slot\\n */\\nexport type PaginationContext = AdaptSlotContentProps<PaginationCoreContext>;\\n\\n/**\\n * A type for the context of the pagination number Slot\\n */\\nexport type PaginationNumberContext = AdaptSlotContentProps<PaginationNumberCoreContext>;\\n/**\\n * A type for the widget of the pagination\\n */\\nexport type PaginationWidget = AdaptWidgetSlots<ReturnType<typeof createPagination>>;\\n/**\\n * A type for the props of the pagination\\n */\\nexport type PaginationProps = WidgetProps<PaginationWidget>;\\n/**\\n * A type for the state of the pagination\\n */\\nexport type PaginationState = WidgetState<PaginationWidget>;\\n\\n/**\\n * A directive to use to give the 'ellipsis' link template to the pagination component\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auPaginationEllipsis]', standalone: true})\\nexport class PaginationEllipsisDirective {\\n\\tpublic templateRef = inject(TemplateRef<PaginationContext>);\\n\\tstatic ngTemplateContextGuard(dir: PaginationEllipsisDirective, context: unknown): context is PaginationContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * A directive to use to give the 'first' link template to the pagination component\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auPaginationFirst]', standalone: true})\\nexport class PaginationFirstDirective {\\n\\tpublic templateRef = inject(TemplateRef<PaginationContext>);\\n\\tstatic ngTemplateContextGuard(dir: PaginationFirstDirective, context: unknown): context is PaginationContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * A directive to use to give the 'last' link template to the pagination component\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auPaginationLast]', standalone: true})\\nexport class PaginationLastDirective {\\n\\tpublic templateRef = inject(TemplateRef<PaginationContext>);\\n\\tstatic ngTemplateContextGuard(dir: PaginationLastDirective, context: unknown): context is PaginationContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * A directive to use to give the 'next' link template to the pagination component\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auPaginationNext]', standalone: true})\\nexport class PaginationNextDirective {\\n\\tpublic templateRef = inject(TemplateRef<PaginationContext>);\\n\\tstatic ngTemplateContextGuard(dir: PaginationNextDirective, context: unknown): context is PaginationContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * A directive to use to give the page 'number' template to the pagination component\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auPaginationNumber]', standalone: true})\\nexport class PaginationNumberDirective {\\n\\tpublic templateRef = inject(TemplateRef<PaginationNumberContext>);\\n\\tstatic ngTemplateContextGuard(dir: PaginationNumberDirective, context: unknown): context is PaginationNumberContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * A directive to use to give the 'previous' link template to the pagination component\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auPaginationPrevious]', standalone: true})\\nexport class PaginationPreviousDirective {\\n\\tpublic templateRef = inject(TemplateRef<PaginationContext>);\\n\\tstatic ngTemplateContextGuard(dir: PaginationPreviousDirective, context: unknown): context is PaginationContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n/**\\n * A directive to use to give the 'Pages' template for the Pages slot\\n */\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auPaginationPages]', standalone: true})\\nexport class PaginationPagesDirective {\\n\\tpublic templateRef = inject(TemplateRef<PaginationContext>);\\n\\tstatic ngTemplateContextGuard(dir: PaginationPagesDirective, context: unknown): context is PaginationContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n@Component({\\n\\tstandalone: true,\\n\\timports: [NgForOf, NgIf, SlotDirective, PaginationPagesDirective],\\n\\ttemplate: \`<ng-template auPaginationPages #pages let-state=\\"state\\" let-widget=\\"widget\\">\\n\\t\\t<li\\n\\t\\t\\t*ngFor=\\"let page of state.pages; index as i\\"\\n\\t\\t\\tclass=\\"page-item\\"\\n\\t\\t\\t[class.active]=\\"page === state.page\\"\\n\\t\\t\\t[class.disabled]=\\"widget.api.isEllipsis(page) || state.disabled\\"\\n\\t\\t\\t[attr.aria-current]=\\"page === state.page ? 'page' : null\\"\\n\\t\\t>\\n\\t\\t\\t<a *ngIf=\\"widget.api.isEllipsis(page)\\" class=\\"page-link au-ellipsis\\" tabindex=\\"-1\\" aria-disabled=\\"true\\">\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotEllipsis\\" [auSlotProps]=\\"{state, widget}\\"></ng-template>\\n\\t\\t\\t</a>\\n\\t\\t\\t<a\\n\\t\\t\\t\\t*ngIf=\\"!widget.api.isEllipsis(page)\\"\\n\\t\\t\\t\\t[attr.aria-label]=\\"state.pagesLabel[i]\\"\\n\\t\\t\\t\\tclass=\\"page-link au-page\\"\\n\\t\\t\\t\\thref=\\"#\\"\\n\\t\\t\\t\\t(click)=\\"widget.actions.select(page); $event.preventDefault()\\"\\n\\t\\t\\t\\t[attr.tabindex]=\\"state.disabled ? '-1' : null\\"\\n\\t\\t\\t\\t[attr.aria-disabled]=\\"state.disabled ? 'true' : null\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotNumberLabel\\" [auSlotProps]=\\"{state, widget, displayedPage: page}\\"></ng-template>\\n\\t\\t\\t\\t<span *ngIf=\\"state.page === page\\" class=\\"visually-hidden\\">{{ state.activeLabel }}</span>\\n\\t\\t\\t</a>\\n\\t\\t</li>\\n\\t</ng-template>\`,\\n})\\nexport class PaginationDefaultSlotsComponent {\\n\\t@ViewChild('pages', {static: true}) pages: TemplateRef<PaginationContext>;\\n}\\n/**\\n * The default slot for the pages\\n */\\nexport const paginationDefaultSlotPages = new ComponentTemplate(PaginationDefaultSlotsComponent, 'pages');\\n\\nconst defaultConfig: Partial<PaginationProps> = {\\n\\tslotPages: paginationDefaultSlotPages,\\n};\\n\\n@Component({\\n\\t// eslint-disable-next-line @angular-eslint/component-selector\\n\\tselector: 'nav[au-pagination]',\\n\\tstandalone: true,\\n\\timports: [NgIf, AsyncPipe, SlotDirective],\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\thost: {\\n\\t\\t'[attr.aria-label]': 'state$().ariaLabel',\\n\\t},\\n\\tencapsulation: ViewEncapsulation.None,\\n\\ttemplate: \`\\n\\t\\t<ng-container *ngIf=\\"widget.state$ | async as state\\">\\n\\t\\t\\t<ul [class]=\\"'au-pagination pagination' + (state.size ? ' pagination-' + state.size : '') + ' ' + state.className\\">\\n\\t\\t\\t\\t<li *ngIf=\\"state.boundaryLinks\\" class=\\"page-item\\" [class.disabled]=\\"state.previousDisabled\\">\\n\\t\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\t\\t[attr.aria-label]=\\"state.ariaFirstLabel\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"page-link au-first\\"\\n\\t\\t\\t\\t\\t\\thref=\\"#\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\"widget.actions.first(); $event.preventDefault()\\"\\n\\t\\t\\t\\t\\t\\t[attr.tabindex]=\\"state.previousDisabled ? '-1' : null\\"\\n\\t\\t\\t\\t\\t\\t[attr.aria-disabled]=\\"state.previousDisabled ? 'true' : null\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<span aria-hidden=\\"true\\">\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotFirst\\" [auSlotProps]=\\"{widget, state}\\"></ng-template>\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li *ngIf=\\"state.directionLinks\\" class=\\"page-item\\" [class.disabled]=\\"state.previousDisabled\\">\\n\\t\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\t\\t[attr.aria-label]=\\"state.ariaPreviousLabel\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"page-link au-previous\\"\\n\\t\\t\\t\\t\\t\\thref=\\"#\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\"widget.actions.previous(); $event.preventDefault()\\"\\n\\t\\t\\t\\t\\t\\t[attr.tabindex]=\\"state.previousDisabled ? '-1' : null\\"\\n\\t\\t\\t\\t\\t\\t[attr.aria-disabled]=\\"state.previousDisabled ? 'true' : null\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<span aria-hidden=\\"true\\">\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotPrevious\\" [auSlotProps]=\\"{widget, state}\\"></ng-template>\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotPages\\" [auSlotProps]=\\"{widget, state}\\"></ng-template>\\n\\t\\t\\t\\t<li *ngIf=\\"state.directionLinks\\" class=\\"page-item\\" [class.disabled]=\\"state.nextDisabled\\">\\n\\t\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\t\\t[attr.aria-label]=\\"state.ariaNextLabel\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"page-link au-next\\"\\n\\t\\t\\t\\t\\t\\thref=\\"#\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\"widget.actions.next(); $event.preventDefault()\\"\\n\\t\\t\\t\\t\\t\\t[attr.tabindex]=\\"state.nextDisabled ? '-1' : null\\"\\n\\t\\t\\t\\t\\t\\t[attr.aria-disabled]=\\"state.nextDisabled ? 'true' : null\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<span aria-hidden=\\"true\\">\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotNext\\" [auSlotProps]=\\"{widget, state}\\"></ng-template>\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li *ngIf=\\"state.boundaryLinks\\" class=\\"page-item\\" [class.disabled]=\\"state.nextDisabled\\">\\n\\t\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\t\\t[attr.aria-label]=\\"state.ariaLastLabel\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"page-link au-last\\"\\n\\t\\t\\t\\t\\t\\thref=\\"#\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\"widget.actions.last(); $event.preventDefault()\\"\\n\\t\\t\\t\\t\\t\\t[attr.tabindex]=\\"state.nextDisabled ? '-1' : null\\"\\n\\t\\t\\t\\t\\t\\t[attr.aria-disabled]=\\"state.nextDisabled ? 'true' : null\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<span aria-hidden=\\"true\\">\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [auSlot]=\\"state.slotLast\\" [auSlotProps]=\\"{widget, state}\\"></ng-template>\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t\\t<div aria-live=\\"polite\\" class=\\"visually-hidden\\">Current page is {{ state.page }}</div>\\n\\t\\t</ng-container>\\n\\t\`,\\n})\\nexport class PaginationComponent implements OnChanges, AfterContentChecked {\\n\\t/**\\n\\t * Provide the label for each \\"Page\\" page button.\\n\\t * This is used for accessibility purposes.\\n\\t * for I18n, we suggest to use the global configuration\\n\\t * override any configuration parameters provided for this\\n\\t * @param processPage - The current page number\\n\\t * @param pageCount - The total number of pages\\n\\t */\\n\\t@Input() ariaPageLabel: ((processPage: number, pageCount: number) => string) | undefined;\\n\\n\\t/**\\n\\t * The label for the nav element.\\n\\t *\\n\\t * for I18n, we suggest to use the global configuration\\n\\t * override any configuration parameters provided for this\\n\\t * @defaultValue 'Page navigation'\\n\\t */\\n\\t@Input() ariaLabel: string | undefined;\\n\\n\\t/**\\n\\t * The label for the \\"active\\" page.\\n\\t * for I18n, we suggest to use the global configuration\\n\\t * override any configuration parameters provided for this\\n\\t * @defaultValue '(current)'\\n\\t */\\n\\t@Input() activeLabel: string | undefined;\\n\\n\\t/**\\n\\t * The label for the \\"First\\" page button.\\n\\t * for I18n, we suggest to use the global configuration\\n\\t * override any configuration parameters provided for this\\n\\t * @defaultValue 'Action link for first page'\\n\\t */\\n\\t@Input() ariaFirstLabel: string | undefined;\\n\\n\\t/**\\n\\t * The label for the \\"Previous\\" page button.\\n\\t * for I18n, we suggest to use the global configuration\\n\\t * override any configuration parameters provided for this\\n\\t * @defaultValue 'Action link for previous page'\\n\\t */\\n\\t@Input() ariaPreviousLabel: string | undefined;\\n\\n\\t/**\\n\\t * The label for the \\"Next\\" page button.\\n\\t * for I18n, we suggest to use the global configuration\\n\\t * override any configuration parameters provided for this\\n\\t * @defaultValue 'Action link for next page'\\n\\t */\\n\\t@Input() ariaNextLabel: string | undefined;\\n\\n\\t/**\\n\\t * The label for the \\"Last\\" page button.\\n\\t * for I18n, we suggest to use the global configuration\\n\\t * override any configuration parameters provided for this\\n\\t * @defaultValue 'Action link for last page'\\n\\t */\\n\\t@Input() ariaLastLabel: string | undefined;\\n\\n\\treadonly _widget = callWidgetFactory(createPagination, 'pagination', defaultConfig);\\n\\treadonly widget = toSlotContextWidget(this._widget);\\n\\treadonly api = this._widget.api;\\n\\n\\t@Input() slotEllipsis: SlotContent<PaginationContext>;\\n\\t@ContentChild(PaginationEllipsisDirective, {static: false})\\n\\tslotEllipsisFromContent: PaginationEllipsisDirective | undefined;\\n\\n\\t@Input() slotFirst: SlotContent<PaginationContext>;\\n\\t@ContentChild(PaginationFirstDirective, {static: false})\\n\\tslotFirstFromContent: PaginationFirstDirective | undefined;\\n\\n\\t@Input() slotPrevious: SlotContent<PaginationContext>;\\n\\t@ContentChild(PaginationPreviousDirective, {static: false})\\n\\tslotPreviousFromContent: PaginationPreviousDirective | undefined;\\n\\n\\t@Input() slotNext: SlotContent<PaginationContext>;\\n\\t@ContentChild(PaginationNextDirective, {static: false})\\n\\tslotNextFromContent: PaginationNextDirective | undefined;\\n\\n\\t@Input() slotLast: SlotContent<PaginationContext>;\\n\\t@ContentChild(PaginationLastDirective, {static: false})\\n\\tslotLastFromContent: PaginationLastDirective | undefined;\\n\\n\\t@Input() slotPages: SlotContent<PaginationContext>;\\n\\t@ContentChild(PaginationPagesDirective, {static: false})\\n\\tslotPagesFromContent: PaginationPagesDirective | undefined;\\n\\n\\t@Input() slotNumberLabel: SlotContent<PaginationNumberContext>;\\n\\t@ContentChild(PaginationNumberDirective, {static: false})\\n\\tslotNumberLabelFromContent: PaginationNumberDirective | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, pagination links will be disabled.\\n\\t */\\n\\t@Input() disabled: boolean | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, the \\"First\\" and \\"Last\\" page links are shown.\\n\\t */\\n\\t@Input() boundaryLinks: boolean | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, the \\"Next\\" and \\"Previous\\" page links are shown.\\n\\t */\\n\\t@Input() directionLinks: boolean | undefined;\\n\\n\\t/**\\n\\t * The number of items in your paginated collection.\\n\\t *\\n\\t * Note, that this is not the number of pages. Page numbers are calculated dynamically based on\\n\\t * \`collectionSize\` and \`pageSize\`. Ex. if you have 100 items in your collection and displaying 20 items per page,\\n\\t * you'll end up with 5 pages.\\n\\t * Whatever the collectionSize the page number is of minimum 1.\\n\\t * @defaultValue 0\\n\\t */\\n\\t@Input() collectionSize: number | undefined;\\n\\n\\t/**\\n\\t * The current page.\\n\\t *\\n\\t * Page numbers start with \`1\`.\\n\\t * @defaultValue 1\\n\\t */\\n\\t@Input() page: number | undefined;\\n\\n\\t/**\\n\\t * The number of items per page.\\n\\t * @defaultValue 10\\n\\t */\\n\\t@Input() pageSize: number | undefined;\\n\\n\\t/**\\n\\t * The pagination display size.\\n\\t *\\n\\t * Bootstrap currently supports small and large sizes.\\n\\t * @defaultValue null\\n\\t */\\n\\t@Input() size: 'sm' | 'lg' | null | undefined;\\n\\n\\t/**\\n\\t * pagesFactory returns a function computing the array of pages to be displayed\\n\\t * as number (-1 are treated as ellipsis).\\n\\t * Use Page slot to customize the pages view and not this\\n\\t */\\n\\t@Input() pagesFactory: ((page: number, pageCount: number) => number[]) | undefined;\\n\\n\\t/**\\n\\t * An event fired when the page is changed.\\n\\t *\\n\\t * Event payload is the number of the newly selected page.\\n\\t *\\n\\t * Page numbers start with \`1\`.\\n\\t */\\n\\t@Output() pageChange = new EventEmitter<number>(true);\\n\\n\\t/**\\n\\t * An input to add a custom class to the UL\\n\\t */\\n\\t@Input() className: string | undefined;\\n\\n\\tstate$: Signal<PaginationState> = toSignal(this._widget.state$, {requireSync: true});\\n\\n\\tconstructor() {\\n\\t\\tthis._widget.patch({\\n\\t\\t\\tonPageChange: (page: number) => this.pageChange.emit(page),\\n\\t\\t});\\n\\t}\\n\\n\\tngOnChanges(changes: SimpleChanges): void {\\n\\t\\tpatchSimpleChanges(this._widget.patch, changes);\\n\\t}\\n\\n\\tngAfterContentChecked(): void {\\n\\t\\tthis._widget.patchSlots({\\n\\t\\t\\tslotEllipsis: this.slotEllipsisFromContent?.templateRef,\\n\\t\\t\\tslotFirst: this.slotFirstFromContent?.templateRef,\\n\\t\\t\\tslotLast: this.slotLastFromContent?.templateRef,\\n\\t\\t\\tslotNext: this.slotNextFromContent?.templateRef,\\n\\t\\t\\tslotNumberLabel: this.slotNumberLabelFromContent?.templateRef,\\n\\t\\t\\tslotPages: this.slotPagesFromContent?.templateRef,\\n\\t\\t\\tslotPrevious: this.slotPreviousFromContent?.templateRef,\\n\\t\\t});\\n\\t}\\n}\\n","import type {StarContext, WidgetProps, WidgetState} from '@agnos-ui/core';\\nimport {createRating} from '@agnos-ui/core';\\nimport {NgForOf} from '@angular/common';\\nimport type {AfterContentChecked, OnChanges, Signal, SimpleChanges} from '@angular/core';\\nimport {\\n\\tChangeDetectionStrategy,\\n\\tComponent,\\n\\tContentChild,\\n\\tDirective,\\n\\tEventEmitter,\\n\\tHostBinding,\\n\\tInput,\\n\\tOutput,\\n\\tTemplateRef,\\n\\tViewEncapsulation,\\n\\tforwardRef,\\n\\tinject,\\n} from '@angular/core';\\nimport {toSignal} from '@angular/core/rxjs-interop';\\nimport type {ControlValueAccessor} from '@angular/forms';\\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\\nimport type {AdaptSlotContentProps, AdaptWidgetSlots, SlotContent} from '../slot.directive';\\nimport {SlotDirective, callWidgetFactory} from '../slot.directive';\\nimport {patchSimpleChanges} from '../utils';\\n\\nexport type RatingWidget = AdaptWidgetSlots<ReturnType<typeof createRating>>;\\nexport type RatingProps = WidgetProps<RatingWidget>;\\nexport type RatingState = WidgetState<RatingWidget>;\\n\\n// eslint-disable-next-line @angular-eslint/directive-selector\\n@Directive({selector: 'ng-template[auRatingStar]', standalone: true})\\nexport class RatingStarDirective {\\n\\tpublic templateRef = inject(TemplateRef<AdaptSlotContentProps<StarContext>>);\\n\\tstatic ngTemplateContextGuard(_dir: RatingStarDirective, context: unknown): context is StarContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n@Component({\\n\\tselector: 'au-rating',\\n\\tstandalone: true,\\n\\timports: [NgForOf, SlotDirective],\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\tencapsulation: ViewEncapsulation.None,\\n\\thost: {\\n\\t\\tclass: 'd-inline-flex au-rating',\\n\\t\\t'[tabindex]': 'state$().tabindex',\\n\\t\\trole: 'slider',\\n\\t\\t'aria-valuemin': '0',\\n\\t\\t'[attr.aria-valuemax]': 'state$().maxRating',\\n\\t\\t'[attr.aria-valuenow]': 'state$().visibleRating',\\n\\t\\t'[attr.aria-valuetext]': 'state$().ariaValueText',\\n\\t\\t'[attr.aria-disabled]': 'state$().disabled ? true : null',\\n\\t\\t'[attr.aria-readonly]': 'state$().readonly ? true : null',\\n\\t\\t'[attr.aria-label]': 'state$().ariaLabel || null',\\n\\t\\t'(blur)': 'onTouched()',\\n\\t\\t'(keydown)': '_widget.actions.handleKey($event)',\\n\\t\\t'(mouseleave)': '_widget.actions.leave()',\\n\\t\\t'[class]': 'state$().className',\\n\\t},\\n\\ttemplate: \`\\n\\t\\t<ng-template ngFor [ngForOf]=\\"state$().stars\\" [ngForTrackBy]=\\"trackByIndex\\" let-index=\\"index\\">\\n\\t\\t\\t<span class=\\"visually-hidden\\">({{ index < state$().visibleRating ? '*' : ' ' }})</span>\\n\\t\\t\\t<span\\n\\t\\t\\t\\tclass=\\"au-rating-star\\"\\n\\t\\t\\t\\t(mouseenter)=\\"_widget.actions.hover(index + 1)\\"\\n\\t\\t\\t\\t(click)=\\"_widget.actions.click(index + 1)\\"\\n\\t\\t\\t\\t[style.cursor]=\\"state$().isInteractive ? 'pointer' : 'default'\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<ng-template [auSlot]=\\"state$().slotStar\\" [auSlotProps]=\\"state$().stars[index]\\"></ng-template>\\n\\t\\t\\t</span>\\n\\t\\t</ng-template>\\n\\t\`,\\n\\tproviders: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => RatingComponent), multi: true}],\\n})\\nexport class RatingComponent implements ControlValueAccessor, OnChanges, AfterContentChecked {\\n\\treadonly _widget = callWidgetFactory(createRating, 'rating');\\n\\treadonly api = this._widget.api;\\n\\n\\tstate$: Signal<RatingState> = toSignal(this._widget.state$, {requireSync: true});\\n\\n\\tonChange = (_: any) => {};\\n\\tonTouched = () => {};\\n\\n\\t// TODO angular is failing when adding this host binding in decorator part\\n\\t@HostBinding('[attr.aria-labelledby]') get hostAriaLabelledBy() {\\n\\t\\treturn this.state$().ariaLabelledBy || null;\\n\\t}\\n\\n\\t/**\\n\\t * Return the value for the 'aria-value' attribute.\\n\\t */\\n\\t@Input() ariaValueTextFn: ((rating: number, maxRating: number) => string) | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, the rating is disabled.\\n\\t */\\n\\t@Input() disabled: boolean | undefined;\\n\\n\\t/**\\n\\t * The maximum rating that can be given.\\n\\t */\\n\\t@Input() maxRating: number | undefined;\\n\\n\\t/**\\n\\t * The current rating. Could be a decimal value like \`3.75\`.\\n\\t */\\n\\t@Input() rating: number | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, the rating can't be changed.\\n\\t */\\n\\t@Input() readonly: boolean | undefined;\\n\\n\\t/**\\n\\t * Define if the rating can be reset.\\n\\t *\\n\\t * If set to true, the user can 'unset' the rating value by cliking on the current rating value.\\n\\t */\\n\\t@Input() resettable: boolean | undefined;\\n\\n\\t@Input() slotStar: SlotContent<AdaptSlotContentProps<StarContext>>;\\n\\t@ContentChild(RatingStarDirective, {static: false}) slotStarFromContent: RatingStarDirective | undefined;\\n\\n\\t/**\\n\\t * Allows setting a custom rating tabindex.\\n\\t * If the component is disabled, \`tabindex\` will still be set to \`-1\`.\\n\\t */\\n\\t@Input() tabindex: number | undefined;\\n\\n\\t/**\\n\\t * Classname to be applied on the rating container\\n\\t */\\n\\t@Input() className: string | undefined;\\n\\n\\t/**\\n\\t * The aria label\\n\\t */\\n\\t@Input() ariaLabel: string | undefined;\\n\\n\\t/**\\n\\t * The aria labelled by\\n\\t */\\n\\t@Input() ariaLabelledBy: string | undefined;\\n\\n\\t/**\\n\\t * An event emitted when the user is hovering over a given rating.\\n\\t *\\n\\t * Event payload is equal to the rating being hovered over.\\n\\t */\\n\\t@Output() hover = new EventEmitter<number>();\\n\\n\\t/**\\n\\t * An event emitted when the user stops hovering over a given rating.\\n\\t *\\n\\t * Event payload is equal to the rating of the last item being hovered over.\\n\\t */\\n\\t@Output() leave = new EventEmitter<number>();\\n\\n\\t/**\\n\\t * An event emitted when the rating is changed.\\n\\t *\\n\\t * Event payload is equal to the newly selected rating.\\n\\t */\\n\\t@Output() ratingChange = new EventEmitter<number>();\\n\\n\\tconstructor() {\\n\\t\\tthis._widget.patch({\\n\\t\\t\\tonHover: (event) => this.hover.emit(event),\\n\\t\\t\\tonLeave: (event) => this.leave.emit(event),\\n\\t\\t\\tonRatingChange: (rating: number) => {\\n\\t\\t\\t\\tthis.ratingChange.emit(rating);\\n\\t\\t\\t\\tthis.onChange(rating);\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\twriteValue(value: any): void {\\n\\t\\tthis._widget.patch({rating: value});\\n\\t}\\n\\n\\tregisterOnChange(fn: (value: any) => any): void {\\n\\t\\tthis.onChange = fn;\\n\\t}\\n\\n\\tregisterOnTouched(fn: () => any): void {\\n\\t\\tthis.onTouched = fn;\\n\\t}\\n\\n\\tsetDisabledState(disabled: boolean): void {\\n\\t\\tthis._widget.patch({disabled});\\n\\t}\\n\\n\\tngOnChanges(changes: SimpleChanges): void {\\n\\t\\tpatchSimpleChanges(this._widget.patch, changes);\\n\\t}\\n\\n\\tngAfterContentChecked(): void {\\n\\t\\tthis._widget.patchSlots({\\n\\t\\t\\tslotStar: this.slotStarFromContent?.templateRef,\\n\\t\\t});\\n\\t}\\n\\n\\ttrackByIndex(index: number) {\\n\\t\\treturn index;\\n\\t}\\n}\\n","import type {WidgetProps, WidgetState, ItemCtx} from '@agnos-ui/core';\\nimport {createSelect} from '@agnos-ui/core';\\nimport {CommonModule} from '@angular/common';\\nimport type {OnChanges, Signal, SimpleChanges} from '@angular/core';\\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\\nimport {toSignal} from '@angular/core/rxjs-interop';\\nimport type {AdaptWidgetSlots} from '../slot.directive';\\nimport {callWidgetFactory} from '../slot.directive';\\nimport {UseDirective} from '../transition/use.directive';\\nimport {patchSimpleChanges} from '../utils';\\n\\nexport type SelectWidget<Item> = AdaptWidgetSlots<ReturnType<typeof createSelect<Item>>>;\\nexport type SelectProps<Item> = WidgetProps<SelectWidget<Item>>;\\n\\n@Component({\\n\\tstandalone: true,\\n\\timports: [UseDirective, CommonModule],\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\tselector: 'au-select',\\n\\ttemplateUrl: './select.component.html',\\n\\tstyles: [],\\n\\thost: {\\n\\t\\t'[class]': '\\"au-select dropdown input-group input-group-sm mb-3 d-block\\" + state$().className',\\n\\t},\\n})\\nexport class SelectComponent<Item> implements OnChanges {\\n\\t/**\\n\\t * List of available items for the dropdown\\n\\t */\\n\\t@Input() items: Item[] | undefined;\\n\\n\\t/**\\n\\t * true if the select is open\\n\\t */\\n\\t@Input() opened: boolean | undefined;\\n\\n\\t/**\\n\\t * Filtered text to be display in the filter input\\n\\t */\\n\\t@Input() filterText: string | undefined;\\n\\n\\t/**\\n\\t * the class to attach to the select DOM element\\n\\t */\\n\\t@Input() className: string | undefined;\\n\\n\\t/**\\n\\t * Callback called when the text filter change\\n\\t */\\n\\t@Output() filterTextChange = new EventEmitter<string>();\\n\\n\\t/**\\n\\t * true if the select is disabled\\n\\t */\\n\\t@Input() disabled: boolean | undefined;\\n\\n\\t/**\\n\\t * Custom function to filter an item.\\n\\t * By default, item is considered as a string, and the function returns true if the text is found\\n\\t */\\n\\t@Input() matchFn: ((item: Item, text: string) => boolean) | undefined;\\n\\n\\t/**\\n\\t * Custom function to get the id of an item\\n\\t * By default, the item is returned\\n\\t */\\n\\t@Input() itemId: ((item: Item) => string) | undefined;\\n\\n\\t/**\\n\\t * List of selected items\\n\\t */\\n\\t@Input() selected: Item[] | undefined;\\n\\n\\t/**\\n\\t * true if a loading process is being done\\n\\t */\\n\\t@Input() loading: boolean | undefined;\\n\\n\\treadonly _widget = callWidgetFactory<SelectWidget<Item>>(createSelect, 'select');\\n\\treadonly api = this._widget.api;\\n\\n\\tstate$: Signal<WidgetState<SelectWidget<Item>>> = toSignal(this._widget.state$, {requireSync: true});\\n\\n\\tconstructor() {\\n\\t\\tthis._widget.patch({\\n\\t\\t\\tonFilterTextChange: (event) => this.filterTextChange.emit(event),\\n\\t\\t});\\n\\t}\\n\\n\\tngOnChanges(changes: SimpleChanges) {\\n\\t\\tpatchSimpleChanges(this._widget.patch, changes);\\n\\t}\\n\\n\\titemCtxTrackBy(_: number, itemCtx: ItemCtx<Item>) {\\n\\t\\treturn itemCtx.id;\\n\\t}\\n}\\n","<ng-container>\\n\\t<div [auUse]=\\"_widget.directives.hasFocusDirective\\" role=\\"combobox\\" class=\\"input-group\\" aria-haspopup=\\"listbox\\" aria-expanded=\\"true\\">\\n\\t\\t<ng-container *ngIf=\\"state$().selected as selected\\">\\n\\t\\t\\t<div *ngIf=\\"selected.length\\" class=\\"input-group-text\\" (mousedown)=\\"$event.preventDefault()\\">\\n\\t\\t\\t\\t<div *ngFor=\\"let item of selected\\" class=\\"badge rounded-pill text-bg-primary d-inline-flex align-items-center m-1\\">\\n\\t\\t\\t\\t\\t<div class=\\"me-1\\">{{ item }}</div>\\n\\t\\t\\t\\t\\t<span role=\\"button\\" tabindex=\\"-1\\" aria-label=\\"Close\\" (click)=\\"api.unselect(item)\\">x</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-container>\\n\\t\\t<input\\n\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\tclass=\\"form-control\\"\\n\\t\\t\\t[value]=\\"state$().filterText\\"\\n\\t\\t\\taria-autocomplete=\\"list\\"\\n\\t\\t\\tautoCorrect=\\"off\\"\\n\\t\\t\\tautoCapitalize=\\"none\\"\\n\\t\\t\\tautoComplete=\\"off\\"\\n\\t\\t\\t(keydown)=\\"_widget.actions.onInputKeydown($event)\\"\\n\\t\\t\\t(input)=\\"_widget.actions.onInput($event)\\"\\n\\t\\t/>\\n\\t</div>\\n\\t<ul\\n\\t\\t*ngIf=\\"state$().opened && state$().visible.length\\"\\n\\t\\t[auUse]=\\"_widget.directives.hasFocusDirective\\"\\n\\t\\tclass=\\"dropdown-menu show w-100\\"\\n\\t\\tdata-popper-placement=\\"bottom-start\\"\\n\\t\\t(mousedown)=\\"$event.preventDefault()\\"\\n\\t>\\n\\t\\t<li\\n\\t\\t\\t*ngFor=\\"let itemCtx of state$().visible; trackBy: itemCtxTrackBy\\"\\n\\t\\t\\tclass=\\"dropdown-item position-relative\\"\\n\\t\\t\\t[class.bg-light]=\\"itemCtx === state$().highlighted\\"\\n\\t\\t>\\n\\t\\t\\t<div class=\\"form-check\\">\\n\\t\\t\\t\\t<input type=\\"checkbox\\" tabindex=\\"-1\\" class=\\"form-check-input\\" [id]=\\"itemCtx.id\\" [checked]=\\"itemCtx.selected\\" (change)=\\"itemCtx.toggle()\\" />\\n\\t\\t\\t\\t<label [for]=\\"itemCtx.id\\" class=\\"form-check-label stretched-link\\" (click)=\\"itemCtx.toggle(); $event.preventDefault()\\">\\n\\t\\t\\t\\t\\t{{ itemCtx.item }}\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</ul>\\n</ng-container>\\n<style>\\n\\t.input-group-text {\\n\\t\\tbackground-color: transparent;\\n\\t}\\n\\t.dropdown-menu {\\n\\t\\tposition: absolute;\\n\\t\\tinset: 0px auto auto 0px;\\n\\t\\tmargin: 0px;\\n\\t\\ttransform: translate3d(0px, 45px, 0px);\\n\\t}\\n</style>\\n","import {writable} from '@amadeus-it-group/tansu';\\nimport type {AlertContext as AlertCoreContext, TransitionFn, WidgetProps, WidgetState} from '@agnos-ui/core';\\nimport {createAlert, toSlotContextWidget} from '@agnos-ui/core';\\nimport {NgIf} from '@angular/common';\\nimport type {AfterContentChecked, OnChanges, Signal, SimpleChanges} from '@angular/core';\\nimport {\\n\\tChangeDetectionStrategy,\\n\\tComponent,\\n\\tContentChild,\\n\\tDirective,\\n\\tEventEmitter,\\n\\tinject,\\n\\tInput,\\n\\tOutput,\\n\\tTemplateRef,\\n\\tViewChild,\\n} from '@angular/core';\\nimport {toSignal} from '@angular/core/rxjs-interop';\\nimport type {AdaptSlotContentProps, AdaptWidgetSlots, SlotContent} from '../slot.directive';\\nimport {callWidgetFactory, ComponentTemplate, SlotDirective} from '../slot.directive';\\nimport {SlotDefaultDirective} from '../slotDefault.directive';\\nimport {UseDirective} from '../transition/use.directive';\\nimport {patchSimpleChanges} from '../utils';\\n\\nexport type AlertWidget = AdaptWidgetSlots<ReturnType<typeof createAlert>>;\\nexport type AlertState = WidgetState<AlertWidget>;\\nexport type AlertProps = WidgetProps<AlertWidget>;\\n\\nexport type AlertContext = AdaptSlotContentProps<AlertCoreContext>;\\n\\n@Directive({selector: 'ng-template[auAlertBody]', standalone: true})\\nexport class AlertBodyDirective {\\n\\tpublic templateRef = inject(TemplateRef<AdaptSlotContentProps<AlertContext>>);\\n\\tstatic ngTemplateContextGuard(dir: AlertBodyDirective, context: unknown): context is AlertCoreContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n@Directive({selector: 'ng-template[auAlertStructure]', standalone: true})\\nexport class AlertStructureDirective {\\n\\tpublic templateRef = inject(TemplateRef<AlertContext>);\\n\\tstatic ngTemplateContextGuard(dir: AlertStructureDirective, context: unknown): context is AlertCoreContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n@Component({\\n\\tstandalone: true,\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\timports: [NgIf, SlotDirective, AlertStructureDirective],\\n\\ttemplate: \` <ng-template auAlertStructure #structure let-state=\\"state\\" let-widget=\\"widget\\">\\n\\t\\t<div class=\\"alert-body\\">\\n\\t\\t\\t<ng-template [auSlot]=\\"state.slotDefault\\" [auSlotProps]=\\"{state, widget}\\"></ng-template>\\n\\t\\t</div>\\n\\t\\t<button\\n\\t\\t\\t*ngIf=\\"state.dismissible\\"\\n\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\tclass=\\"btn-close ms-auto\\"\\n\\t\\t\\t(click)=\\"widget.api.close()\\"\\n\\t\\t\\t[attr.aria-label]=\\"state.ariaCloseButtonLabel\\"\\n\\t\\t></button>\\n\\t</ng-template>\`,\\n})\\nexport class AlertDefaultSlotsComponent {\\n\\t@ViewChild('structure', {static: true}) structure: TemplateRef<AlertCoreContext>;\\n}\\n\\nexport const alertDefaultSlotStructure = new ComponentTemplate(AlertDefaultSlotsComponent, 'structure');\\n\\nconst defaultConfig: Partial<AlertProps> = {\\n\\tslotStructure: alertDefaultSlotStructure,\\n};\\n\\n@Component({\\n\\tselector: 'au-alert',\\n\\tstandalone: true,\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\timports: [NgIf, SlotDirective, UseDirective, SlotDefaultDirective],\\n\\ttemplate: \` <ng-template [auSlotDefault]=\\"defaultSlots\\">\\n\\t\\t\\t<ng-content></ng-content>\\n\\t\\t</ng-template>\\n\\n\\t\\t<div\\n\\t\\t\\t*ngIf=\\"!state().hidden\\"\\n\\t\\t\\t[auUse]=\\"widget.directives.transitionDirective\\"\\n\\t\\t\\tclass=\\"au-alert d-flex w-100 alert alert-{{ state().type }}\\"\\n\\t\\t\\trole=\\"alert\\"\\n\\t\\t>\\n\\t\\t\\t<ng-template [auSlot]=\\"state().slotStructure\\" [auSlotProps]=\\"{state: state(), widget}\\"></ng-template>\\n\\t\\t</div>\`,\\n})\\nexport class AlertComponent implements OnChanges, AfterContentChecked {\\n\\t/**\\n\\t * Type of the alert.\\n\\t * There are the following types: 'success', 'info', 'warning', 'danger', 'primary', 'secondary', 'light' and 'dark'.\\n\\t */\\n\\t@Input()\\n\\ttype: string | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, alert can be dismissed by the user.\\n\\t * The close button (×) will be displayed and you can be notified of the event with the (close) output.\\n\\t */\\n\\t@Input()\\n\\tdismissible: boolean | undefined;\\n\\n\\t/**\\n\\t * The transition function will be executed when the alert is displayed or hidden.\\n\\t *\\n\\t * Depending on the value of AlertProps.animationOnInit, the animation can be optionally skipped during the showing process.\\n\\t */\\n\\t@Input()\\n\\ttransition: TransitionFn | undefined;\\n\\n\\t/**\\n\\t * If \`true\` the alert is visible to the user\\n\\t */\\n\\t@Input()\\n\\tvisible: boolean | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, alert opening will be animated.\\n\\t *\\n\\t * Animation is triggered  when the \`.open()\` function is called\\n\\t * or the visible prop is changed\\n\\t */\\n\\t@Input()\\n\\tanimationOnInit: boolean | undefined;\\n\\n\\t/**\\n\\t * If \`true\`, alert closing will be animated.\\n\\t *\\n\\t * Animation is triggered  when clicked on the close button (×),\\n\\t * via the \`.close()\` function or the visible prop is changed\\n\\t */\\n\\t@Input()\\n\\tanimation: boolean | undefined;\\n\\n\\t/**\\n\\t * Accessibility close button label\\n\\t */\\n\\t@Input() ariaCloseButtonLabel: string | undefined;\\n\\n\\t@Input() slotDefault: SlotContent<AdaptSlotContentProps<AlertCoreContext>>;\\n\\t@ContentChild(AlertBodyDirective, {static: false})\\n\\tslotDefaultFromContent: AlertBodyDirective | null;\\n\\n\\t@Input() slotStructure: SlotContent<AdaptSlotContentProps<AlertCoreContext>>;\\n\\t@ContentChild(AlertStructureDirective, {static: false}) slotStructureFromContent: AlertStructureDirective | undefined;\\n\\n\\t/**\\n\\t * Callback called when the alert visibility changed.\\n\\t */\\n\\t@Output() visibleChange = new EventEmitter<boolean>();\\n\\n\\t/**\\n\\t * Callback called when the alert is hidden.\\n\\t */\\n\\t@Output() hidden = new EventEmitter<void>();\\n\\n\\t/**\\n\\t * Callback called when the alert is shown.\\n\\t */\\n\\t@Output() shown = new EventEmitter<void>();\\n\\n\\treadonly defaultSlots = writable(defaultConfig);\\n\\treadonly _widget = callWidgetFactory(createAlert, 'alert', this.defaultSlots);\\n\\treadonly widget = toSlotContextWidget(this._widget);\\n\\treadonly api = this._widget.api;\\n\\treadonly state: Signal<AlertState> = toSignal(this._widget.state$, {requireSync: true});\\n\\n\\tconstructor() {\\n\\t\\tthis._widget.patch({\\n\\t\\t\\tonVisibleChange: (event) => this.visibleChange.emit(event),\\n\\t\\t\\tonShown: () => this.shown.emit(),\\n\\t\\t\\tonHidden: () => this.hidden.emit(),\\n\\t\\t});\\n\\t}\\n\\n\\tngAfterContentChecked(): void {\\n\\t\\tthis._widget.patchSlots({\\n\\t\\t\\tslotDefault: this.slotDefaultFromContent?.templateRef,\\n\\t\\t\\tslotStructure: this.slotStructureFromContent?.templateRef,\\n\\t\\t});\\n\\t}\\n\\n\\tngOnChanges(changes: SimpleChanges): void {\\n\\t\\tpatchSimpleChanges(this._widget.patch, changes);\\n\\t}\\n}\\n","import type {AfterContentChecked, AfterViewInit, Signal, SimpleChanges, OnChanges} from '@angular/core';\\nimport {\\n\\tChangeDetectionStrategy,\\n\\tComponent,\\n\\tContentChild,\\n\\tDirective,\\n\\teffect,\\n\\tEventEmitter,\\n\\tinject,\\n\\tInput,\\n\\tOutput,\\n\\tTemplateRef,\\n\\tViewChild,\\n} from '@angular/core';\\nimport {NgIf} from '@angular/common';\\nimport {toSignal} from '@angular/core/rxjs-interop';\\nimport type {AdaptWidgetSlots, AdaptSlotContentProps} from '../slot.directive';\\nimport {callWidgetFactory, ComponentTemplate, SlotDirective} from '../slot.directive';\\nimport type {\\n\\tAccordionItemWidget as AccordionItemWidgetCore,\\n\\tAccordionItemContext as AccordionItemCoreContext,\\n\\tTransitionFn,\\n\\tSlotContent,\\n} from '@agnos-ui/core';\\nimport {createAccordion, toSlotContextWidget} from '@agnos-ui/core';\\nimport type {WidgetProps, WidgetState} from '@agnos-ui/core';\\nimport {patchSimpleChanges} from '../utils';\\nimport {UseDirective} from '../transition/use.directive';\\nimport {writable} from '@amadeus-it-group/tansu';\\n\\nexport type AccordionWidget = AdaptWidgetSlots<ReturnType<typeof createAccordion>>;\\nexport type AccordionProps = WidgetProps<AccordionWidget>;\\nexport type AccordionState = WidgetState<AccordionWidget>;\\n\\nexport type AccordionItemWidget = AdaptWidgetSlots<AccordionItemWidgetCore>;\\nexport type AccordionItemProps = WidgetProps<AccordionItemWidget>;\\nexport type ItemState = WidgetState<AccordionItemWidget>;\\nexport type AccordionItemContext = AdaptSlotContentProps<AccordionItemCoreContext>;\\n\\n@Directive({selector: 'ng-template[auAccordionItemBody]', standalone: true})\\nexport class AccordionBodyDirective {\\n\\tpublic templateRef = inject(TemplateRef<AdaptSlotContentProps<AccordionItemContext>>);\\n\\tstatic ngTemplateContextGuard(dir: AccordionBodyDirective, context: unknown): context is AccordionItemContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n@Directive({selector: 'ng-template[auAccordionItemHeader]', standalone: true})\\nexport class AccordionHeaderDirective {\\n\\tpublic templateRef = inject(TemplateRef<AdaptSlotContentProps<AccordionItemContext>>);\\n\\tstatic ngTemplateContextGuard(dir: AccordionHeaderDirective, context: unknown): context is AccordionItemContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n@Directive({selector: 'ng-template[auAccordionItemStructure]', standalone: true})\\nexport class AccordionItemStructureDirective {\\n\\tpublic templateRef = inject(TemplateRef<AdaptSlotContentProps<AccordionItemContext>>);\\n\\tstatic ngTemplateContextGuard(dir: AccordionItemStructureDirective, context: unknown): context is AccordionItemContext {\\n\\t\\treturn true;\\n\\t}\\n}\\n\\n@Component({\\n\\tstandalone: true,\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\timports: [UseDirective, SlotDirective, NgIf, AccordionHeaderDirective, AccordionBodyDirective],\\n\\ttemplate: \`\\n\\t\\t<ng-template #structure let-state=\\"state\\" let-widget=\\"widget\\">\\n\\t\\t\\t<h2 class=\\"accordion-header {{ state.itemHeaderClass }}\\">\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\t\\tid=\\"{{ state.itemId }}-toggle\\"\\n\\t\\t\\t\\t\\t(click)=\\"widget.actions.click()\\"\\n\\t\\t\\t\\t\\t[class.collapsed]=\\"state.itemCollapsed\\"\\n\\t\\t\\t\\t\\tclass=\\"accordion-button {{ state.itemButtonClass }}\\"\\n\\t\\t\\t\\t\\t[disabled]=\\"state.itemDisabled\\"\\n\\t\\t\\t\\t\\tattr.aria-controls=\\"{{ state.itemId }}-collapse\\"\\n\\t\\t\\t\\t\\t[attr.aria-disabled]=\\"state.itemDisabled\\"\\n\\t\\t\\t\\t\\t[attr.aria-expanded]=\\"!state.itemCollapsed\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<ng-template [auSlotProps]=\\"{state, widget}\\" [auSlot]=\\"state.slotItemHeader\\"></ng-template>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</h2>\\n\\t\\t\\t<div\\n\\t\\t\\t\\t*ngIf=\\"state.shouldBeInDOM\\"\\n\\t\\t\\t\\t[auUse]=\\"widget.directives.collapseDirective\\"\\n\\t\\t\\t\\tattr.aria-labelledby=\\"{{ state.itemId }}-toggle\\"\\n\\t\\t\\t\\tid=\\"{{ state.itemId }}-collapse\\"\\n\\t\\t\\t\\tclass=\\"accordion-collapse {{ state.itemCollapseClass }}\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<div class=\\"accordion-body {{ state.itemBodyClass }}\\">\\n\\t\\t\\t\\t\\t<ng-template [auSlotProps]=\\"{state, widget}\\" [auSlot]=\\"state.slotItemBody\\"></ng-template>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\t\`,\\n})\\nexport class AccordionItemDefaultSlotsComponent {\\n\\t@ViewChild('structure', {static: true}) structure: TemplateRef<AccordionItemContext>;\\n}\\nexport const accordionItemDefaultslotItemStructure = new ComponentTemplate(AccordionItemDefaultSlotsComponent, 'structure');\\n\\nconst defaultConfig: Partial<AccordionItemProps> = {\\n\\tslotItemStructure: accordionItemDefaultslotItemStructure,\\n};\\n\\n@Component({\\n\\t// eslint-disable-next-line @angular-eslint/component-selector\\n\\tselector: '[au-accordion-item]',\\n\\texportAs: 'auAccordionItem',\\n\\tstandalone: true,\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n\\thost: {\\n\\t\\t'[class]': '\\"accordion-item \\" + state().itemClass',\\n\\t\\t'[id]': 'state().itemId',\\n\\t},\\n\\thostDirectives: [\\n\\t\\t{\\n\\t\\t\\tdirective: UseDirective,\\n\\t\\t},\\n\\t],\\n\\timports: [SlotDirective, UseDirective],\\n\\ttemplate: \` <ng-template [auSlotProps]=\\"{state: state(), widget}\\" [auSlot]=\\"state().slotItemStructure\\"></ng-template> \`,\\n})\\nexport class AccordionItemComponent implements OnChanges, AfterContentChecked, AfterViewInit {\\n\\t@Input() slotItemHeader: SlotContent<AdaptSlotContentProps<AccordionItemCoreContext>>;\\n\\t@ContentChild(AccordionHeaderDirective, {static: false})\\n\\tslotItemHeaderFromContent: AccordionHeaderDirective | null;\\n\\t@Input() slotItemBody: SlotContent<AdaptSlotContentProps<AccordionItemCoreContext>>;\\n\\t@ContentChild(AccordionBodyDirective, {static: false})\\n\\tslotItemBodyFromContent: AccordionBodyDirective | null;\\n\\t@Input() slotItemStructure: SlotContent<AdaptSlotContentProps<AccordionItemCoreContext>>;\\n\\t@ContentChild(AccordionItemStructureDirective, {static: false})\\n\\tslotItemStructureFromContent: AccordionItemStructureDirective | null;\\n\\n\\t/**\\n\\t * The id of the accordion-item. It can be used for controlling the accordion-item via the accordion api.\\n\\t */\\n\\t@Input() itemId: string | undefined;\\n\\t/**\\n\\t * The transition to use for the accordion-item collapse when is toggled.\\n\\t */\\n\\t@Input() itemTransition: TransitionFn | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item DOM element.\\n\\t */\\n\\t@Input() itemClass: string | undefined;\\n\\t/**\\n\\t * If \`true\`, the content of the accordion-item collapse will be removed from the DOM. It will be just hidden otherwise.\\n\\t */\\n\\t@Input() itemDestroyOnHide: boolean | undefined;\\n\\t/**\\n\\t * If \`true\`, the accordion-item will be disabled.\\n\\t * It will not react to user's clicks, but still will be possible to toggle programmatically.\\n\\t */\\n\\t@Input() itemDisabled: boolean | undefined;\\n\\t/**\\n\\t * If \`true\`, the accordion-item will be collapsed. Otherwise, it will be expanded.\\n\\t */\\n\\t@Input() itemCollapsed: boolean | undefined;\\n\\t/**\\n\\t * If \`true\`, accordion-item will be animated.\\n\\t */\\n\\t@Input() itemAnimation: boolean | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item header DOM element.\\n\\t */\\n\\t@Input() itemHeaderClass: string | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item collapse DOM element.\\n\\t */\\n\\t@Input() itemButtonClass: string | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item collapse DOM element.\\n\\t */\\n\\t@Input() itemCollapseClass: string | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item body DOM element.\\n\\t */\\n\\t@Input() itemBodyClass: string | undefined;\\n\\t/**\\n\\t * An event fired when an item is shown.\\n\\t */\\n\\t@Output() itemShown = new EventEmitter<void>();\\n\\t/**\\n\\t * An event fired when an item is hidden.\\n\\t */\\n\\t@Output() itemHidden = new EventEmitter<void>();\\n\\t/**\\n\\t * An event fired when the \`collapsed\` value changes.\\n\\t *\\n\\t * Event payload is the new value of collapsed.\\n\\t */\\n\\t@Output() itemCollapsedChange = new EventEmitter<boolean>();\\n\\n\\tdefaultSlots = writable(defaultConfig);\\n\\treadonly ad = inject(AccordionDirective);\\n\\treadonly _widget = callWidgetFactory(this.ad.api.registerItem, null, defaultConfig);\\n\\treadonly widget = toSlotContextWidget(this._widget);\\n\\treadonly api = this._widget.api;\\n\\tuseDirective = inject(UseDirective);\\n\\t// TODO: remove \\"as any\\" when https://github.com/angular/angular/pull/50162 is merged\\n\\tstate: Signal<ItemState> = toSignal(this._widget.state$ as any, {requireSync: true});\\n\\n\\tconstructor() {\\n\\t\\tthis._widget.patch({\\n\\t\\t\\tonItemCollapsedChange: (collapsed) => this.itemCollapsedChange.emit(collapsed),\\n\\t\\t\\tonItemHidden: () => this.itemHidden.emit(),\\n\\t\\t\\tonItemShown: () => this.itemShown.emit(),\\n\\t\\t});\\n\\t\\teffect(() => {\\n\\t\\t\\t// TODO: workaround to be removed when https://github.com/angular/angular/issues/50320 is fixed\\n\\t\\t\\tthis.state();\\n\\t\\t});\\n\\t\\tthis.useDirective.use = this._widget.directives.accordionItemDirective;\\n\\t\\tthis.useDirective.ngOnChanges({\\n\\t\\t\\tuseDirective: {\\n\\t\\t\\t\\tpreviousValue: undefined,\\n\\t\\t\\t\\tcurrentValue: this.useDirective.use,\\n\\t\\t\\t\\tfirstChange: true,\\n\\t\\t\\t\\tisFirstChange: () => true,\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\tngAfterContentChecked(): void {\\n\\t\\tthis._widget.patchSlots({\\n\\t\\t\\tslotItemStructure: this.slotItemStructureFromContent?.templateRef,\\n\\t\\t\\tslotItemHeader: this.slotItemHeaderFromContent?.templateRef,\\n\\t\\t\\tslotItemBody: this.slotItemBodyFromContent?.templateRef,\\n\\t\\t});\\n\\t}\\n\\n\\tngOnChanges(changes: SimpleChanges): void {\\n\\t\\tpatchSimpleChanges(this._widget.patch, changes);\\n\\t}\\n\\tngAfterViewInit() {\\n\\t\\tqueueMicrotask(() => this.api.initDone());\\n\\t}\\n}\\n\\n@Directive({\\n\\tselector: '[auAccordion]',\\n\\texportAs: 'auAccordion',\\n\\tstandalone: true,\\n\\thost: {\\n\\t\\t'[class]': '\\"accordion \\" + state$().accordionClass',\\n\\t},\\n\\thostDirectives: [\\n\\t\\t{\\n\\t\\t\\tdirective: UseDirective,\\n\\t\\t},\\n\\t],\\n})\\nexport class AccordionDirective implements OnChanges {\\n\\tuseDirective = inject(UseDirective);\\n\\n\\t/**\\n\\t * If \`true\`, only one item at the time can stay open.\\n\\t */\\n\\t@Input() closeOthers: boolean | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion DOM element.\\n\\t */\\n\\t@Input() accordionClass: string | undefined;\\n\\n\\t/**\\n\\t * An event fired when an item is shown.\\n\\t *\\n\\t * Event payload is the id of the item.\\n\\t */\\n\\t@Output() shown: EventEmitter<string> = new EventEmitter<string>();\\n\\t/**\\n\\t * An event fired when an item is hidden.\\n\\t *\\n\\t * Event payload is the id of the item.\\n\\t */\\n\\t@Output() hidden: EventEmitter<string> = new EventEmitter<string>();\\n\\n\\t/**\\n\\t * The id of the accordion-item. It can be used for controlling the accordion-item via the accordion api.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemId: string | undefined;\\n\\t/**\\n\\t * If \`true\`, the content of the accordion-item collapse will be removed from the DOM. It will be just hidden otherwise.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemDestroyOnHide: boolean | undefined;\\n\\t/**\\n\\t * If \`true\`, the accordion-item will be disabled.\\n\\t * It will not react to user's clicks, but still will be possible to toggle programmatically.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemDisabled: boolean | undefined;\\n\\t/**\\n\\t * If \`true\`, the accordion-item will be collapsed. Otherwise, it will be expanded.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemCollapsed: boolean | undefined;\\n\\t/**\\n\\t * If \`true\`, accordion-item will be animated.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemAnimation: boolean | undefined;\\n\\t/**\\n\\t * The transition to use for the accordion-item collapse when is toggled.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemTransition: TransitionFn | undefined;\\n\\t@Input() slotItemStructure: SlotContent<AdaptSlotContentProps<AccordionItemCoreContext>>;\\n\\t@Input() slotItemBody: SlotContent<AdaptSlotContentProps<AccordionItemCoreContext>>;\\n\\t@Input() slotItemHeader: SlotContent<AdaptSlotContentProps<AccordionItemCoreContext>>;\\n\\t/**\\n\\t * Classes to add on the accordion-item DOM element.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemClass: string | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item header DOM element.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemHeaderClass: string | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item toggle button DOM element.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemButtonClass: string | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item collapse DOM element.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemCollapseClass: string | undefined;\\n\\t/**\\n\\t * Classes to add on the accordion-item body DOM element.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Input() itemBodyClass: string | undefined;\\n\\n\\t//should not be documented\\n\\t/**\\n\\t * An event fired when an item is shown.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Output() itemShown = new EventEmitter<void>();\\n\\t/**\\n\\t * An event fired when an item is hidden.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Output() itemHidden = new EventEmitter<void>();\\n\\t/**\\n\\t * An event fired when the \`collapsed\` value changes.\\n\\t *\\n\\t * Event payload is the new value of collapsed.\\n\\t *\\n\\t * It is a prop of the accordion-item.\\n\\t */\\n\\t@Output() itemCollapsedChange = new EventEmitter<boolean>();\\n\\n\\treadonly _widget = callWidgetFactory(createAccordion, 'accordion', {});\\n\\treadonly api = this._widget.api;\\n\\n\\t// TODO: remove \\"as any\\" when https://github.com/angular/angular/pull/50162 is merged\\n\\tstate$: Signal<AccordionState> = toSignal(this._widget.state$ as any, {requireSync: true});\\n\\n\\tconstructor() {\\n\\t\\tthis.useDirective.use = this._widget.directives.accordionDirective;\\n\\t\\tthis.useDirective.ngOnChanges({\\n\\t\\t\\tuseDirective: {\\n\\t\\t\\t\\tpreviousValue: undefined,\\n\\t\\t\\t\\tcurrentValue: this.useDirective.use,\\n\\t\\t\\t\\tfirstChange: true,\\n\\t\\t\\t\\tisFirstChange: () => true,\\n\\t\\t\\t},\\n\\t\\t});\\n\\t\\tthis._widget.patch({\\n\\t\\t\\tonItemCollapsedChange: (collapsed) => this.itemCollapsedChange.emit(collapsed),\\n\\t\\t\\tonItemHidden: () => this.itemHidden.emit(),\\n\\t\\t\\tonItemShown: () => this.itemShown.emit(),\\n\\t\\t\\tonShown: (id) => this.shown.emit(id),\\n\\t\\t\\tonHidden: (id) => this.hidden.emit(id),\\n\\t\\t});\\n\\t}\\n\\n\\tngOnChanges(changes: SimpleChanges): void {\\n\\t\\tpatchSimpleChanges(this._widget.patch, changes);\\n\\t}\\n}\\n","import {NgModule} from '@angular/core';\\nimport {\\n\\tModalBodyDirective,\\n\\tModalComponent,\\n\\tModalFooterDirective,\\n\\tModalHeaderDirective,\\n\\tModalStructureDirective,\\n\\tModalTitleDirective,\\n} from './modal/modal.component';\\nimport {\\n\\tPaginationComponent,\\n\\tPaginationEllipsisDirective,\\n\\tPaginationFirstDirective,\\n\\tPaginationLastDirective,\\n\\tPaginationNextDirective,\\n\\tPaginationNumberDirective,\\n\\tPaginationPagesDirective,\\n\\tPaginationPreviousDirective,\\n} from './pagination/pagination.component';\\nimport {RatingComponent, RatingStarDirective} from './rating/rating.component';\\nimport {SelectComponent} from './select/select.component';\\nimport {UseDirective} from './transition/use.directive';\\nimport {SlotDirective} from './slot.directive';\\nimport {AlertComponent} from './alert/alert.component';\\nimport {AccordionDirective, AccordionItemComponent, AccordionHeaderDirective, AccordionBodyDirective} from './accordion/accordion.component';\\n\\n/* istanbul ignore next */\\nconst components = [\\n\\tSlotDirective,\\n\\tSelectComponent,\\n\\tUseDirective,\\n\\tRatingComponent,\\n\\tRatingStarDirective,\\n\\tPaginationComponent,\\n\\tPaginationEllipsisDirective,\\n\\tPaginationFirstDirective,\\n\\tPaginationLastDirective,\\n\\tPaginationNextDirective,\\n\\tPaginationNumberDirective,\\n\\tPaginationPreviousDirective,\\n\\tPaginationPagesDirective,\\n\\tModalComponent,\\n\\tModalStructureDirective,\\n\\tModalHeaderDirective,\\n\\tModalTitleDirective,\\n\\tModalBodyDirective,\\n\\tModalFooterDirective,\\n\\tAlertComponent,\\n\\tAccordionDirective,\\n\\tAccordionItemComponent,\\n\\tAccordionHeaderDirective,\\n\\tAccordionBodyDirective,\\n];\\n\\n@NgModule({\\n\\tdeclarations: [],\\n\\timports: components,\\n\\texports: components,\\n})\\nexport class AgnosUIAngularModule {}\\n","import {ApplicationRef, createComponent, EnvironmentInjector, EventEmitter, inject, Injectable, Injector} from '@angular/core';\\nimport type {ModalProps} from './modal.component';\\nimport {ModalComponent} from './modal.component';\\nimport type {Subscription} from 'rxjs';\\n\\nexport interface ModalServiceOpenOptions {\\n\\tinjector?: Injector;\\n}\\n\\n@Injectable({providedIn: 'root'})\\nexport class ModalService {\\n\\tprivate _injector = inject(Injector);\\n\\tprivate _applicationRef = inject(ApplicationRef);\\n\\n\\tasync open(options: Partial<ModalProps>, {injector = this._injector}: ModalServiceOpenOptions = {}): Promise<any> {\\n\\t\\tconst component = createComponent(ModalComponent, {\\n\\t\\t\\tenvironmentInjector: injector.get(EnvironmentInjector),\\n\\t\\t\\telementInjector: injector,\\n\\t\\t});\\n\\t\\tconst subscriptions: Subscription[] = [];\\n\\t\\ttry {\\n\\t\\t\\tfor (const prop of Object.keys(options) as (string & keyof ModalProps)[]) {\\n\\t\\t\\t\\tconst value = options[prop];\\n\\t\\t\\t\\tif (prop.startsWith('on')) {\\n\\t\\t\\t\\t\\tconst eventName = \`\${prop[2].toLowerCase()}\${prop.substring(3)}\`;\\n\\t\\t\\t\\t\\tconst eventEmitter = (component.instance as any)[eventName];\\n\\t\\t\\t\\t\\tif (eventEmitter instanceof EventEmitter) {\\n\\t\\t\\t\\t\\t\\tsubscriptions.push(eventEmitter.subscribe(value));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcomponent.setInput(prop, value);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tthis._applicationRef.attachView(component.hostView);\\n\\t\\t\\treturn await component.instance.api.open();\\n\\t\\t} finally {\\n\\t\\t\\tcomponent.destroy();\\n\\t\\t\\tfor (const subscription of subscriptions) {\\n\\t\\t\\t\\tsubscription.unsubscribe();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n","/*\\n * Public API Surface of agnos-ui-angular\\n */\\n\\nexport * from './lib/agnos-ui-angular.module';\\nexport * from './lib/rating/rating.component';\\nexport * from './lib/select/select.component';\\nexport * from './lib/transition/use.directive';\\nexport * from './lib/pagination/pagination.component';\\nexport * from './lib/slot.directive';\\nexport * from './lib/modal/modal.service';\\nexport * from './lib/modal/modal.component';\\nexport * from './lib/alert/alert.component';\\nexport * from './lib/accordion/accordion.component';\\n","/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n"],"names":["defaultConfig","i1.UseDirective"],"mappings":"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"}`;export{A as default};
