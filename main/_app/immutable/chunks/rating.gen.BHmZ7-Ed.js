const G=`export {};
//# sourceMappingURL=data:application/json;base64,`;export{G as default};
