const e=[{name:"ariaLabelHandle",description:"Return the value for the 'aria-label' attribute for the handle",fileName:"core/src/components/slider/slider.ts",start:{line:205,character:2,position:4252},end:{line:205,character:81,position:4331},type:"(value: number, sortedIndex: number, index: number) => string",defaultValue:"(value: number) => '' + value"},{name:"ariaValueText",description:"Return the value for the 'aria-valuetext' attribute for the handle",fileName:"core/src/components/slider/slider.ts",start:{line:218,character:2,position:4652},end:{line:218,character:79,position:4729},type:"(value: number, sortedIndex: number, index: number) => string",defaultValue:"(value: number) => '' + value"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:7,character:2,position:143},end:{line:7,character:20,position:161},type:"string",defaultValue:"''"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:103,character:2,position:2272},end:{line:103,character:20,position:2290},type:"boolean",defaultValue:"false"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:82,character:2,position:1907},end:{line:82,character:14,position:1919},type:"number",defaultValue:"100"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:75,character:2,position:1801},end:{line:75,character:14,position:1813},type:"number",defaultValue:"0"},{name:"onValuesChange",description:`An event emitted when slider values are changed

Event payload equals to the updated slider values`,fileName:"core/src/components/slider/slider.ts",start:{line:230,character:2,position:4905},end:{line:230,character:45,position:4948},type:"(values: number[]) => void",defaultValue:"() => {}"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:96,character:2,position:2133},end:{line:96,character:20,position:2151},type:"boolean",defaultValue:"false"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:138,character:2,position:2844},end:{line:138,character:15,position:2857},type:"boolean",defaultValue:"false"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:131,character:2,position:2734},end:{line:131,character:28,position:2760},type:"boolean",defaultValue:"true"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:124,character:2,position:2602},end:{line:124,character:27,position:2627},type:"boolean",defaultValue:"true"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:89,character:2,position:1994},end:{line:89,character:19,position:2011},type:"number",defaultValue:"1"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:117,character:2,position:2484},end:{line:117,character:19,position:2501},type:"number[]",defaultValue:"[0]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:110,character:2,position:2399},end:{line:110,character:20,position:2417},type:"boolean",defaultValue:"false"}],i=[{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:7,character:2,position:143},end:{line:7,character:20,position:161},type:"string"},{name:"combinedLabelDisplay",description:"If true, the label when the handles are close is visible",fileName:"core/src/components/slider/slider.ts",start:{line:170,character:2,position:3403},end:{line:170,character:32,position:3433},type:"boolean"},{name:"combinedLabelPositionLeft",description:"Combined label left offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:150,character:2,position:3034},end:{line:150,character:36,position:3068},type:"number"},{name:"combinedLabelPositionTop",description:"Combined label top offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:155,character:2,position:3116},end:{line:155,character:35,position:3149},type:"number"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:103,character:2,position:2272},end:{line:103,character:20,position:2290},type:"boolean"},{name:"handleDisplayOptions",description:"Array of objects representing handle display options",fileName:"core/src/components/slider/slider.ts",start:{line:185,character:2,position:3710},end:{line:185,character:47,position:3755},type:"HandleDisplayOptions[]"},{name:"interactive",description:"Check if the slider is interactive, meaning it is not disabled or readonly",fileName:"core/src/components/slider/slider.ts",start:{line:190,character:2,position:3847},end:{line:190,character:23,position:3868},type:"boolean"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:82,character:2,position:1907},end:{line:82,character:14,position:1919},type:"number"},{name:"maxValueLabelDisplay",description:"If true, the maximum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:165,character:2,position:3299},end:{line:165,character:32,position:3329},type:"boolean"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:75,character:2,position:1801},end:{line:75,character:14,position:1813},type:"number"},{name:"minValueLabelDisplay",description:"If true, the minimum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:160,character:2,position:3209},end:{line:160,character:32,position:3239},type:"boolean"},{name:"progressDisplayOptions",description:"Array of objects representing progress display options",fileName:"core/src/components/slider/slider.ts",start:{line:180,character:2,position:3591},end:{line:180,character:51,position:3640},type:"ProgressDisplayOptions[]"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:96,character:2,position:2133},end:{line:96,character:20,position:2151},type:"boolean"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:138,character:2,position:2844},end:{line:138,character:15,position:2857},type:"boolean"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:131,character:2,position:2734},end:{line:131,character:28,position:2760},type:"boolean"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:124,character:2,position:2602},end:{line:124,character:27,position:2627},type:"boolean"},{name:"sortedHandles",description:"Array of the sorted handles to display",fileName:"core/src/components/slider/slider.ts",start:{line:175,character:2,position:3489},end:{line:175,character:32,position:3519},type:"SliderHandle[]"},{name:"sortedValues",description:"Sorted slider values",fileName:"core/src/components/slider/slider.ts",start:{line:145,character:2,position:2962},end:{line:145,character:25,position:2985},type:"number[]"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:89,character:2,position:1994},end:{line:89,character:19,position:2011},type:"number"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:117,character:2,position:2484},end:{line:117,character:19,position:2501},type:"number[]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:110,character:2,position:2399},end:{line:110,character:20,position:2417},type:"boolean"}],t=[],r={props:e,state:i,api:t};export{r as w};
