const G=`import { getToastDefaultConfig, createToast } from '@agnos-ui/core-bootstrap/components/toast';
/**
 * Retrieve a shallow copy of the default Toast config
 * @returns the default Toast config
 */
const export_getToastDefaultConfig = getToastDefaultConfig;
export { export_getToastDefaultConfig as getToastDefaultConfig };
/**
 * Create an ToastWidget with given config props
 * @param config - an optional alert config
 * @returns an ToastWidget
 */
const export_createToast = createToast;
export { export_createToast as createToast };
//# sourceMappingURL=data:application/json;base64,`;export{G as default};
