const G=`import { getAlertDefaultConfig, createAlert } from '@agnos-ui/core-bootstrap/components/alert';
/**
 * Retrieve a shallow copy of the default Alert config
 * @returns the default Alert config
 */
const export_getAlertDefaultConfig = getAlertDefaultConfig;
export { export_getAlertDefaultConfig as getAlertDefaultConfig };
/**
 * Create an AlertWidget with given config props
 * @param config - an optional alert config
 * @returns an AlertWidget
 */
const export_createAlert = createAlert;
export { export_createAlert as createAlert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuZ2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvYWxlcnQvYWxlcnQuZ2VuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxxQkFBcUIsRUFBRSxXQUFXLEVBQUMsTUFBTSwyQ0FBMkMsQ0FBQztBQU03Rjs7O0dBR0c7QUFDSCxNQUFNLDRCQUE0QixHQUFxQixxQkFBNEIsQ0FBQztBQUNwRixPQUFPLEVBQUMsNEJBQTRCLElBQUkscUJBQXFCLEVBQUMsQ0FBQztBQW1ML0Q7Ozs7R0FJRztBQUNILE1BQU0sa0JBQWtCLEdBQStCLFdBQWtCLENBQUM7QUFDMUUsT0FBTyxFQUFDLGtCQUFrQixJQUFJLFdBQVcsRUFBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZXRBbGVydERlZmF1bHRDb25maWcsIGNyZWF0ZUFsZXJ0fSBmcm9tICdAYWdub3MtdWkvY29yZS1ib290c3RyYXAvY29tcG9uZW50cy9hbGVydCc7XG5pbXBvcnQgdHlwZSB7V2lkZ2V0U2xvdENvbnRleHQsIFNsb3RDb250ZW50LCBUcmFuc2l0aW9uRm4sIFdpZGdldCwgV2lkZ2V0RmFjdG9yeSwgRGlyZWN0aXZlfSBmcm9tICdAYWdub3MtdWkvYW5ndWxhci1oZWFkbGVzcyc7XG5pbXBvcnQgdHlwZSB7QlNDb250ZXh0dWFsQ2xhc3N9IGZyb20gJ0BhZ25vcy11aS9jb3JlLWJvb3RzdHJhcC90eXBlcyc7XG5cblxuXG4vKipcbiAqIFJldHJpZXZlIGEgc2hhbGxvdyBjb3B5IG9mIHRoZSBkZWZhdWx0IEFsZXJ0IGNvbmZpZ1xuICogQHJldHVybnMgdGhlIGRlZmF1bHQgQWxlcnQgY29uZmlnXG4gKi9cbmNvbnN0IGV4cG9ydF9nZXRBbGVydERlZmF1bHRDb25maWc6ICgpID0+IEFsZXJ0UHJvcHMgPSBnZXRBbGVydERlZmF1bHRDb25maWcgYXMgYW55O1xuZXhwb3J0IHtleHBvcnRfZ2V0QWxlcnREZWZhdWx0Q29uZmlnIGFzIGdldEFsZXJ0RGVmYXVsdENvbmZpZ307XG5cblxuXG5leHBvcnQgaW50ZXJmYWNlIEFsZXJ0Q29udGV4dCBleHRlbmRzIFdpZGdldFNsb3RDb250ZXh0PEFsZXJ0V2lkZ2V0PiB7fVxuXG5leHBvcnQgaW50ZXJmYWNlIEFsZXJ0U3RhdGUge1xuXHRcblx0LyoqXG5cdCAqIElzIGB0cnVlYCB3aGVuIHRoZSBhbGVydCBpcyBoaWRkZW4uIENvbXBhcmVkIHRvIGB2aXNpYmxlYCwgdGhpcyBpcyB1cGRhdGVkIGFmdGVyIHRoZSB0cmFuc2l0aW9uIGlzIGV4ZWN1dGVkLlxuXHQgKi9cblx0aGlkZGVuOiBib29sZWFuO1xuXHRcblx0LyoqXG5cdCAqIElmIGB0cnVlYCwgYWxlcnQgY2FuIGJlIGRpc21pc3NlZCBieSB0aGUgdXNlci5cblx0ICogVGhlIGNsb3NlIGJ1dHRvbiAow5cpIHdpbGwgYmUgZGlzcGxheWVkIGFuZCB5b3UgY2FuIGJlIG5vdGlmaWVkIG9mIHRoZSBldmVudCB3aXRoIHRoZSAoY2xvc2UpIG91dHB1dC5cblx0ICpcblx0ICogQGRlZmF1bHRWYWx1ZSBgdHJ1ZWBcblx0ICovXG5cdGRpc21pc3NpYmxlOiBib29sZWFuO1xuXHRcblx0LyoqXG5cdCAqIElmIGB0cnVlYCB0aGUgYWxlcnQgaXMgdmlzaWJsZSB0byB0aGUgdXNlclxuXHQgKlxuXHQgKiBAZGVmYXVsdFZhbHVlIGB0cnVlYFxuXHQgKi9cblx0dmlzaWJsZTogYm9vbGVhbjtcblx0XG5cblx0LyoqXG5cdCAqIEFjY2Vzc2liaWxpdHkgY2xvc2UgYnV0dG9uIGxhYmVsXG5cdCAqXG5cdCAqIEBkZWZhdWx0VmFsdWUgYCdDbG9zZSdgXG5cdCAqL1xuXHRhcmlhQ2xvc2VCdXR0b25MYWJlbDogc3RyaW5nO1xuXHRcblx0LyoqXG5cdCAqIENTUyBjbGFzc2VzIHRvIGJlIGFwcGxpZWQgb24gdGhlIHdpZGdldCBtYWluIGNvbnRhaW5lclxuXHQgKlxuXHQgKiBAZGVmYXVsdFZhbHVlIGAnJ2Bcblx0ICovXG5cdGNsYXNzTmFtZTogc3RyaW5nO1xuXHRcblx0LyoqXG5cdCAqIEdsb2JhbCB0ZW1wbGF0ZSBmb3IgdGhlIGFsZXJ0IGNvbXBvbmVudFxuXHQgKi9cblx0c3RydWN0dXJlOiBTbG90Q29udGVudDxBbGVydENvbnRleHQ+O1xuXHRcblx0LyoqXG5cdCAqIFRlbXBsYXRlIGZvciB0aGUgYWxlcnQgY29udGVudFxuXHQgKi9cblx0Y2hpbGRyZW46IFNsb3RDb250ZW50PEFsZXJ0Q29udGV4dD47XG5cdFxuXHQvKipcblx0ICogVHlwZSBvZiB0aGUgYWxlcnQsIGZvbGxvd2luZyBib290c3RyYXAgdHlwZXMuXG5cdCAqXG5cdCAqIEBkZWZhdWx0VmFsdWUgYCdwcmltYXJ5J2Bcblx0ICovXG5cdHR5cGU6IEJTQ29udGV4dHVhbENsYXNzO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFsZXJ0UHJvcHMge1xuXHRcblx0LyoqXG5cdCAqIFRoZSB0cmFuc2l0aW9uIGZ1bmN0aW9uIHdpbGwgYmUgZXhlY3V0ZWQgd2hlbiB0aGUgYWxlcnQgaXMgZGlzcGxheWVkIG9yIGhpZGRlbi5cblx0ICpcblx0ICogRGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBgYW5pbWF0ZWRPbkluaXRgLCB0aGUgYW5pbWF0aW9uIGNhbiBiZSBvcHRpb25hbGx5IHNraXBwZWQgZHVyaW5nIHRoZSBzaG93aW5nIHByb2Nlc3MuXG5cdCAqXG5cdCAqIEBkZWZhdWx0VmFsdWUgYGZhZGVUcmFuc2l0aW9uYFxuXHQgKi9cblx0dHJhbnNpdGlvbjogVHJhbnNpdGlvbkZuO1xuXHRcblx0LyoqXG5cdCAqIENhbGxiYWNrIGNhbGxlZCB3aGVuIHRoZSBhbGVydCB2aXNpYmlsaXR5IGNoYW5nZWQuXG5cdCAqXG5cdCAqIEBkZWZhdWx0VmFsdWVcblx0ICogYGBgdHNcblx0ICogKCkgPT4ge31cblx0ICogYGBgXG5cdCAqL1xuXHRvblZpc2libGVDaGFuZ2U6ICh2aXNpYmxlOiBib29sZWFuKSA9PiB2b2lkO1xuXHRcblxuXHQvKipcblx0ICogQ2FsbGJhY2sgY2FsbGVkIHdoZW4gdGhlIGFsZXJ0IGlzIGhpZGRlbi5cblx0ICpcblx0ICogQGRlZmF1bHRWYWx1ZVxuXHQgKiBgYGB0c1xuXHQgKiAoKSA9PiB7fVxuXHQgKiBgYGBcblx0ICovXG5cdG9uSGlkZGVuOiAoKSA9PiB2b2lkO1xuXHRcblxuXHQvKipcblx0ICogQ2FsbGJhY2sgY2FsbGVkIHdoZW4gdGhlIGFsZXJ0IGlzIHNob3duLlxuXHQgKlxuXHQgKiBAZGVmYXVsdFZhbHVlXG5cdCAqIGBgYHRzXG5cdCAqICgpID0+IHt9XG5cdCAqIGBgYFxuXHQgKi9cblx0b25TaG93bjogKCkgPT4gdm9pZDtcblx0XG5cblx0LyoqXG5cdCAqIElmIGB0cnVlYCwgYWxlcnQgb3BlbmluZyB3aWxsIGJlIGFuaW1hdGVkLlxuXHQgKlxuXHQgKiBBbmltYXRpb24gaXMgdHJpZ2dlcmVkICB3aGVuIHRoZSBgLm9wZW4oKWAgZnVuY3Rpb24gaXMgY2FsbGVkXG5cdCAqIG9yIHRoZSB2aXNpYmxlIHByb3AgaXMgY2hhbmdlZFxuXHQgKlxuXHQgKiBAZGVmYXVsdFZhbHVlIGBmYWxzZWBcblx0ICovXG5cdGFuaW1hdGVkT25Jbml0OiBib29sZWFuO1xuXHRcblx0LyoqXG5cdCAqIElmIGB0cnVlYCwgYWxlcnQgY2xvc2luZyB3aWxsIGJlIGFuaW1hdGVkLlxuXHQgKlxuXHQgKiBBbmltYXRpb24gaXMgdHJpZ2dlcmVkICB3aGVuIGNsaWNrZWQgb24gdGhlIGNsb3NlIGJ1dHRvbiAow5cpLFxuXHQgKiB2aWEgdGhlIGAuY2xvc2UoKWAgZnVuY3Rpb24gb3IgdGhlIHZpc2libGUgcHJvcCBpcyBjaGFuZ2VkXG5cdCAqXG5cdCAqIEBkZWZhdWx0VmFsdWUgYHRydWVgXG5cdCAqL1xuXHRhbmltYXRlZDogYm9vbGVhbjtcblx0XG5cdC8qKlxuXHQgKiBJZiBgdHJ1ZWAsIGFsZXJ0IGNhbiBiZSBkaXNtaXNzZWQgYnkgdGhlIHVzZXIuXG5cdCAqIFRoZSBjbG9zZSBidXR0b24gKMOXKSB3aWxsIGJlIGRpc3BsYXllZCBhbmQgeW91IGNhbiBiZSBub3RpZmllZCBvZiB0aGUgZXZlbnQgd2l0aCB0aGUgKGNsb3NlKSBvdXRwdXQuXG5cdCAqXG5cdCAqIEBkZWZhdWx0VmFsdWUgYHRydWVgXG5cdCAqL1xuXHRkaXNtaXNzaWJsZTogYm9vbGVhbjtcblx0XG5cdC8qKlxuXHQgKiBJZiBgdHJ1ZWAgdGhlIGFsZXJ0IGlzIHZpc2libGUgdG8gdGhlIHVzZXJcblx0ICpcblx0ICogQGRlZmF1bHRWYWx1ZSBgdHJ1ZWBcblx0ICovXG5cdHZpc2libGU6IGJvb2xlYW47XG5cdFxuXG5cdC8qKlxuXHQgKiBBY2Nlc3NpYmlsaXR5IGNsb3NlIGJ1dHRvbiBsYWJlbFxuXHQgKlxuXHQgKiBAZGVmYXVsdFZhbHVlIGAnQ2xvc2UnYFxuXHQgKi9cblx0YXJpYUNsb3NlQnV0dG9uTGFiZWw6IHN0cmluZztcblx0XG5cdC8qKlxuXHQgKiBDU1MgY2xhc3NlcyB0byBiZSBhcHBsaWVkIG9uIHRoZSB3aWRnZXQgbWFpbiBjb250YWluZXJcblx0ICpcblx0ICogQGRlZmF1bHRWYWx1ZSBgJydgXG5cdCAqL1xuXHRjbGFzc05hbWU6IHN0cmluZztcblx0XG5cdC8qKlxuXHQgKiBHbG9iYWwgdGVtcGxhdGUgZm9yIHRoZSBhbGVydCBjb21wb25lbnRcblx0ICovXG5cdHN0cnVjdHVyZTogU2xvdENvbnRlbnQ8QWxlcnRDb250ZXh0Pjtcblx0XG5cdC8qKlxuXHQgKiBUZW1wbGF0ZSBmb3IgdGhlIGFsZXJ0IGNvbnRlbnRcblx0ICovXG5cdGNoaWxkcmVuOiBTbG90Q29udGVudDxBbGVydENvbnRleHQ+O1xuXHRcblx0LyoqXG5cdCAqIFR5cGUgb2YgdGhlIGFsZXJ0LCBmb2xsb3dpbmcgYm9vdHN0cmFwIHR5cGVzLlxuXHQgKlxuXHQgKiBAZGVmYXVsdFZhbHVlIGAncHJpbWFyeSdgXG5cdCAqL1xuXHR0eXBlOiBCU0NvbnRleHR1YWxDbGFzcztcbn1cblxuXG5cbmV4cG9ydCB0eXBlIEFsZXJ0V2lkZ2V0ID0gV2lkZ2V0PEFsZXJ0UHJvcHMsIEFsZXJ0U3RhdGUsIEFsZXJ0QXBpLCBBbGVydERpcmVjdGl2ZXM+O1xuXG5cblxuLyoqXG4gKiBDcmVhdGUgYW4gQWxlcnRXaWRnZXQgd2l0aCBnaXZlbiBjb25maWcgcHJvcHNcbiAqIEBwYXJhbSBjb25maWcgLSBhbiBvcHRpb25hbCBhbGVydCBjb25maWdcbiAqIEByZXR1cm5zIGFuIEFsZXJ0V2lkZ2V0XG4gKi9cbmNvbnN0IGV4cG9ydF9jcmVhdGVBbGVydDogV2lkZ2V0RmFjdG9yeTxBbGVydFdpZGdldD4gPSBjcmVhdGVBbGVydCBhcyBhbnk7XG5leHBvcnQge2V4cG9ydF9jcmVhdGVBbGVydCBhcyBjcmVhdGVBbGVydH07XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWxlcnRBcGkge1xuXHRcblx0LyoqXG5cdCAqIFRyaWdnZXJzIGFsZXJ0IGNsb3NpbmcgcHJvZ3JhbW1hdGljYWxseSAoc2FtZSBhcyBjbGlja2luZyBvbiB0aGUgY2xvc2UgYnV0dG9uICjDlykpLlxuXHQgKi9cblx0Y2xvc2UoKTogdm9pZDtcblx0XG5cblx0LyoqXG5cdCAqIFRyaWdnZXJzIHRoZSBhbGVydCB0byBiZSBkaXNwbGF5ZWQgZm9yIHRoZSB1c2VyLlxuXHQgKi9cblx0b3BlbigpOiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFsZXJ0RGlyZWN0aXZlcyB7XG5cdFxuXHQvKipcblx0ICogdGhlIHRyYW5zaXRpb24gZGlyZWN0aXZlLCBwaWxvdGluZyB3aGF0IGlzIHRoZSB2aXN1YWwgZWZmZWN0IG9mIGdvaW5nIGZyb20gaGlkZGVuIHRvIHZpc2libGVcblx0ICovXG5cdHRyYW5zaXRpb25EaXJlY3RpdmU6IERpcmVjdGl2ZTtcbn1cblxuIl19`;export{G as default};
