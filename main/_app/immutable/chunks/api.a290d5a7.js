import{n as t}from"./stores.d6d0dfef.js";const i=e=>""+e,n={id:void 0,ariaLabel:"Select",open:!1,disabled:!1,items:[],filterText:"",loading:!1,selected:[],itemIdFn:i,onOpenChange:t,onFilterTextChange:t,onSelectedChange:t,className:"",menuClassName:"",menuItemClassName:"",badgeClassName:"",slotBadgeLabel:({itemContext:e})=>e.item,slotItem:({itemContext:e})=>e.item};function r(){return{...n}}const s=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:30,character:2,position:993},end:{line:30,character:32,position:1023},type:"string | undefined",defaultValue:"'Select'"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:65,character:2,position:1537},end:{line:65,character:25,position:1560},type:"string",defaultValue:"''"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:45,character:2,position:1215},end:{line:45,character:20,position:1233},type:"boolean",defaultValue:"false"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:40,character:2,position:1148},end:{line:40,character:21,position:1167},type:"string",defaultValue:"''"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:25,character:2,position:905},end:{line:25,character:25,position:928},type:"string | undefined",defaultValue:"undefined"},{name:"itemIdFn",description:`Custom function to get the id of an item
By default, the item is returned`,fileName:"core/src/components/select/select.ts",start:{line:95,character:2,position:2295},end:{line:95,character:28,position:2321},type:"(item: T) => string",defaultValue:"defaultItemId"},{name:"items",description:"List of available items for the dropdown",fileName:"core/src/components/select/select.ts",start:{line:89,character:2,position:2189},end:{line:89,character:13,position:2200},type:"T[]",defaultValue:"[]"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:70,character:2,position:1617},end:{line:70,character:19,position:1634},type:"boolean",defaultValue:"false"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:55,character:2,position:1357},end:{line:55,character:24,position:1379},type:"string",defaultValue:"''"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:60,character:2,position:1428},end:{line:60,character:28,position:1454},type:"string",defaultValue:"''"},{name:"onFilterTextChange",description:"Callback called when the text filter change",fileName:"core/src/components/select/select.ts",start:{line:109,character:2,position:2570},end:{line:109,character:41,position:2609},type:"(text: string) => void",defaultValue:"noop"},{name:"onOpenChange",description:"Callback called dropdown open state change",fileName:"core/src/components/select/select.ts",start:{line:103,character:2,position:2441},end:{line:103,character:38,position:2477},type:"(isOpen: boolean) => void",defaultValue:"noop"},{name:"onSelectedChange",description:"Callback called when the selection change",fileName:"core/src/components/select/select.ts",start:{line:114,character:2,position:2668},end:{line:114,character:40,position:2706},type:"(selected: T[]) => void",defaultValue:"noop"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:50,character:2,position:1277},end:{line:50,character:16,position:1291},type:"boolean",defaultValue:"false"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:35,character:2,position:1066},end:{line:35,character:19,position:1083},type:"Item[]",defaultValue:"[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:76,character:2,position:1803},end:{line:76,character:55,position:1856},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:82,character:2,position:2011},end:{line:82,character:49,position:2058},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"}],o=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:30,character:2,position:993},end:{line:30,character:32,position:1023},type:"string | undefined"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:65,character:2,position:1537},end:{line:65,character:25,position:1560},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:45,character:2,position:1215},end:{line:45,character:20,position:1233},type:"boolean"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:40,character:2,position:1148},end:{line:40,character:21,position:1167},type:"string"},{name:"highlighted",description:`Highlighted item context.
It is designed to define the highlighted item in the dropdown menu`,fileName:"core/src/components/select/select.ts",start:{line:153,character:2,position:3397},end:{line:153,character:45,position:3440},type:"ItemContext<Item> | undefined"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:25,character:2,position:905},end:{line:25,character:25,position:928},type:"string | undefined"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:70,character:2,position:1617},end:{line:70,character:19,position:1634},type:"boolean"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:55,character:2,position:1357},end:{line:55,character:24,position:1379},type:"string"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:60,character:2,position:1428},end:{line:60,character:28,position:1454},type:"string"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:50,character:2,position:1277},end:{line:50,character:16,position:1291},type:"boolean"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:35,character:2,position:1066},end:{line:35,character:19,position:1083},type:"Item[]"},{name:"selectedContexts",description:`/**
  List of selected items to be display`,fileName:"core/src/components/select/select.ts",start:{line:147,character:2,position:3245},end:{line:147,character:40,position:3283},type:"ItemContext<Item>[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:76,character:2,position:1803},end:{line:76,character:55,position:1856},type:"SlotContent<SelectItemContext<Item>>"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:82,character:2,position:2011},end:{line:82,character:49,position:2058},type:"SlotContent<SelectItemContext<Item>>"},{name:"visibleItems",description:"List of item contexts, to be displayed in the menu",fileName:"core/src/components/select/select.ts",start:{line:141,character:2,position:3152},end:{line:141,character:36,position:3186},type:"ItemContext<Item>[]"}],c=[{name:"clear",description:"Clear all the selected items",fileName:"core/src/components/select/select.ts",start:{line:160,character:2,position:3523},end:{line:160,character:16,position:3537},type:"() => void"},{name:"clearText",description:"Clear the filter text",fileName:"core/src/components/select/select.ts",start:{line:165,character:2,position:3576},end:{line:165,character:20,position:3594},type:"() => void"},{name:"close",description:"close the select",fileName:"core/src/components/select/select.ts",start:{line:241,character:2,position:5335},end:{line:241,character:16,position:5349},type:"() => void"},{name:"focus",description:`Focus the provided item among the selected list.
The focus feature is designed to know what item must be focused in the UI, i.e. among the badge elements.`,fileName:"core/src/components/select/select.ts",start:{line:198,character:2,position:4326},end:{line:198,character:26,position:4350},type:"(item: Item) => void"},{name:"focusFirst",description:"Focus the first element",fileName:"core/src/components/select/select.ts",start:{line:202,character:2,position:4390},end:{line:202,character:21,position:4409},type:"() => void"},{name:"focusLast",description:"Focus the last element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:214,character:2,position:4753},end:{line:214,character:20,position:4771},type:"() => void"},{name:"focusNext",description:"Focus the next element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:210,character:2,position:4635},end:{line:210,character:20,position:4653},type:"() => void"},{name:"focusPrevious",description:"Focus the previous element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:206,character:2,position:4513},end:{line:206,character:24,position:4535},type:"() => void"},{name:"highlight",description:"Highlight the given item, if there is a corresponding match among the visible list",fileName:"core/src/components/select/select.ts",start:{line:170,character:2,position:3694},end:{line:170,character:30,position:3722},type:"(item: Item) => void"},{name:"highlightFirst",description:"Highlight the first item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:175,character:2,position:3787},end:{line:175,character:25,position:3810},type:"() => void"},{name:"highlightLast",description:"Highlight the last item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:192,character:2,position:4128},end:{line:192,character:24,position:4150},type:"() => void"},{name:"highlightNext",description:`Highlight the next item among the visible list.
Loop to the first item if needed`,fileName:"core/src/components/select/select.ts",start:{line:187,character:2,position:4042},end:{line:187,character:24,position:4064},type:"() => void"},{name:"highlightPrevious",description:`Highlight the previous item among the visible list
Loop to the last item if needed`,fileName:"core/src/components/select/select.ts",start:{line:181,character:2,position:3914},end:{line:181,character:28,position:3940},type:"() => void"},{name:"open",description:"open the select",fileName:"core/src/components/select/select.ts",start:{line:237,character:2,position:5289},end:{line:237,character:15,position:5302},type:"() => void"},{name:"select",description:`Select the provided item.
The selected list is used to`,fileName:"core/src/components/select/select.ts",start:{line:221,character:2,position:4884},end:{line:221,character:27,position:4909},type:"(item: Item) => void"},{name:"toggle",description:"Toggle the dropdown menu",fileName:"core/src/components/select/select.ts",start:{line:246,character:2,position:5459},end:{line:246,character:33,position:5490},type:"(isOpen?: boolean) => void"},{name:"toggleItem",description:"Toggle the selection of an item",fileName:"core/src/components/select/select.ts",start:{line:232,character:2,position:5207},end:{line:232,character:51,position:5256},type:"(item: Item, selected?: boolean) => void"},{name:"unselect",description:"Unselect the provided item.",fileName:"core/src/components/select/select.ts",start:{line:226,character:2,position:4992},end:{line:226,character:29,position:5019},type:"(item: Item) => void"}],l={props:s,state:o,api:c};export{l as d,r as g};
