const e=[{name:"ariaLabel",description:"The aria label",fileName:"core/lib/components/rating/rating.ts",start:{line:63,character:2,position:1575},end:{line:63,character:20,position:1593},type:"string",defaultValue:"'Rating'"},{name:"ariaLabelledBy",description:"The aria labelled by",fileName:"core/lib/components/rating/rating.ts",start:{line:68,character:2,position:1631},end:{line:68,character:25,position:1654},type:"string",defaultValue:"''"},{name:"ariaValueTextFn",description:"Return the value for the 'aria-valuetext' attribute.",fileName:"core/lib/components/rating/rating.ts",start:{line:77,character:2,position:1873},end:{line:77,character:65,position:1936},type:"(rating: number, maxRating: number) => string",defaultValue:"(rating: number, maxRating: number) => `${rating} out of ${maxRating}`"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/lib/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"If `true`, the rating is disabled.",fileName:"core/lib/components/rating/rating.ts",start:{line:35,character:2,position:1020},end:{line:35,character:20,position:1038},type:"boolean",defaultValue:"false"},{name:"maxRating",description:"The maximum rating that can be given.",fileName:"core/lib/components/rating/rating.ts",start:{line:30,character:2,position:950},end:{line:30,character:20,position:968},type:"number",defaultValue:"10"},{name:"onHover",description:`An event emitted when the user is hovering over a given rating.

Event payload is equal to the rating being hovered over.`,fileName:"core/lib/components/rating/rating.ts",start:{line:91,character:2,position:2246},end:{line:91,character:36,position:2280},type:"(rating: number) => void",defaultValue:"noop"},{name:"onLeave",description:`An event emitted when the user stops hovering over a given rating.

Event payload is equal to the rating of the last item being hovered over.`,fileName:"core/lib/components/rating/rating.ts",start:{line:98,character:2,position:2446},end:{line:98,character:36,position:2480},type:"(rating: number) => void",defaultValue:"noop"},{name:"onRatingChange",description:`An event emitted when the rating is changed.

Event payload is equal to the newly selected rating.`,fileName:"core/lib/components/rating/rating.ts",start:{line:84,character:2,position:2059},end:{line:84,character:43,position:2100},type:"(rating: number) => void",defaultValue:"noop"},{name:"rating",description:"The current rating. Could be a decimal value like `3.75`.",fileName:"core/lib/components/rating/rating.ts",start:{line:25,character:2,position:880},end:{line:25,character:17,position:895},type:"number",defaultValue:"0"},{name:"readonly",description:"If `true`, the rating can't be changed.",fileName:"core/lib/components/rating/rating.ts",start:{line:40,character:2,position:1095},end:{line:40,character:20,position:1113},type:"boolean",defaultValue:"false"},{name:"resettable",description:`Define if the rating can be reset.

If set to true, the user can 'unset' the rating value by cliking on the current rating value.`,fileName:"core/lib/components/rating/rating.ts",start:{line:47,character:2,position:1267},end:{line:47,character:22,position:1287},type:"boolean",defaultValue:"true"},{name:"slotStar",description:"The template to override the way each star is displayed.",fileName:"core/lib/components/rating/rating.ts",start:{line:58,character:2,position:1508},end:{line:58,character:37,position:1543},type:"SlotContent<StarContext>",defaultValue:"({fill}) => String.fromCharCode(fill === 100 ? 9733 : 9734)"},{name:"tabindex",description:"Allows setting a custom rating tabindex.\nIf the component is disabled, `tabindex` will still be set to `-1`.",fileName:"core/lib/components/rating/rating.ts",start:{line:53,character:2,position:1417},end:{line:53,character:19,position:1434},type:"number",defaultValue:"0"}],t=[{name:"ariaLabel",description:"The aria label",fileName:"core/lib/components/rating/rating.ts",start:{line:63,character:2,position:1575},end:{line:63,character:20,position:1593},type:"string"},{name:"ariaLabelledBy",description:"The aria labelled by",fileName:"core/lib/components/rating/rating.ts",start:{line:68,character:2,position:1631},end:{line:68,character:25,position:1654},type:"string"},{name:"ariaValueText",description:"the aria value of the rating",fileName:"core/lib/components/rating/rating.ts",start:{line:105,character:2,position:2593},end:{line:105,character:24,position:2615},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/lib/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"If `true`, the rating is disabled.",fileName:"core/lib/components/rating/rating.ts",start:{line:35,character:2,position:1020},end:{line:35,character:20,position:1038},type:"boolean"},{name:"isInteractive",description:"is the rating interactive i.e. listening to hover, click and keyboard events",fileName:"core/lib/components/rating/rating.ts",start:{line:113,character:2,position:2863},end:{line:113,character:25,position:2886},type:"boolean"},{name:"maxRating",description:"The maximum rating that can be given.",fileName:"core/lib/components/rating/rating.ts",start:{line:30,character:2,position:950},end:{line:30,character:20,position:968},type:"number"},{name:"rating",description:"The current rating. Could be a decimal value like `3.75`.",fileName:"core/lib/components/rating/rating.ts",start:{line:25,character:2,position:880},end:{line:25,character:17,position:895},type:"number"},{name:"readonly",description:"If `true`, the rating can't be changed.",fileName:"core/lib/components/rating/rating.ts",start:{line:40,character:2,position:1095},end:{line:40,character:20,position:1113},type:"boolean"},{name:"resettable",description:`Define if the rating can be reset.

If set to true, the user can 'unset' the rating value by cliking on the current rating value.`,fileName:"core/lib/components/rating/rating.ts",start:{line:47,character:2,position:1267},end:{line:47,character:22,position:1287},type:"boolean"},{name:"slotStar",description:"The template to override the way each star is displayed.",fileName:"core/lib/components/rating/rating.ts",start:{line:58,character:2,position:1508},end:{line:58,character:37,position:1543},type:"SlotContent<StarContext>"},{name:"stars",description:"the list of stars",fileName:"core/lib/components/rating/rating.ts",start:{line:117,character:2,position:2920},end:{line:117,character:23,position:2941},type:"StarContext[]"},{name:"tabindex",description:"Allows setting a custom rating tabindex.\nIf the component is disabled, `tabindex` will still be set to `-1`.",fileName:"core/lib/components/rating/rating.ts",start:{line:53,character:2,position:1417},end:{line:53,character:19,position:1434},type:"number"},{name:"visibleRating",description:"the visible value of the rating (it changes when hovering over the rating even though the real value did not change)",fileName:"core/lib/components/rating/rating.ts",start:{line:109,character:2,position:2748},end:{line:109,character:24,position:2770},type:"number"}],n=[],i={props:e,state:t,api:n};export{i as d};
