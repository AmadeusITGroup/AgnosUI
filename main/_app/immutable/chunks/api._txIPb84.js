import{n as t}from"./stores.hThL6gDU.js";const i=e=>""+e,n={id:void 0,ariaLabel:"Select",open:!1,disabled:!1,items:[],filterText:"",loading:!1,selected:[],navSelector:e=>e.querySelectorAll(".au-select-badge,input"),itemIdFn:i,onOpenChange:t,onFilterTextChange:t,onSelectedChange:t,allowedPlacements:["bottom-start","top-start","bottom-end","top-end"],className:"",menuClassName:"",menuItemClassName:"",badgeClassName:"",slotBadgeLabel:({itemContext:e})=>e.item,slotItem:({itemContext:e})=>e.item};function l(){return{...n}}const s=[{name:"allowedPlacements",description:`List of allowed placements for the dropdown.
This refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).`,fileName:"core/src/components/select/select.ts",start:{line:102,character:2,position:2932},end:{line:102,character:33,position:2963},type:"Placement[]",defaultValue:"['bottom-start', 'top-start', 'bottom-end', 'top-end']"},{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:37,character:2,position:1437},end:{line:37,character:32,position:1467},type:"string | undefined",defaultValue:"'Select'"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:72,character:2,position:1981},end:{line:72,character:25,position:2004},type:"string",defaultValue:"''"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:52,character:2,position:1659},end:{line:52,character:20,position:1677},type:"boolean",defaultValue:"false"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:47,character:2,position:1592},end:{line:47,character:21,position:1611},type:"string",defaultValue:"''"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:32,character:2,position:1349},end:{line:32,character:25,position:1372},type:"string | undefined",defaultValue:"undefined"},{name:"itemIdFn",description:`Custom function to get the id of an item
By default, the item is returned`,fileName:"core/src/components/select/select.ts",start:{line:108,character:2,position:3058},end:{line:108,character:28,position:3084},type:"(item: T) => string",defaultValue:"defaultItemId"},{name:"items",description:"List of available items for the dropdown",fileName:"core/src/components/select/select.ts",start:{line:96,character:2,position:2633},end:{line:96,character:13,position:2644},type:"T[]",defaultValue:"[]"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:77,character:2,position:2061},end:{line:77,character:19,position:2078},type:"boolean",defaultValue:"false"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:62,character:2,position:1801},end:{line:62,character:24,position:1823},type:"string",defaultValue:"''"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:67,character:2,position:1872},end:{line:67,character:28,position:1898},type:"string",defaultValue:"''"},{name:"navSelector",description:"Retrieves navigable elements within an HTML element containing badges and the input.",fileName:"core/src/components/select/select.ts",start:{line:115,character:2,position:3259},end:{line:115,character:81,position:3338},type:"(node: HTMLElement) => NodeListOf<HTMLSpanElement | HTMLInputElement>",defaultValue:"(node: HTMLElement) => node.querySelectorAll('.au-select-badge,input')"},{name:"onFilterTextChange",description:"Callback called when the text filter change",fileName:"core/src/components/select/select.ts",start:{line:129,character:2,position:3587},end:{line:129,character:41,position:3626},type:"(text: string) => void",defaultValue:"noop"},{name:"onOpenChange",description:"Callback called dropdown open state change",fileName:"core/src/components/select/select.ts",start:{line:123,character:2,position:3458},end:{line:123,character:38,position:3494},type:"(isOpen: boolean) => void",defaultValue:"noop"},{name:"onSelectedChange",description:"Callback called when the selection change",fileName:"core/src/components/select/select.ts",start:{line:134,character:2,position:3685},end:{line:134,character:40,position:3723},type:"(selected: T[]) => void",defaultValue:"noop"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:57,character:2,position:1721},end:{line:57,character:16,position:1735},type:"boolean",defaultValue:"false"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:42,character:2,position:1510},end:{line:42,character:19,position:1527},type:"Item[]",defaultValue:"[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:83,character:2,position:2247},end:{line:83,character:55,position:2300},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:89,character:2,position:2455},end:{line:89,character:49,position:2502},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"}],o=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:37,character:2,position:1437},end:{line:37,character:32,position:1467},type:"string | undefined"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:72,character:2,position:1981},end:{line:72,character:25,position:2004},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:52,character:2,position:1659},end:{line:52,character:20,position:1677},type:"boolean"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:47,character:2,position:1592},end:{line:47,character:21,position:1611},type:"string"},{name:"highlighted",description:`Highlighted item context.
It is designed to define the highlighted item in the dropdown menu`,fileName:"core/src/components/select/select.ts",start:{line:173,character:2,position:4414},end:{line:173,character:45,position:4457},type:"ItemContext<Item> | undefined"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:32,character:2,position:1349},end:{line:32,character:25,position:1372},type:"string | undefined"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:77,character:2,position:2061},end:{line:77,character:19,position:2078},type:"boolean"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:62,character:2,position:1801},end:{line:62,character:24,position:1823},type:"string"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:67,character:2,position:1872},end:{line:67,character:28,position:1898},type:"string"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:57,character:2,position:1721},end:{line:57,character:16,position:1735},type:"boolean"},{name:"placement",description:"Current placement of the dropdown",fileName:"core/src/components/select/select.ts",start:{line:178,character:2,position:4508},end:{line:178,character:35,position:4541},type:"Placement | undefined"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:42,character:2,position:1510},end:{line:42,character:19,position:1527},type:"Item[]"},{name:"selectedContexts",description:`/**
  List of selected items to be display`,fileName:"core/src/components/select/select.ts",start:{line:167,character:2,position:4262},end:{line:167,character:40,position:4300},type:"ItemContext<Item>[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:83,character:2,position:2247},end:{line:83,character:55,position:2300},type:"SlotContent<SelectItemContext<Item>>"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:89,character:2,position:2455},end:{line:89,character:49,position:2502},type:"SlotContent<SelectItemContext<Item>>"},{name:"visibleItems",description:"List of item contexts, to be displayed in the menu",fileName:"core/src/components/select/select.ts",start:{line:161,character:2,position:4169},end:{line:161,character:36,position:4203},type:"ItemContext<Item>[]"}],a=[{name:"clear",description:"Clear all the selected items",fileName:"core/src/components/select/select.ts",start:{line:185,character:2,position:4624},end:{line:185,character:16,position:4638},type:"() => void"},{name:"clearText",description:"Clear the filter text",fileName:"core/src/components/select/select.ts",start:{line:190,character:2,position:4677},end:{line:190,character:20,position:4695},type:"() => void"},{name:"close",description:"close the select",fileName:"core/src/components/select/select.ts",start:{line:244,character:2,position:5815},end:{line:244,character:16,position:5829},type:"() => void"},{name:"highlight",description:"Highlight the given item, if there is a corresponding match among the visible list",fileName:"core/src/components/select/select.ts",start:{line:195,character:2,position:4795},end:{line:195,character:30,position:4823},type:"(item: Item) => void"},{name:"highlightFirst",description:"Highlight the first item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:200,character:2,position:4888},end:{line:200,character:25,position:4911},type:"() => void"},{name:"highlightLast",description:"Highlight the last item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:217,character:2,position:5229},end:{line:217,character:24,position:5251},type:"() => void"},{name:"highlightNext",description:`Highlight the next item among the visible list.
Loop to the first item if needed`,fileName:"core/src/components/select/select.ts",start:{line:212,character:2,position:5143},end:{line:212,character:24,position:5165},type:"() => void"},{name:"highlightPrevious",description:`Highlight the previous item among the visible list
Loop to the last item if needed`,fileName:"core/src/components/select/select.ts",start:{line:206,character:2,position:5015},end:{line:206,character:28,position:5041},type:"() => void"},{name:"open",description:"open the select",fileName:"core/src/components/select/select.ts",start:{line:240,character:2,position:5769},end:{line:240,character:15,position:5782},type:"() => void"},{name:"select",description:`Select the provided item.
The selected list is used to`,fileName:"core/src/components/select/select.ts",start:{line:224,character:2,position:5364},end:{line:224,character:27,position:5389},type:"(item: Item) => void"},{name:"toggle",description:"Toggle the dropdown menu",fileName:"core/src/components/select/select.ts",start:{line:249,character:2,position:5939},end:{line:249,character:33,position:5970},type:"(isOpen?: boolean) => void"},{name:"toggleItem",description:"Toggle the selection of an item",fileName:"core/src/components/select/select.ts",start:{line:235,character:2,position:5687},end:{line:235,character:51,position:5736},type:"(item: Item, selected?: boolean) => void"},{name:"unselect",description:"Unselect the provided item.",fileName:"core/src/components/select/select.ts",start:{line:229,character:2,position:5472},end:{line:229,character:29,position:5499},type:"(item: Item) => void"}],r={props:s,state:o,api:a};export{r as d,l as g};
