import{n as t}from"./stores.6dea9c6e.js";const i=e=>""+e,n={id:void 0,ariaLabel:"Select",open:!1,disabled:!1,items:[],filterText:"",loading:!1,selected:[],itemIdFn:i,onOpenChange:t,onFilterTextChange:t,onSelectedChange:t,allowedPlacements:["bottom-start","top-start","bottom-end","top-end"],className:"",menuClassName:"",menuItemClassName:"",badgeClassName:"",slotBadgeLabel:({itemContext:e})=>e.item,slotItem:({itemContext:e})=>e.item};function r(){return{...n}}const s=[{name:"allowedPlacements",description:`List of allowed placements for the dropdown.
This refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).`,fileName:"core/src/components/select/select.ts",start:{line:97,character:2,position:2619},end:{line:97,character:44,position:2661},type:"floatingUI.Placement[]",defaultValue:"['bottom-start', 'top-start', 'bottom-end', 'top-end']"},{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:32,character:2,position:1124},end:{line:32,character:32,position:1154},type:"string | undefined",defaultValue:"'Select'"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:67,character:2,position:1668},end:{line:67,character:25,position:1691},type:"string",defaultValue:"''"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:47,character:2,position:1346},end:{line:47,character:20,position:1364},type:"boolean",defaultValue:"false"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:42,character:2,position:1279},end:{line:42,character:21,position:1298},type:"string",defaultValue:"''"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:27,character:2,position:1036},end:{line:27,character:25,position:1059},type:"string | undefined",defaultValue:"undefined"},{name:"itemIdFn",description:`Custom function to get the id of an item
By default, the item is returned`,fileName:"core/src/components/select/select.ts",start:{line:103,character:2,position:2756},end:{line:103,character:28,position:2782},type:"(item: T) => string",defaultValue:"defaultItemId"},{name:"items",description:"List of available items for the dropdown",fileName:"core/src/components/select/select.ts",start:{line:91,character:2,position:2320},end:{line:91,character:13,position:2331},type:"T[]",defaultValue:"[]"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:72,character:2,position:1748},end:{line:72,character:19,position:1765},type:"boolean",defaultValue:"false"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:57,character:2,position:1488},end:{line:57,character:24,position:1510},type:"string",defaultValue:"''"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:62,character:2,position:1559},end:{line:62,character:28,position:1585},type:"string",defaultValue:"''"},{name:"onFilterTextChange",description:"Callback called when the text filter change",fileName:"core/src/components/select/select.ts",start:{line:117,character:2,position:3031},end:{line:117,character:41,position:3070},type:"(text: string) => void",defaultValue:"noop"},{name:"onOpenChange",description:"Callback called dropdown open state change",fileName:"core/src/components/select/select.ts",start:{line:111,character:2,position:2902},end:{line:111,character:38,position:2938},type:"(isOpen: boolean) => void",defaultValue:"noop"},{name:"onSelectedChange",description:"Callback called when the selection change",fileName:"core/src/components/select/select.ts",start:{line:122,character:2,position:3129},end:{line:122,character:40,position:3167},type:"(selected: T[]) => void",defaultValue:"noop"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:52,character:2,position:1408},end:{line:52,character:16,position:1422},type:"boolean",defaultValue:"false"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:37,character:2,position:1197},end:{line:37,character:19,position:1214},type:"Item[]",defaultValue:"[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:78,character:2,position:1934},end:{line:78,character:55,position:1987},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:84,character:2,position:2142},end:{line:84,character:49,position:2189},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"}],o=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:32,character:2,position:1124},end:{line:32,character:32,position:1154},type:"string | undefined"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:67,character:2,position:1668},end:{line:67,character:25,position:1691},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:47,character:2,position:1346},end:{line:47,character:20,position:1364},type:"boolean"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:42,character:2,position:1279},end:{line:42,character:21,position:1298},type:"string"},{name:"highlighted",description:`Highlighted item context.
It is designed to define the highlighted item in the dropdown menu`,fileName:"core/src/components/select/select.ts",start:{line:161,character:2,position:3858},end:{line:161,character:45,position:3901},type:"ItemContext<Item> | undefined"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:27,character:2,position:1036},end:{line:27,character:25,position:1059},type:"string | undefined"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:72,character:2,position:1748},end:{line:72,character:19,position:1765},type:"boolean"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:57,character:2,position:1488},end:{line:57,character:24,position:1510},type:"string"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:62,character:2,position:1559},end:{line:62,character:28,position:1585},type:"string"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:52,character:2,position:1408},end:{line:52,character:16,position:1422},type:"boolean"},{name:"placement",description:"Current placement of the dropdown",fileName:"core/src/components/select/select.ts",start:{line:166,character:2,position:3952},end:{line:166,character:46,position:3996},type:"floatingUI.Placement | undefined"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:37,character:2,position:1197},end:{line:37,character:19,position:1214},type:"Item[]"},{name:"selectedContexts",description:`/**
  List of selected items to be display`,fileName:"core/src/components/select/select.ts",start:{line:155,character:2,position:3706},end:{line:155,character:40,position:3744},type:"ItemContext<Item>[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:78,character:2,position:1934},end:{line:78,character:55,position:1987},type:"SlotContent<SelectItemContext<Item>>"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:84,character:2,position:2142},end:{line:84,character:49,position:2189},type:"SlotContent<SelectItemContext<Item>>"},{name:"visibleItems",description:"List of item contexts, to be displayed in the menu",fileName:"core/src/components/select/select.ts",start:{line:149,character:2,position:3613},end:{line:149,character:36,position:3647},type:"ItemContext<Item>[]"}],c=[{name:"clear",description:"Clear all the selected items",fileName:"core/src/components/select/select.ts",start:{line:173,character:2,position:4079},end:{line:173,character:16,position:4093},type:"() => void"},{name:"clearText",description:"Clear the filter text",fileName:"core/src/components/select/select.ts",start:{line:178,character:2,position:4132},end:{line:178,character:20,position:4150},type:"() => void"},{name:"close",description:"close the select",fileName:"core/src/components/select/select.ts",start:{line:254,character:2,position:5891},end:{line:254,character:16,position:5905},type:"() => void"},{name:"focus",description:`Focus the provided item among the selected list.
The focus feature is designed to know what item must be focused in the UI, i.e. among the badge elements.`,fileName:"core/src/components/select/select.ts",start:{line:211,character:2,position:4882},end:{line:211,character:26,position:4906},type:"(item: Item) => void"},{name:"focusFirst",description:"Focus the first element",fileName:"core/src/components/select/select.ts",start:{line:215,character:2,position:4946},end:{line:215,character:21,position:4965},type:"() => void"},{name:"focusLast",description:"Focus the last element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:227,character:2,position:5309},end:{line:227,character:20,position:5327},type:"() => void"},{name:"focusNext",description:"Focus the next element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:223,character:2,position:5191},end:{line:223,character:20,position:5209},type:"() => void"},{name:"focusPrevious",description:"Focus the previous element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:219,character:2,position:5069},end:{line:219,character:24,position:5091},type:"() => void"},{name:"highlight",description:"Highlight the given item, if there is a corresponding match among the visible list",fileName:"core/src/components/select/select.ts",start:{line:183,character:2,position:4250},end:{line:183,character:30,position:4278},type:"(item: Item) => void"},{name:"highlightFirst",description:"Highlight the first item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:188,character:2,position:4343},end:{line:188,character:25,position:4366},type:"() => void"},{name:"highlightLast",description:"Highlight the last item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:205,character:2,position:4684},end:{line:205,character:24,position:4706},type:"() => void"},{name:"highlightNext",description:`Highlight the next item among the visible list.
Loop to the first item if needed`,fileName:"core/src/components/select/select.ts",start:{line:200,character:2,position:4598},end:{line:200,character:24,position:4620},type:"() => void"},{name:"highlightPrevious",description:`Highlight the previous item among the visible list
Loop to the last item if needed`,fileName:"core/src/components/select/select.ts",start:{line:194,character:2,position:4470},end:{line:194,character:28,position:4496},type:"() => void"},{name:"open",description:"open the select",fileName:"core/src/components/select/select.ts",start:{line:250,character:2,position:5845},end:{line:250,character:15,position:5858},type:"() => void"},{name:"select",description:`Select the provided item.
The selected list is used to`,fileName:"core/src/components/select/select.ts",start:{line:234,character:2,position:5440},end:{line:234,character:27,position:5465},type:"(item: Item) => void"},{name:"toggle",description:"Toggle the dropdown menu",fileName:"core/src/components/select/select.ts",start:{line:259,character:2,position:6015},end:{line:259,character:33,position:6046},type:"(isOpen?: boolean) => void"},{name:"toggleItem",description:"Toggle the selection of an item",fileName:"core/src/components/select/select.ts",start:{line:245,character:2,position:5763},end:{line:245,character:51,position:5812},type:"(item: Item, selected?: boolean) => void"},{name:"unselect",description:"Unselect the provided item.",fileName:"core/src/components/select/select.ts",start:{line:239,character:2,position:5548},end:{line:239,character:29,position:5575},type:"(item: Item) => void"}],l={props:s,state:o,api:c};export{l as d,r as g};
