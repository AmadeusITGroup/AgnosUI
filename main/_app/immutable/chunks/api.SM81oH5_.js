import{n as t}from"./stores.RV--LVoP.js";const i=e=>""+e,n={id:void 0,ariaLabel:"Select",open:!1,disabled:!1,items:[],filterText:"",loading:!1,selected:[],itemIdFn:i,onOpenChange:t,onFilterTextChange:t,onSelectedChange:t,allowedPlacements:["bottom-start","top-start","bottom-end","top-end"],className:"",menuClassName:"",menuItemClassName:"",badgeClassName:"",slotBadgeLabel:({itemContext:e})=>e.item,slotItem:({itemContext:e})=>e.item};function r(){return{...n}}const s=[{name:"allowedPlacements",description:`List of allowed placements for the dropdown.
This refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).`,fileName:"core/src/components/select/select.ts",start:{line:99,character:2,position:2718},end:{line:99,character:33,position:2749},type:"Placement[]",defaultValue:"['bottom-start', 'top-start', 'bottom-end', 'top-end']"},{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:34,character:2,position:1223},end:{line:34,character:32,position:1253},type:"string | undefined",defaultValue:"'Select'"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:69,character:2,position:1767},end:{line:69,character:25,position:1790},type:"string",defaultValue:"''"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:49,character:2,position:1445},end:{line:49,character:20,position:1463},type:"boolean",defaultValue:"false"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:44,character:2,position:1378},end:{line:44,character:21,position:1397},type:"string",defaultValue:"''"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:29,character:2,position:1135},end:{line:29,character:25,position:1158},type:"string | undefined",defaultValue:"undefined"},{name:"itemIdFn",description:`Custom function to get the id of an item
By default, the item is returned`,fileName:"core/src/components/select/select.ts",start:{line:105,character:2,position:2844},end:{line:105,character:28,position:2870},type:"(item: T) => string",defaultValue:"defaultItemId"},{name:"items",description:"List of available items for the dropdown",fileName:"core/src/components/select/select.ts",start:{line:93,character:2,position:2419},end:{line:93,character:13,position:2430},type:"T[]",defaultValue:"[]"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:74,character:2,position:1847},end:{line:74,character:19,position:1864},type:"boolean",defaultValue:"false"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:59,character:2,position:1587},end:{line:59,character:24,position:1609},type:"string",defaultValue:"''"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:64,character:2,position:1658},end:{line:64,character:28,position:1684},type:"string",defaultValue:"''"},{name:"onFilterTextChange",description:"Callback called when the text filter change",fileName:"core/src/components/select/select.ts",start:{line:119,character:2,position:3119},end:{line:119,character:41,position:3158},type:"(text: string) => void",defaultValue:"noop"},{name:"onOpenChange",description:"Callback called dropdown open state change",fileName:"core/src/components/select/select.ts",start:{line:113,character:2,position:2990},end:{line:113,character:38,position:3026},type:"(isOpen: boolean) => void",defaultValue:"noop"},{name:"onSelectedChange",description:"Callback called when the selection change",fileName:"core/src/components/select/select.ts",start:{line:124,character:2,position:3217},end:{line:124,character:40,position:3255},type:"(selected: T[]) => void",defaultValue:"noop"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:54,character:2,position:1507},end:{line:54,character:16,position:1521},type:"boolean",defaultValue:"false"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:39,character:2,position:1296},end:{line:39,character:19,position:1313},type:"Item[]",defaultValue:"[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:80,character:2,position:2033},end:{line:80,character:55,position:2086},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:86,character:2,position:2241},end:{line:86,character:49,position:2288},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"}],o=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:34,character:2,position:1223},end:{line:34,character:32,position:1253},type:"string | undefined"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/src/components/select/select.ts",start:{line:69,character:2,position:1767},end:{line:69,character:25,position:1790},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"true if the select is disabled",fileName:"core/src/components/select/select.ts",start:{line:49,character:2,position:1445},end:{line:49,character:20,position:1463},type:"boolean"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/src/components/select/select.ts",start:{line:44,character:2,position:1378},end:{line:44,character:21,position:1397},type:"string"},{name:"highlighted",description:`Highlighted item context.
It is designed to define the highlighted item in the dropdown menu`,fileName:"core/src/components/select/select.ts",start:{line:163,character:2,position:3946},end:{line:163,character:45,position:3989},type:"ItemContext<Item> | undefined"},{name:"id",description:"id used for the input inside the select",fileName:"core/src/components/select/select.ts",start:{line:29,character:2,position:1135},end:{line:29,character:25,position:1158},type:"string | undefined"},{name:"loading",description:"true if a loading process is being done",fileName:"core/src/components/select/select.ts",start:{line:74,character:2,position:1847},end:{line:74,character:19,position:1864},type:"boolean"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/src/components/select/select.ts",start:{line:59,character:2,position:1587},end:{line:59,character:24,position:1609},type:"string"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/src/components/select/select.ts",start:{line:64,character:2,position:1658},end:{line:64,character:28,position:1684},type:"string"},{name:"open",description:"true if the select is open",fileName:"core/src/components/select/select.ts",start:{line:54,character:2,position:1507},end:{line:54,character:16,position:1521},type:"boolean"},{name:"placement",description:"Current placement of the dropdown",fileName:"core/src/components/select/select.ts",start:{line:168,character:2,position:4040},end:{line:168,character:35,position:4073},type:"Placement | undefined"},{name:"selected",description:"List of selected item ids",fileName:"core/src/components/select/select.ts",start:{line:39,character:2,position:1296},end:{line:39,character:19,position:1313},type:"Item[]"},{name:"selectedContexts",description:`/**
  List of selected items to be display`,fileName:"core/src/components/select/select.ts",start:{line:157,character:2,position:3794},end:{line:157,character:40,position:3832},type:"ItemContext<Item>[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:80,character:2,position:2033},end:{line:80,character:55,position:2086},type:"SlotContent<SelectItemContext<Item>>"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/src/components/select/select.ts",start:{line:86,character:2,position:2241},end:{line:86,character:49,position:2288},type:"SlotContent<SelectItemContext<Item>>"},{name:"visibleItems",description:"List of item contexts, to be displayed in the menu",fileName:"core/src/components/select/select.ts",start:{line:151,character:2,position:3701},end:{line:151,character:36,position:3735},type:"ItemContext<Item>[]"}],c=[{name:"clear",description:"Clear all the selected items",fileName:"core/src/components/select/select.ts",start:{line:175,character:2,position:4156},end:{line:175,character:16,position:4170},type:"() => void"},{name:"clearText",description:"Clear the filter text",fileName:"core/src/components/select/select.ts",start:{line:180,character:2,position:4209},end:{line:180,character:20,position:4227},type:"() => void"},{name:"close",description:"close the select",fileName:"core/src/components/select/select.ts",start:{line:256,character:2,position:5968},end:{line:256,character:16,position:5982},type:"() => void"},{name:"focus",description:`Focus the provided item among the selected list.
The focus feature is designed to know what item must be focused in the UI, i.e. among the badge elements.`,fileName:"core/src/components/select/select.ts",start:{line:213,character:2,position:4959},end:{line:213,character:26,position:4983},type:"(item: Item) => void"},{name:"focusFirst",description:"Focus the first element",fileName:"core/src/components/select/select.ts",start:{line:217,character:2,position:5023},end:{line:217,character:21,position:5042},type:"() => void"},{name:"focusLast",description:"Focus the last element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:229,character:2,position:5386},end:{line:229,character:20,position:5404},type:"() => void"},{name:"focusNext",description:"Focus the next element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:225,character:2,position:5268},end:{line:225,character:20,position:5286},type:"() => void"},{name:"focusPrevious",description:"Focus the previous element. If no element was focused before the call, nothing happens.",fileName:"core/src/components/select/select.ts",start:{line:221,character:2,position:5146},end:{line:221,character:24,position:5168},type:"() => void"},{name:"highlight",description:"Highlight the given item, if there is a corresponding match among the visible list",fileName:"core/src/components/select/select.ts",start:{line:185,character:2,position:4327},end:{line:185,character:30,position:4355},type:"(item: Item) => void"},{name:"highlightFirst",description:"Highlight the first item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:190,character:2,position:4420},end:{line:190,character:25,position:4443},type:"() => void"},{name:"highlightLast",description:"Highlight the last item among the visible list",fileName:"core/src/components/select/select.ts",start:{line:207,character:2,position:4761},end:{line:207,character:24,position:4783},type:"() => void"},{name:"highlightNext",description:`Highlight the next item among the visible list.
Loop to the first item if needed`,fileName:"core/src/components/select/select.ts",start:{line:202,character:2,position:4675},end:{line:202,character:24,position:4697},type:"() => void"},{name:"highlightPrevious",description:`Highlight the previous item among the visible list
Loop to the last item if needed`,fileName:"core/src/components/select/select.ts",start:{line:196,character:2,position:4547},end:{line:196,character:28,position:4573},type:"() => void"},{name:"open",description:"open the select",fileName:"core/src/components/select/select.ts",start:{line:252,character:2,position:5922},end:{line:252,character:15,position:5935},type:"() => void"},{name:"select",description:`Select the provided item.
The selected list is used to`,fileName:"core/src/components/select/select.ts",start:{line:236,character:2,position:5517},end:{line:236,character:27,position:5542},type:"(item: Item) => void"},{name:"toggle",description:"Toggle the dropdown menu",fileName:"core/src/components/select/select.ts",start:{line:261,character:2,position:6092},end:{line:261,character:33,position:6123},type:"(isOpen?: boolean) => void"},{name:"toggleItem",description:"Toggle the selection of an item",fileName:"core/src/components/select/select.ts",start:{line:247,character:2,position:5840},end:{line:247,character:51,position:5889},type:"(item: Item, selected?: boolean) => void"},{name:"unselect",description:"Unselect the provided item.",fileName:"core/src/components/select/select.ts",start:{line:241,character:2,position:5625},end:{line:241,character:29,position:5652},type:"(item: Item) => void"}],l={props:s,state:o,api:c};export{l as d,r as g};
