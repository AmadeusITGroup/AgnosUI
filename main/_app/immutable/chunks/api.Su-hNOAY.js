import{n as i}from"./stores.pxwdhlUr.js";const t={min:0,max:100,stepSize:1,readonly:!1,disabled:!1,vertical:!1,className:"",ariaLabelHandle:e=>""+e,ariaValueText:e=>""+e,onValuesChange:i,values:[0],showValueLabels:!0,showMinMaxLabels:!0,rtl:!1};function o(){return{...t}}const a=[{name:"ariaLabelHandle",description:"Return the value for the 'aria-label' attribute for the handle",fileName:"core/src/components/slider/slider.ts",start:{line:174,character:2,position:3690},end:{line:174,character:81,position:3769},type:"(value: number, sortedIndex: number, index: number) => string",defaultValue:"(value) => '' + value"},{name:"ariaValueText",description:"Return the value for the 'aria-valuetext' attribute for the handle",fileName:"core/src/components/slider/slider.ts",start:{line:182,character:2,position:4016},end:{line:182,character:79,position:4093},type:"(value: number, sortedIndex: number, index: number) => string",defaultValue:"(value) => '' + value"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:92,character:2,position:2043},end:{line:92,character:20,position:2061},type:"boolean",defaultValue:"false"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:77,character:2,position:1764},end:{line:77,character:14,position:1776},type:"number",defaultValue:"100"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:72,character:2,position:1686},end:{line:72,character:14,position:1698},type:"number",defaultValue:"0"},{name:"onValuesChange",description:`An event emitted when slider values are changed

Event payload equals to the updated slider values`,fileName:"core/src/components/slider/slider.ts",start:{line:189,character:2,position:4216},end:{line:189,character:45,position:4259},type:"(values: number[]) => void",defaultValue:"noop"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:87,character:2,position:1934},end:{line:87,character:20,position:1952},type:"boolean",defaultValue:"false"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:117,character:2,position:2469},end:{line:117,character:15,position:2482},type:"boolean",defaultValue:"false"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:112,character:2,position:2389},end:{line:112,character:28,position:2415},type:"boolean",defaultValue:"true"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:107,character:2,position:2286},end:{line:107,character:27,position:2311},type:"boolean",defaultValue:"true"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:82,character:2,position:1825},end:{line:82,character:19,position:1842},type:"number",defaultValue:"1"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:102,character:2,position:2197},end:{line:102,character:19,position:2214},type:"number[]",defaultValue:"[0]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:97,character:2,position:2140},end:{line:97,character:20,position:2158},type:"boolean",defaultValue:"false"}],s=[{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"combinedLabelDisplay",description:"If true, the label when the handles are close is visible",fileName:"core/src/components/slider/slider.ts",start:{line:149,character:2,position:3028},end:{line:149,character:32,position:3058},type:"boolean"},{name:"combinedLabelPositionLeft",description:"Combined label left offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:129,character:2,position:2659},end:{line:129,character:36,position:2693},type:"number"},{name:"combinedLabelPositionTop",description:"Combined label top offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:134,character:2,position:2741},end:{line:134,character:35,position:2774},type:"number"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:92,character:2,position:2043},end:{line:92,character:20,position:2061},type:"boolean"},{name:"handleDisplayOptions",description:"Array of objects representing handle display options",fileName:"core/src/components/slider/slider.ts",start:{line:164,character:2,position:3335},end:{line:164,character:47,position:3380},type:"HandleDisplayOptions[]"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:77,character:2,position:1764},end:{line:77,character:14,position:1776},type:"number"},{name:"maxValueLabelDisplay",description:"If true, the maximum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:144,character:2,position:2924},end:{line:144,character:32,position:2954},type:"boolean"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:72,character:2,position:1686},end:{line:72,character:14,position:1698},type:"number"},{name:"minValueLabelDisplay",description:"If true, the minimum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:139,character:2,position:2834},end:{line:139,character:32,position:2864},type:"boolean"},{name:"progressDisplayOptions",description:"Array of objects representing progress display options",fileName:"core/src/components/slider/slider.ts",start:{line:159,character:2,position:3216},end:{line:159,character:51,position:3265},type:"ProgressDisplayOptions[]"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:87,character:2,position:1934},end:{line:87,character:20,position:1952},type:"boolean"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:117,character:2,position:2469},end:{line:117,character:15,position:2482},type:"boolean"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:112,character:2,position:2389},end:{line:112,character:28,position:2415},type:"boolean"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:107,character:2,position:2286},end:{line:107,character:27,position:2311},type:"boolean"},{name:"sortedHandles",description:"Array of the sorted handles to display",fileName:"core/src/components/slider/slider.ts",start:{line:154,character:2,position:3114},end:{line:154,character:32,position:3144},type:"SliderHandle[]"},{name:"sortedValues",description:"Sorted slider values",fileName:"core/src/components/slider/slider.ts",start:{line:124,character:2,position:2587},end:{line:124,character:25,position:2610},type:"number[]"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:82,character:2,position:1825},end:{line:82,character:19,position:1842},type:"number"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:102,character:2,position:2197},end:{line:102,character:19,position:2214},type:"number[]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:97,character:2,position:2140},end:{line:97,character:20,position:2158},type:"boolean"}],r=[],l={props:a,state:s,api:r};export{l as d,o as g};
