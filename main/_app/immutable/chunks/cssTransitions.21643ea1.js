const b=()=>{},d=(o,t)=>{let n;const e=new Promise(r=>n=r);let i=()=>{o.removeEventListener(t,s),i=b};const s=r=>{r.target===o&&(n(r),i())};return o.addEventListener(t,s),{promise:e,unsubscribe(){i()}}},m=o=>{let t;return{promise:new Promise(n=>{t=setTimeout(()=>{t=void 0,n()},o)}),unsubscribe(){t&&(clearTimeout(t),t=void 0)}}};function v(o=document.body){o.getBoundingClientRect()}const w=(o,t)=>{t&&t.length>0&&o.classList.add(...t)},g=(o,t)=>{t&&t.length>0&&o.classList.remove(...t)};function p(o){return window.getComputedStyle(o).transitionProperty!=="none"}function f(o){const{transitionDelay:t,transitionDuration:n}=window.getComputedStyle(o),e=parseFloat(t),i=parseFloat(n);return(e+i)*1e3}const l=()=>{},y=o=>async(t,n,e,i,s)=>{const r=o(t,n,e,s)??l;if(e&&p(t)){const a=d(i,"abort"),c=d(t,"transitionend"),u=m(f(t));await Promise.race([a.promise,c.promise,u.promise]),a.unsubscribe(),c.unsubscribe(),u.unsubscribe()}i.aborted||r()};export{w as a,v as b,y as c,g as r};
