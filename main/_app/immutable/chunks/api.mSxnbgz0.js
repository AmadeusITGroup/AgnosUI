import{n as i}from"./app.f9VG7aYV.js";const t={min:0,max:100,stepSize:1,readonly:!1,disabled:!1,vertical:!1,className:"",ariaLabelHandle:(e,r)=>""+e,onValuesChange:i,values:[0],showValueLabels:!0,showMinMaxLabels:!0,rtl:!1};function l(){return{...t}}const s=[{name:"ariaLabelHandle",description:"Return the value for the 'aria-label' attribute for the handle",fileName:"core/src/components/slider/slider.ts",start:{line:156,character:2,position:3516},end:{line:156,character:81,position:3595},type:"(value: number, sortedIndex: number, index: number) => string",defaultValue:"(value, _index) => '' + value"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:74,character:2,position:1835},end:{line:74,character:20,position:1853},type:"boolean",defaultValue:"false"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:59,character:2,position:1556},end:{line:59,character:14,position:1568},type:"number",defaultValue:"100"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:54,character:2,position:1478},end:{line:54,character:14,position:1490},type:"number",defaultValue:"0"},{name:"onValuesChange",description:`An event emitted when slider values are changed

Event payload equals to the updated slider values`,fileName:"core/src/components/slider/slider.ts",start:{line:163,character:2,position:3718},end:{line:163,character:45,position:3761},type:"(values: number[]) => void",defaultValue:"noop"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:69,character:2,position:1726},end:{line:69,character:20,position:1744},type:"boolean",defaultValue:"false"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:99,character:2,position:2261},end:{line:99,character:15,position:2274},type:"boolean",defaultValue:"false"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:94,character:2,position:2181},end:{line:94,character:28,position:2207},type:"boolean",defaultValue:"true"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:89,character:2,position:2078},end:{line:89,character:27,position:2103},type:"boolean",defaultValue:"true"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:64,character:2,position:1617},end:{line:64,character:19,position:1634},type:"number",defaultValue:"1"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:84,character:2,position:1989},end:{line:84,character:19,position:2006},type:"number[]",defaultValue:"[0]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:79,character:2,position:1932},end:{line:79,character:20,position:1950},type:"boolean",defaultValue:"false"}],a=[{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"combinedLabelDisplay",description:"If true, the label when the handles are close is visible",fileName:"core/src/components/slider/slider.ts",start:{line:131,character:2,position:2820},end:{line:131,character:32,position:2850},type:"boolean"},{name:"combinedLabelPositionLeft",description:"Combined label left offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:111,character:2,position:2451},end:{line:111,character:36,position:2485},type:"number"},{name:"combinedLabelPositionTop",description:"Combined label top offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:116,character:2,position:2533},end:{line:116,character:35,position:2566},type:"number"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:74,character:2,position:1835},end:{line:74,character:20,position:1853},type:"boolean"},{name:"handleDisplayOptions",description:"Array of objects representing handle display options",fileName:"core/src/components/slider/slider.ts",start:{line:146,character:2,position:3161},end:{line:146,character:47,position:3206},type:"HandleDisplayOptions[]"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:59,character:2,position:1556},end:{line:59,character:14,position:1568},type:"number"},{name:"maxValueLabelDisplay",description:"If true, the maximum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:126,character:2,position:2716},end:{line:126,character:32,position:2746},type:"boolean"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:54,character:2,position:1478},end:{line:54,character:14,position:1490},type:"number"},{name:"minValueLabelDisplay",description:"If true, the minimum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:121,character:2,position:2626},end:{line:121,character:32,position:2656},type:"boolean"},{name:"progressDisplayOptions",description:"Array of objects representing progress display options",fileName:"core/src/components/slider/slider.ts",start:{line:141,character:2,position:3042},end:{line:141,character:51,position:3091},type:"ProgressDisplayOptions[]"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:69,character:2,position:1726},end:{line:69,character:20,position:1744},type:"boolean"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:99,character:2,position:2261},end:{line:99,character:15,position:2274},type:"boolean"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:94,character:2,position:2181},end:{line:94,character:28,position:2207},type:"boolean"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:89,character:2,position:2078},end:{line:89,character:27,position:2103},type:"boolean"},{name:"sortedHandles",description:"Array of the sorted handles to display",fileName:"core/src/components/slider/slider.ts",start:{line:136,character:2,position:2906},end:{line:136,character:66,position:2970},type:"{value: number; id: number; ariaLabel: string}[]"},{name:"sortedValues",description:"Sorted slider values",fileName:"core/src/components/slider/slider.ts",start:{line:106,character:2,position:2379},end:{line:106,character:25,position:2402},type:"number[]"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:64,character:2,position:1617},end:{line:64,character:19,position:1634},type:"number"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:84,character:2,position:1989},end:{line:84,character:19,position:2006},type:"number[]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:79,character:2,position:1932},end:{line:79,character:20,position:1950},type:"boolean"}],n=[],c={props:s,state:a,api:n};export{c as d,l as g};
