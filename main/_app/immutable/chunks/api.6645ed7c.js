import{n as t}from"./stores.a4a6def4.js";const i=e=>""+e,n={id:void 0,ariaLabel:"Select",open:!1,disabled:!1,items:[],filterText:"",loading:!1,selected:[],itemIdFn:i,onOpenChange:t,onFilterTextChange:t,onSelectedChange:t,className:"",menuClassName:"",menuItemClassName:"",badgeClassName:"",slotBadgeLabel:({itemContext:e})=>e.item,slotItem:({itemContext:e})=>e.item};function c(){return{...n}}const a=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/lib/select.ts",start:{line:31,character:2,position:1e3},end:{line:31,character:32,position:1030},type:"string | undefined",defaultValue:"'Select'"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/lib/select.ts",start:{line:66,character:2,position:1544},end:{line:66,character:25,position:1567},type:"string",defaultValue:"''"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/lib/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"true if the select is disabled",fileName:"core/lib/select.ts",start:{line:46,character:2,position:1222},end:{line:46,character:20,position:1240},type:"boolean",defaultValue:"false"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/lib/select.ts",start:{line:41,character:2,position:1155},end:{line:41,character:21,position:1174},type:"string",defaultValue:"''"},{name:"id",description:"id used for the input inside the select",fileName:"core/lib/select.ts",start:{line:26,character:2,position:912},end:{line:26,character:25,position:935},type:"string | undefined",defaultValue:"undefined"},{name:"itemIdFn",description:`Custom function to get the id of an item
By default, the item is returned`,fileName:"core/lib/select.ts",start:{line:96,character:2,position:2302},end:{line:96,character:28,position:2328},type:"(item: T) => string",defaultValue:"defaultItemId"},{name:"items",description:"List of available items for the dropdown",fileName:"core/lib/select.ts",start:{line:90,character:2,position:2196},end:{line:90,character:13,position:2207},type:"T[]",defaultValue:"[]"},{name:"loading",description:"true if a loading process is being done",fileName:"core/lib/select.ts",start:{line:71,character:2,position:1624},end:{line:71,character:19,position:1641},type:"boolean",defaultValue:"false"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/lib/select.ts",start:{line:56,character:2,position:1364},end:{line:56,character:24,position:1386},type:"string",defaultValue:"''"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/lib/select.ts",start:{line:61,character:2,position:1435},end:{line:61,character:28,position:1461},type:"string",defaultValue:"''"},{name:"onFilterTextChange",description:"Callback called when the text filter change",fileName:"core/lib/select.ts",start:{line:110,character:2,position:2577},end:{line:110,character:41,position:2616},type:"(text: string) => void",defaultValue:"noop"},{name:"onOpenChange",description:"Callback called dropdown open state change",fileName:"core/lib/select.ts",start:{line:104,character:2,position:2448},end:{line:104,character:38,position:2484},type:"(isOpen: boolean) => void",defaultValue:"noop"},{name:"onSelectedChange",description:"Callback called when the selection change",fileName:"core/lib/select.ts",start:{line:115,character:2,position:2675},end:{line:115,character:40,position:2713},type:"(selected: T[]) => void",defaultValue:"noop"},{name:"open",description:"true if the select is open",fileName:"core/lib/select.ts",start:{line:51,character:2,position:1284},end:{line:51,character:16,position:1298},type:"boolean",defaultValue:"false"},{name:"selected",description:"List of selected item ids",fileName:"core/lib/select.ts",start:{line:36,character:2,position:1073},end:{line:36,character:19,position:1090},type:"Item[]",defaultValue:"[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/lib/select.ts",start:{line:77,character:2,position:1810},end:{line:77,character:55,position:1863},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/lib/select.ts",start:{line:83,character:2,position:2018},end:{line:83,character:49,position:2065},type:"SlotContent<SelectItemContext<Item>>",defaultValue:"({itemContext}) => itemContext.item"}],o=[{name:"ariaLabel",description:"aria-label used for the input inside the select",fileName:"core/lib/select.ts",start:{line:31,character:2,position:1e3},end:{line:31,character:32,position:1030},type:"string | undefined"},{name:"badgeClassName",description:"Class to be added on selected items (displayed in the input zone)",fileName:"core/lib/select.ts",start:{line:66,character:2,position:1544},end:{line:66,character:25,position:1567},type:"string"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/lib/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"disabled",description:"true if the select is disabled",fileName:"core/lib/select.ts",start:{line:46,character:2,position:1222},end:{line:46,character:20,position:1240},type:"boolean"},{name:"filterText",description:"Filtered text to be display in the filter input",fileName:"core/lib/select.ts",start:{line:41,character:2,position:1155},end:{line:41,character:21,position:1174},type:"string"},{name:"highlighted",description:`Highlighted item context.
It is designed to define the highlighted item in the dropdown menu`,fileName:"core/lib/select.ts",start:{line:154,character:2,position:3404},end:{line:154,character:45,position:3447},type:"ItemContext<Item> | undefined"},{name:"id",description:"id used for the input inside the select",fileName:"core/lib/select.ts",start:{line:26,character:2,position:912},end:{line:26,character:25,position:935},type:"string | undefined"},{name:"loading",description:"true if a loading process is being done",fileName:"core/lib/select.ts",start:{line:71,character:2,position:1624},end:{line:71,character:19,position:1641},type:"boolean"},{name:"menuClassName",description:"Class to be added on the dropdown menu container",fileName:"core/lib/select.ts",start:{line:56,character:2,position:1364},end:{line:56,character:24,position:1386},type:"string"},{name:"menuItemClassName",description:"Class to be added on menu items",fileName:"core/lib/select.ts",start:{line:61,character:2,position:1435},end:{line:61,character:28,position:1461},type:"string"},{name:"open",description:"true if the select is open",fileName:"core/lib/select.ts",start:{line:51,character:2,position:1284},end:{line:51,character:16,position:1298},type:"boolean"},{name:"selected",description:"List of selected item ids",fileName:"core/lib/select.ts",start:{line:36,character:2,position:1073},end:{line:36,character:19,position:1090},type:"Item[]"},{name:"selectedContexts",description:`/**
  List of selected items to be display`,fileName:"core/lib/select.ts",start:{line:148,character:2,position:3252},end:{line:148,character:40,position:3290},type:"ItemContext<Item>[]"},{name:"slotBadgeLabel",description:`The template to override the way each badge on the left of the input is displayed.
This define the content of the badge inside the badge container.`,fileName:"core/lib/select.ts",start:{line:77,character:2,position:1810},end:{line:77,character:55,position:1863},type:"SlotContent<SelectItemContext<Item>>"},{name:"slotItem",description:`The template to override the way each item is displayed in the list.
This define the content of the badge inside the badge container.`,fileName:"core/lib/select.ts",start:{line:83,character:2,position:2018},end:{line:83,character:49,position:2065},type:"SlotContent<SelectItemContext<Item>>"},{name:"visibleItems",description:"List of item contexts, to be displayed in the menu",fileName:"core/lib/select.ts",start:{line:142,character:2,position:3159},end:{line:142,character:36,position:3193},type:"ItemContext<Item>[]"}],s=[{name:"clear",description:"Clear all the selected items",fileName:"core/lib/select.ts",start:{line:161,character:2,position:3530},end:{line:161,character:16,position:3544},type:"() => void"},{name:"clearText",description:"Clear the filter text",fileName:"core/lib/select.ts",start:{line:166,character:2,position:3583},end:{line:166,character:20,position:3601},type:"() => void"},{name:"close",description:"close the select",fileName:"core/lib/select.ts",start:{line:242,character:2,position:5342},end:{line:242,character:16,position:5356},type:"() => void"},{name:"focus",description:`Focus the provided item among the selected list.
The focus feature is designed to know what item must be focused in the UI, i.e. among the badge elements.`,fileName:"core/lib/select.ts",start:{line:199,character:2,position:4333},end:{line:199,character:26,position:4357},type:"(item: Item) => void"},{name:"focusFirst",description:"Focus the first element",fileName:"core/lib/select.ts",start:{line:203,character:2,position:4397},end:{line:203,character:21,position:4416},type:"() => void"},{name:"focusLast",description:"Focus the last element. If no element was focused before the call, nothing happens.",fileName:"core/lib/select.ts",start:{line:215,character:2,position:4760},end:{line:215,character:20,position:4778},type:"() => void"},{name:"focusNext",description:"Focus the next element. If no element was focused before the call, nothing happens.",fileName:"core/lib/select.ts",start:{line:211,character:2,position:4642},end:{line:211,character:20,position:4660},type:"() => void"},{name:"focusPrevious",description:"Focus the previous element. If no element was focused before the call, nothing happens.",fileName:"core/lib/select.ts",start:{line:207,character:2,position:4520},end:{line:207,character:24,position:4542},type:"() => void"},{name:"highlight",description:"Highlight the given item, if there is a corresponding match among the visible list",fileName:"core/lib/select.ts",start:{line:171,character:2,position:3701},end:{line:171,character:30,position:3729},type:"(item: Item) => void"},{name:"highlightFirst",description:"Highlight the first item among the visible list",fileName:"core/lib/select.ts",start:{line:176,character:2,position:3794},end:{line:176,character:25,position:3817},type:"() => void"},{name:"highlightLast",description:"Highlight the last item among the visible list",fileName:"core/lib/select.ts",start:{line:193,character:2,position:4135},end:{line:193,character:24,position:4157},type:"() => void"},{name:"highlightNext",description:`Highlight the next item among the visible list.
Loop to the first item if needed`,fileName:"core/lib/select.ts",start:{line:188,character:2,position:4049},end:{line:188,character:24,position:4071},type:"() => void"},{name:"highlightPrevious",description:`Highlight the previous item among the visible list
Loop to the last item if needed`,fileName:"core/lib/select.ts",start:{line:182,character:2,position:3921},end:{line:182,character:28,position:3947},type:"() => void"},{name:"open",description:"open the select",fileName:"core/lib/select.ts",start:{line:238,character:2,position:5296},end:{line:238,character:15,position:5309},type:"() => void"},{name:"select",description:`Select the provided item.
The selected list is used to`,fileName:"core/lib/select.ts",start:{line:222,character:2,position:4891},end:{line:222,character:27,position:4916},type:"(item: Item) => void"},{name:"toggle",description:"Toggle the dropdown menu",fileName:"core/lib/select.ts",start:{line:247,character:2,position:5466},end:{line:247,character:33,position:5497},type:"(isOpen?: boolean) => void"},{name:"toggleItem",description:"Toggle the selection of an item",fileName:"core/lib/select.ts",start:{line:233,character:2,position:5214},end:{line:233,character:51,position:5263},type:"(item: Item, selected?: boolean) => void"},{name:"unselect",description:"Unselect the provided item.",fileName:"core/lib/select.ts",start:{line:227,character:2,position:4999},end:{line:227,character:29,position:5026},type:"(item: Item) => void"}],r={props:a,state:o,api:s};export{r as d,c as g};
