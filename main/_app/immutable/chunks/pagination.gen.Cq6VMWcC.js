const G=`export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"pagination.gen.js","sourceRoot":"","sources":["../../../../src/components/pagination/pagination.gen.ts"],"names":[],"mappings":"","sourcesContent":["import type {WidgetSlotContext, SlotContent, Widget, Directive} from '@agnos-ui/angular-headless';\n\nexport type PaginationContext = WidgetSlotContext<PaginationWidget>;\n\nexport type PaginationNumberContext = PaginationContext & {\n\t/**\n\t * Displayed page\n\t */\n\tdisplayedPage: number;\n};\n\nexport interface PaginationState {\n\t/**\n\t * The number of pages.\n\t */\n\tpageCount: number;\n\t/**\n\t * The current pages, the number in the Array is the number of the page.\n\t */\n\tpages: number[];\n\t/**\n\t * true if the previous link need to be disabled\n\t */\n\tpreviousDisabled: boolean;\n\t/**\n\t * true if the next link need to be disabled\n\t */\n\tnextDisabled: boolean;\n\t/**\n\t * The label for each \"Page\" page link.\n\t */\n\tpagesLabel: string[];\n\t/**\n\t * The hrefs for each \"Page\" page link\n\t */\n\tpagesHrefs: string[];\n\t/**\n\t * The hrefs for the direction links\n\t */\n\tdirectionsHrefs: DirectionsHrefs;\n\t/**\n\t * The aria-live text\n\t */\n\tariaLiveLabelText: string;\n\t/**\n\t * The current page.\n\t * \n\t * Page numbers start with `1`.\n\t */\n\tpage: number;\n\t/**\n\t * The pagination display size.\n\t * \n\t * Bootstrap currently supports small and large sizes.\n\t */\n\tsize: 'sm' | 'lg' | null;\n\t/**\n\t * The label for the nav element.\n\t * \n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaLabel: string;\n\t/**\n\t * The label for the \"active\" page.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tactiveLabel: string;\n\t/**\n\t * The label for the \"First\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaFirstLabel: string;\n\t/**\n\t * The label for the \"Previous\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaPreviousLabel: string;\n\t/**\n\t * The label for the \"Next\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaNextLabel: string;\n\t/**\n\t * The label for the \"Last\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaLastLabel: string;\n\t/**\n\t * The label for the \"Ellipsis\" page.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaEllipsisLabel: string;\n\t/**\n\t * If `true`, pagination links will be disabled.\n\t */\n\tdisabled: boolean;\n\t/**\n\t * If `true`, the \"Next\" and \"Previous\" page links are shown.\n\t */\n\tdirectionLinks: boolean;\n\t/**\n\t * If `true`, the \"First\" and \"Last\" page links are shown.\n\t */\n\tboundaryLinks: boolean;\n\t/**\n\t * CSS classes to be applied on the widget main container\n\t */\n\tclassName: string;\n\t/**\n\t * The template to use for the structure of the pagination component\n\t * The default structure uses {@link PaginationCommonPropsAndState.slotEllipsis slotEllipsis}, {@link PaginationCommonPropsAndState.slotFirst slotFirst},\n\t * {@link PaginationCommonPropsAndState.slotPrevious slotPrevious}, {@link PaginationCommonPropsAndState.slotNext slotNext},\n\t * {@link PaginationCommonPropsAndState.slotLast slotLast}, {@link PaginationCommonPropsAndState.slotPages slotPages},\n\t * {@link PaginationCommonPropsAndState.slotNumberLabel slotNumberLabel},\n\t */\n\tslotStructure: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the ellipsis slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotEllipsis: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the first slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotFirst: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the previous slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotPrevious: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the next slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotNext: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the last slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotLast: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the pages slot\n\t * To use to customize the pages view\n\t * override any configuration parameters provided for this\n\t */\n\tslotPages: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the number slot\n\t * override any configuration parameters provided for this\n\t * for I18n, we suggest to use the global configuration\n\t */\n\tslotNumberLabel: SlotContent<PaginationNumberContext>;\n}\n\nexport interface PaginationProps {\n\t/**\n\t * The number of items in your paginated collection.\n\t * \n\t * Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n\t * `collectionSize` and `pageSize`.\n\t * \n\t * Ex. if you have 100 items in your collection and displaying 20 items per page, you'll end up with 5 pages.\n\t * \n\t * Whatever the collectionSize the page number is of minimum 1.\n\t */\n\tcollectionSize: number;\n\t/**\n\t * The number of items per page.\n\t */\n\tpageSize: number;\n\t/**\n\t * An event fired when the page is changed.\n\t * \n\t * Event payload is the number of the newly selected page.\n\t * \n\t * Page numbers start with `1`.\n\t */\n\tonPageChange: (page: number) => void;\n\t/**\n\t * pagesFactory returns a function computing the array of pages to be displayed\n\t * as number (-1 are treated as ellipsis).\n\t * Use Page slot to customize the pages view and not this\n\t */\n\tpagesFactory: (page: number, pageCount: number) => number[];\n\t/**\n\t * Provide the label for each \"Page\" page button.\n\t * This is used for accessibility purposes.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaPageLabel: (processPage: number, pageCount: number) => string;\n\t/**\n\t * Provide the label for the aria-live element\n\t * This is used for accessibility purposes.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaLiveLabel: (currentPage: number, pageCount: number) => string;\n\t/**\n\t * Factory function providing the href for a \"Page\" page anchor,\n\t * based on the current page number\n\t */\n\tpageLink: (pageNumber: number) => string;\n\t/**\n\t * The current page.\n\t * \n\t * Page numbers start with `1`.\n\t */\n\tpage: number;\n\t/**\n\t * The pagination display size.\n\t * \n\t * Bootstrap currently supports small and large sizes.\n\t */\n\tsize: 'sm' | 'lg' | null;\n\t/**\n\t * The label for the nav element.\n\t * \n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaLabel: string;\n\t/**\n\t * The label for the \"active\" page.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tactiveLabel: string;\n\t/**\n\t * The label for the \"First\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaFirstLabel: string;\n\t/**\n\t * The label for the \"Previous\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaPreviousLabel: string;\n\t/**\n\t * The label for the \"Next\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaNextLabel: string;\n\t/**\n\t * The label for the \"Last\" page button.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaLastLabel: string;\n\t/**\n\t * The label for the \"Ellipsis\" page.\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tariaEllipsisLabel: string;\n\t/**\n\t * If `true`, pagination links will be disabled.\n\t */\n\tdisabled: boolean;\n\t/**\n\t * If `true`, the \"Next\" and \"Previous\" page links are shown.\n\t */\n\tdirectionLinks: boolean;\n\t/**\n\t * If `true`, the \"First\" and \"Last\" page links are shown.\n\t */\n\tboundaryLinks: boolean;\n\t/**\n\t * CSS classes to be applied on the widget main container\n\t */\n\tclassName: string;\n\t/**\n\t * The template to use for the structure of the pagination component\n\t * The default structure uses {@link PaginationCommonPropsAndState.slotEllipsis slotEllipsis}, {@link PaginationCommonPropsAndState.slotFirst slotFirst},\n\t * {@link PaginationCommonPropsAndState.slotPrevious slotPrevious}, {@link PaginationCommonPropsAndState.slotNext slotNext},\n\t * {@link PaginationCommonPropsAndState.slotLast slotLast}, {@link PaginationCommonPropsAndState.slotPages slotPages},\n\t * {@link PaginationCommonPropsAndState.slotNumberLabel slotNumberLabel},\n\t */\n\tslotStructure: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the ellipsis slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotEllipsis: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the first slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotFirst: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the previous slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotPrevious: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the next slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotNext: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the last slot\n\t * for I18n, we suggest to use the global configuration\n\t * override any configuration parameters provided for this\n\t */\n\tslotLast: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the pages slot\n\t * To use to customize the pages view\n\t * override any configuration parameters provided for this\n\t */\n\tslotPages: SlotContent<PaginationContext>;\n\t/**\n\t * The template to use for the number slot\n\t * override any configuration parameters provided for this\n\t * for I18n, we suggest to use the global configuration\n\t */\n\tslotNumberLabel: SlotContent<PaginationNumberContext>;\n}\n\nexport type PaginationWidget = Widget<PaginationProps, PaginationState, PaginationApi, PaginationActions, PaginationDirectives>;\n\nexport interface DirectionsHrefs {\n\t/**\n\t * The href for the 'Previous' navigation link\n\t */\n\tprevious: string;\n\t/**\n\t * The href for the 'Next' direction link\n\t */\n\tnext: string;\n}\n\nexport interface PaginationActions {\n\t/**\n\t * To \"go\" to a specific page\n\t */\n\tselect(page: number, event?: MouseEvent): void;\n\t/**\n\t * To \"go\" to the first page\n\t */\n\tfirst(event?: MouseEvent): void;\n\t/**\n\t * To \"go\" to the previous page\n\t */\n\tprevious(event?: MouseEvent): void;\n\t/**\n\t * To \"go\" to the next page\n\t */\n\tnext(event?: MouseEvent): void;\n\t/**\n\t * To \"go\" to the last page\n\t */\n\tlast(event?: MouseEvent): void;\n}\n\nexport interface PaginationDirectives {\n\t/**\n\t * A directive to be applied to each page link\n\t * This will handle the click, tabindex and aria attributes\n\t */\n\tpageLink: Directive<{\n\t\tpage: number;\n\t}>;\n\t/**\n\t * A directive to be applied on the previous link\n\t */\n\tpagePrev: Directive;\n\t/**\n\t * A directive to be applied on the first link\n\t */\n\tpageFirst: Directive;\n\t/**\n\t * A directive to be applied on the next link\n\t */\n\tpageNext: Directive;\n\t/**\n\t * A directive to be applied on the Last link\n\t */\n\tpageLast: Directive;\n}\n\nexport interface PaginationApi {\n}\n\n"]}`;export{G as default};
