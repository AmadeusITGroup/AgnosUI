import{n as t}from"./stores.GZwD8O6L.js";const i={min:0,max:100,stepSize:1,readonly:!1,disabled:!1,vertical:!1,className:"",ariaLabelHandle:e=>""+e,ariaValueText:e=>""+e,onValuesChange:t,values:[0],showValueLabels:!0,showMinMaxLabels:!0,rtl:!1,slotStructure:void 0,slotLabel:({value:e})=>""+e,slotHandle:void 0};function o(){return{...i}}const n=[{name:"ariaLabelHandle",description:"Return the value for the 'aria-label' attribute for the handle",fileName:"core/src/components/slider/slider.ts",start:{line:200,character:2,position:4443},end:{line:200,character:81,position:4522},type:"(value: number, sortedIndex: number, index: number) => string",defaultValue:"(value) => '' + value"},{name:"ariaValueText",description:"Return the value for the 'aria-valuetext' attribute for the handle",fileName:"core/src/components/slider/slider.ts",start:{line:208,character:2,position:4769},end:{line:208,character:79,position:4846},type:"(value: number, sortedIndex: number, index: number) => string",defaultValue:"(value) => '' + value"},{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string",defaultValue:"''"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:97,character:2,position:2322},end:{line:97,character:20,position:2340},type:"boolean",defaultValue:"false"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:82,character:2,position:2043},end:{line:82,character:14,position:2055},type:"number",defaultValue:"100"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:77,character:2,position:1965},end:{line:77,character:14,position:1977},type:"number",defaultValue:"0"},{name:"onValuesChange",description:`An event emitted when slider values are changed

Event payload equals to the updated slider values`,fileName:"core/src/components/slider/slider.ts",start:{line:215,character:2,position:4969},end:{line:215,character:45,position:5012},type:"(values: number[]) => void",defaultValue:"noop"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:92,character:2,position:2213},end:{line:92,character:20,position:2231},type:"boolean",defaultValue:"false"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:122,character:2,position:2748},end:{line:122,character:15,position:2761},type:"boolean",defaultValue:"false"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:117,character:2,position:2668},end:{line:117,character:28,position:2694},type:"boolean",defaultValue:"true"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:112,character:2,position:2565},end:{line:112,character:27,position:2590},type:"boolean",defaultValue:"true"},{name:"slotHandle",description:"Slot to change the handlers",fileName:"core/src/components/slider/slider.ts",start:{line:137,character:2,position:3027},end:{line:137,character:51,position:3076},type:"SlotContent<SliderSlotHandleContext>",defaultValue:"undefined"},{name:"slotLabel",description:"Slot to change the default labels of the slider",fileName:"core/src/components/slider/slider.ts",start:{line:132,character:2,position:2934},end:{line:132,character:49,position:2981},type:"SlotContent<SliderSlotLabelContext>",defaultValue:"({value}) => '' + value"},{name:"slotStructure",description:"Slot to change the default display of the slider",fileName:"core/src/components/slider/slider.ts",start:{line:127,character:2,position:2827},end:{line:127,character:44,position:2869},type:"SlotContent<SliderContext>",defaultValue:"undefined"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:87,character:2,position:2104},end:{line:87,character:19,position:2121},type:"number",defaultValue:"1"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:107,character:2,position:2476},end:{line:107,character:19,position:2493},type:"number[]",defaultValue:"[0]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:102,character:2,position:2419},end:{line:102,character:20,position:2437},type:"boolean",defaultValue:"false"}],a=[{name:"className",description:"CSS classes to be applied on the widget main container",fileName:"core/src/components/commonProps.ts",start:{line:5,character:2,position:116},end:{line:5,character:20,position:134},type:"string"},{name:"combinedLabelDisplay",description:"If true, the label when the handles are close is visible",fileName:"core/src/components/slider/slider.ts",start:{line:169,character:2,position:3622},end:{line:169,character:32,position:3652},type:"boolean"},{name:"combinedLabelPositionLeft",description:"Combined label left offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:149,character:2,position:3253},end:{line:149,character:36,position:3287},type:"number"},{name:"combinedLabelPositionTop",description:"Combined label top offset in %",fileName:"core/src/components/slider/slider.ts",start:{line:154,character:2,position:3335},end:{line:154,character:35,position:3368},type:"number"},{name:"disabled",description:"If `true` slider value cannot be changed and the slider cannot be focused",fileName:"core/src/components/slider/slider.ts",start:{line:97,character:2,position:2322},end:{line:97,character:20,position:2340},type:"boolean"},{name:"handleDisplayOptions",description:"Array of objects representing handle display options",fileName:"core/src/components/slider/slider.ts",start:{line:184,character:2,position:3929},end:{line:184,character:47,position:3974},type:"HandleDisplayOptions[]"},{name:"interactive",description:"Check if the slider is interactive, meaning it is not disabled or readonly\nTODO: rename to `interactive`, issue #510",fileName:"core/src/components/slider/slider.ts",start:{line:190,character:2,position:4112},end:{line:190,character:23,position:4133},type:"boolean"},{name:"max",description:"Maximum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:82,character:2,position:2043},end:{line:82,character:14,position:2055},type:"number"},{name:"maxValueLabelDisplay",description:"If true, the maximum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:164,character:2,position:3518},end:{line:164,character:32,position:3548},type:"boolean"},{name:"min",description:"Minimum value that can be assigned to the slider",fileName:"core/src/components/slider/slider.ts",start:{line:77,character:2,position:1965},end:{line:77,character:14,position:1977},type:"number"},{name:"minValueLabelDisplay",description:"If true, the minimum label will be visible",fileName:"core/src/components/slider/slider.ts",start:{line:159,character:2,position:3428},end:{line:159,character:32,position:3458},type:"boolean"},{name:"progressDisplayOptions",description:"Array of objects representing progress display options",fileName:"core/src/components/slider/slider.ts",start:{line:179,character:2,position:3810},end:{line:179,character:51,position:3859},type:"ProgressDisplayOptions[]"},{name:"readonly",description:"If `true` slider value cannot be changed but the slider is still focusable",fileName:"core/src/components/slider/slider.ts",start:{line:92,character:2,position:2213},end:{line:92,character:20,position:2231},type:"boolean"},{name:"rtl",description:"It `true` slider display is inversed",fileName:"core/src/components/slider/slider.ts",start:{line:122,character:2,position:2748},end:{line:122,character:15,position:2761},type:"boolean"},{name:"showMinMaxLabels",description:"If `true` the min and max labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:117,character:2,position:2668},end:{line:117,character:28,position:2694},type:"boolean"},{name:"showValueLabels",description:"If `true` the value labels are displayed on the slider",fileName:"core/src/components/slider/slider.ts",start:{line:112,character:2,position:2565},end:{line:112,character:27,position:2590},type:"boolean"},{name:"slotHandle",description:"Slot to change the handlers",fileName:"core/src/components/slider/slider.ts",start:{line:137,character:2,position:3027},end:{line:137,character:51,position:3076},type:"SlotContent<SliderSlotHandleContext>"},{name:"slotLabel",description:"Slot to change the default labels of the slider",fileName:"core/src/components/slider/slider.ts",start:{line:132,character:2,position:2934},end:{line:132,character:49,position:2981},type:"SlotContent<SliderSlotLabelContext>"},{name:"slotStructure",description:"Slot to change the default display of the slider",fileName:"core/src/components/slider/slider.ts",start:{line:127,character:2,position:2827},end:{line:127,character:44,position:2869},type:"SlotContent<SliderContext>"},{name:"sortedHandles",description:"Array of the sorted handles to display",fileName:"core/src/components/slider/slider.ts",start:{line:174,character:2,position:3708},end:{line:174,character:32,position:3738},type:"SliderHandle[]"},{name:"sortedValues",description:"Sorted slider values",fileName:"core/src/components/slider/slider.ts",start:{line:144,character:2,position:3181},end:{line:144,character:25,position:3204},type:"number[]"},{name:"stepSize",description:"Unit value between slider steps",fileName:"core/src/components/slider/slider.ts",start:{line:87,character:2,position:2104},end:{line:87,character:19,position:2121},type:"number"},{name:"values",description:"Current slider values",fileName:"core/src/components/slider/slider.ts",start:{line:107,character:2,position:2476},end:{line:107,character:19,position:2493},type:"number[]"},{name:"vertical",description:"If `true` is vertically positioned otherwise it is horizontal",fileName:"core/src/components/slider/slider.ts",start:{line:102,character:2,position:2419},end:{line:102,character:20,position:2437},type:"boolean"}],r=[],l={props:n,state:a,api:r};export{l as d,o as g};
