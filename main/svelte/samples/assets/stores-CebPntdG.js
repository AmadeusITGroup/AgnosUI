import{a7 as V,G as l,a8 as k,a9 as g,aa as b,a0 as y,H as p,ab as O,ac as D}from"./AppCommon-BopSFvtR.js";const w=t=>({actions:t.actions,api:t.api,directives:t.directives,state$:t.state$,stores:t.stores}),m=Symbol(),A=()=>{},S=t=>t;function W(t){return function(e){g(()=>{var r;for(const[o,s]of Object.entries(e??{}))(r=t[`${o}$`])==null||r.set(s)})}}function j(t,e){if(t===e)return null;let r=!1;const o={},s=new Set([...Object.keys(t),...Object.keys(e)]);for(const n of s){const a=e[n];t[n]!==a&&(o[n]=a,r=!0)}return r?o:null}function $(t,e=y(void 0),r={},o=p(void 0)){const{normalizeValue:s=S,equal:n=Object.is}=r,a=()=>t,i=(c,u=a)=>{const f=c===void 0?void 0:s(c);return f===m?(console.error("Not using invalid value",c),u()):f===void 0?u():f},d=l(()=>i(e()),{equal:n}),h=l(()=>i(o(),d),{equal:n});return b(h,c=>{if(c!==void 0){const u=s(c);if(u===m){console.error("Not setting invalid value",c);return}c=u}o.set(c)})}const v=t=>!!(t&&typeof t=="function"&&"subscribe"in t),z=t=>v(t)?t:y(t),N=t=>v(t)?t:p(t),q=(t,e)=>{const r={};if(e){const o=v(e);for(const s of t)r[s]=o?l(()=>e()[s]):z(e[s])}return r},E=(t,e,r)=>{const o={};for(const s of t){const n=e==null?void 0:e[s],a=r==null?void 0:r[s];o[s]=n&&a?l(()=>n()??a()):n||a}return o},I=(t,e,r)=>{const o={},s=Object.keys(t),n=q(s,e==null?void 0:e.config),a=e==null?void 0:e.props;for(const i of s){const d=a==null?void 0:a[i];o[`${i}$`]=$(t[i],n[i],r==null?void 0:r[i],N(d))}return o},L=(t,e,r)=>{const o=I(t,e,r);return[o,W(o)]},R=t=>{const e=[],r=[],o={};for(const[s,n]of Object.entries(t))s.endsWith("$")&&(e.push(s.substring(0,s.length-1)),r.push(n),o[s]=V(n));return{stores:o,state$:l(()=>{const s=r.map(k),n={};return e.forEach((a,i)=>{n[a]=s[i]}),n})}},U=(t,e,r=s=>s[0],o=(s,n)=>n===s)=>{let s=e[0]();return b(O(e,{derive(n){const a=r(n),i=!o(n[0],a);return i&&e[0].set(a),(i||!o(s,a))&&(s=a,t()(a)),a},equal:o}),e[0].set.bind(e[0]))},_=(t,e,r=S,o=D)=>b(l(()=>r(t()),{equal:o}),s=>{const n=r(s);o(t(),n)||(t.set(n),e()(n))});export{m as I,A as a,z as b,U as c,_ as d,I as e,j as f,S as i,E as m,q as n,R as s,w as t,L as w};
