import{S,i as I,s as q,e as i,k as m,a as e,b as w,q as a,x as J,r as L,n as N,f as A,w as D,h as O}from"./AppCommon-barSFk3O.js";import{c as E,a as M}from"./focustrack-O72RGj6r.js";import"./directive-BsGHnt0-.js";import"./func-tK0QDe5R.js";function T(o){let t,r,s,n,b,v,l,c,p,f,F,h,C,u,k,H,y,x,g;return{c(){t=i("div"),r=i("div"),r.innerHTML='<h5>Container</h5> <input class="form-control" type="text" placeholder="Focusable input" id="focusableInput"/><br/> <input class="form-control" type="text" placeholder="Other focusable input" id="otherFocusableInput"/>',s=m(),n=i("input"),b=i("br"),v=m(),l=i("div"),c=i("input"),p=m(),f=i("label"),f.textContent="Focus in container",F=m(),h=i("label"),h.textContent="Active element history:",C=m(),u=i("textarea"),H=m(),y=i("button"),y.textContent="Clear",e(r,"class","my-2 p-2 border"),e(n,"class","form-control"),e(n,"type","text"),e(n,"placeholder","Disabled input"),e(n,"id","disabledInput"),n.disabled=!0,e(c,"class","form-check-input"),e(c,"type","checkbox"),e(c,"id","containerHasFocus"),c.checked=o[1],c.disabled=!0,e(f,"class","form-check-label"),e(f,"for","containerHasFocus"),e(l,"class","form-check mb-2"),e(h,"for","activeElementHistory"),e(h,"class","form-label"),e(u,"class","form-control mb-2"),e(u,"id","activeElementHistory"),u.readOnly=!0,u.value=k=JSON.stringify(o[0]),e(y,"class","btn btn-primary"),e(t,"class","demo-focustrack")},m(d,_){w(d,t,_),a(t,r),a(t,s),a(t,n),a(t,b),a(t,v),a(t,l),a(l,c),a(l,p),a(l,f),a(t,F),a(t,h),a(t,C),a(t,u),a(t,H),a(t,y),x||(g=[J(o[3].call(null,r)),L(y,"click",o[5])],x=!0)},p(d,[_]){_&2&&(c.checked=d[1]),_&1&&k!==(k=JSON.stringify(d[0]))&&(u.value=k)},i:N,o:N,d(d){d&&A(t),x=!1,D(g)}}}function j(o,t,r){let s,n;O(o,M,p=>r(4,s=p));const{hasFocus$:b,directive:v}=E();O(o,b,p=>r(1,n=p));let l=[];const c=()=>r(0,l=[]);return o.$$.update=()=>{o.$$.dirty&17&&r(0,l=[...l,{tagName:s==null?void 0:s.tagName.toLowerCase(),id:(s==null?void 0:s.id)||void 0}])},[l,n,b,v,s,c]}class P extends S{constructor(t){super(),I(this,t,j,T,q,{})}}export{P as default};
