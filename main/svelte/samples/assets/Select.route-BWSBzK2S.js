import{p as y,r as O,k as b,T as v,as as A,s as t,f as D,e as o,g as e,j as l,b as L,a as S,t as W,h as M,at as R,W as h,O as j,w as F}from"./AppCommon-BIOVedX1.js";import{a as P}from"./input-C2sSz9OV.js";import{S as U}from"./Select-BsaYOQCM.js";import{a as q}from"./config-OFHUKBGn.js";import"./shared-BbfWEFtN.js";import"./actions-7pTMrPq9.js";import"./class-DOHDOVt-.js";import"./Slot-DPwmoMlC.js";import"./snippet-C4nDYEhK.js";import"./floatingUI-BNnJq_Mq.js";import"./directive-CKEccryv-CY3XbVHQ.js";import"./promise-CY2U8bTP-BQtSrxrS.js";import"./focustrack-D10ErCaC.js";import"./navManager-pSmXmDe5.js";import"./extendWidget-B5qQLZwf.js";import"./config-BjT5ZD7O.js";import"./index-client-BPAxIsiR.js";var z=(n,a)=>l(a,void 0),B=W('<h2>Multiselect example</h2> <div class="mb-3"><label class="form-label">Multiselect</label> <!></div> <div class="demo-select-config"><strong>Default config</strong><br> <label>Default filterText: <input type="text" class="form-control"></label> <br> <button type="button" class="mt-3 btn btn-outline-secondary">Reset widget filterText</button></div>',1);function it(n,a){y(a,!0);const _=O(),c=()=>F(p,"$widgetsConfig$",_),m=["Action 1","Action 2","Action 3","Other 1","Other 2","Other 3"],p=q(),f=location.hash.split("?")[1],x=new URL(f?`?${f}`:"",location.href);let i=b(v(x.searchParams.get("filterText")??""));A(()=>{R(p,h(c).select={filterText:e(i)},h(c))});let r=b(void 0),T=j(()=>e(r)?m.filter(s=>s.toLowerCase().startsWith(e(r)??"")):m.slice(0,10));var u=B(),d=t(D(u),2),$=t(o(d),2);U($,{get items(){return e(T)},get filterText(){return e(r)},set filterText(s){l(r,v(s))}});var w=t(d,2),g=t(o(w),3),k=t(o(g)),C=t(g,4);C.__click=[z,r],P(k,()=>e(i),s=>l(i,s)),L(n,u),S()}M(["click"]);export{it as default};
