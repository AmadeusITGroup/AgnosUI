import{p as U,j as V,R as E,T as z,U as B,P as G,d as v,b as p,a as J,h as K,t as m,s,e as M,g as r,k as a,c as W,Q as X,f as Y,n as w,l as Z,V as $,q as tt}from"./AppCommon-Dz1zQcvR.js";import{a as N}from"./actions-Od-FsxF7.js";import{f as C}from"./index-client-g0OiGhvS.js";import{c as at,a as et}from"./focustrack-DClTjo7e.js";import{c as st}from"./directive-CKEccryv-BvpnSiJ9.js";var rt=(f,i)=>K(i,E([])),ct=m("with id <strong> </strong>",1),ot=m("<li><strong> </strong> <!></li>"),it=m('<div class="demo-focustrack"><div><h5>Container</h5> <input class="form-control" type="text" placeholder="Focusable input" id="focusableInput"><br> <input class="form-control" type="text" placeholder="Other focusable input" id="otherFocusableInput"></div> <input class="form-control" type="text" placeholder="Disabled input" id="disabledInput" disabled><br> <div class="form-check mb-2"><input class="form-check-input" type="checkbox" id="containerHasFocus" disabled> <label class="form-check-label" for="containerHasFocus">Focus in container</label></div> <div class="d-flex justify-content-between"><div>Active element history:</div> <button class="btn btn-sm btn-primary">Clear</button></div> <div class="card my-2"><div class="card-body"><ul class="mb-0"></ul></div></div></div>');function pt(f,i){U(i,!0);const{hasFocus$:H,directive:l}=at(),I=C(H),n=C(et);let d=V(E([]));z(()=>{n.current,B(()=>{var t,e;return r(d).push({tagName:(t=n.current)==null?void 0:t.tagName.toLowerCase(),id:((e=n.current)==null?void 0:e.id)||void 0})})});var b=it(),c=a(b);const j=tt(()=>({}));let h;N(c,t=>l==null?void 0:l(t)),N(c,(t,e)=>{var o;return(o=st)==null?void 0:o(t,e)},()=>"my-2 p-2 border");var _=s(c,5),D=a(_),g=s(_,2),q=s(a(g),2);q.__click=[rt,d];var A=s(g,2),L=a(A),O=a(L);G(O,21,()=>r(d),X,(t,e)=>{let o=()=>r(e).tagName,k=()=>r(e).id;var x=ot(),y=a(x),P=a(y),Q=s(y,2);{var R=u=>{var F=ct(),S=s(Y(F)),T=a(S);v(()=>w(T,k())),p(u,F)};W(Q,u=>{k()&&u(R)})}v(()=>w(P,o())),p(t,x)}),v(()=>{h=Z(c,h,{...r(j)}),$(D,I.current)}),p(f,b),J()}M(["click"]);export{pt as default};
