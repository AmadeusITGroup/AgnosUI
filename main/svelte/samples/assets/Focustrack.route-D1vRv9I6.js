import{p as x,s as $,W as g,X as f,o as H,k as d,e as o,b as r,c as C,a as I,n as N,t as D,h as p,j as O,q as j,Y as q,Z as w,d as A}from"./AppCommon-CRrVgjjK.js";import{a as b}from"./actions-DMIFV9qL.js";import{c as J,a as L}from"./focustrack-XdHrgh6L.js";import{c as M}from"./directive-CKEccryv-CZ-m_LIt.js";var S=(c,t)=>N(t,f([])),W=D('<div class="demo-focustrack"><div><h5>Container</h5> <input class="form-control" type="text" placeholder="Focusable input" id="focusableInput"><br> <input class="form-control" type="text" placeholder="Other focusable input" id="otherFocusableInput"></div> <input class="form-control" type="text" placeholder="Disabled input" id="disabledInput" disabled><br> <div class="form-check mb-2"><input class="form-check-input" type="checkbox" id="containerHasFocus" disabled> <label class="form-check-label" for="containerHasFocus">Focus in container</label></div> <label for="activeElementHistory" class="form-label">Active element history:</label> <textarea class="form-control mb-2" id="activeElementHistory" readonly=""></textarea> <button class="btn btn-primary">Clear</button></div>');function B(c,t){x(t,!0);const m=$(),h=()=>A(v,"$hasFocus$",m),{hasFocus$:v,directive:_}=J();let e=g(f([]));H(()=>L.subscribe(s=>{d(e).push({tagName:s==null?void 0:s.tagName.toLowerCase(),id:(s==null?void 0:s.id)||void 0})}));var i=W(),a=p(i);let l;o(()=>l=j(a,l,{}));var n=r(a,5),y=p(n),u=r(n,4);o(()=>q(u,JSON.stringify(d(e))));var k=r(u,2);k.__click=[S,e],o(()=>w(y,h())),b(a,s=>_(s)),b(a,(s,F)=>M(s,F),()=>"my-2 p-2 border"),C(c,i),I()}O(["click"]);export{B as default};
