import{p as y,u as A,k as b,R as v,aq as D,s as t,f as L,e as o,g as e,j as l,b as O,a as R,t as S,h as q,ar as M,U as h,q as U,x as W}from"./AppCommon-DpjxpKbi.js";import{a as j}from"./input-C-lKqKSI.js";import{S as F}from"./Select-cIYGAgiU.js";import{a as P}from"./config-BJ3FVXXn.js";import"./actions-hEUS7_0h.js";import"./class-BAnC4OqB.js";import"./Slot-nk-rByji.js";import"./snippet-NpXm27Vp.js";import"./floatingUI-_Pdmo5Xd.js";import"./directive-CKEccryv-ocPWyJ_x.js";import"./promise-CY2U8bTP-agqFGMia.js";import"./focustrack-DqgPXXtR.js";import"./navManager-Cu7rjwdL.js";import"./extendWidget-C6WMN4LK.js";import"./config-BVsBkNcU.js";import"./index-client-pTWJ3zsz.js";var z=(n,a)=>l(a,void 0),B=S('<h2>Multiselect example</h2> <div class="mb-3"><label class="form-label">Multiselect</label> <!></div> <div class="demo-select-config"><strong>Default config</strong><br> <label>Default filterText: <input type="text" class="form-control"></label> <br> <button type="button" class="mt-3 btn btn-outline-secondary">Reset widget filterText</button></div>',1);function at(n,a){y(a,!0);const x=A(),c=()=>W(m,"$widgetsConfig$",x),f=["Action 1","Action 2","Action 3","Other 1","Other 2","Other 3"],m=P(),p=location.hash.split("?")[1],_=new URL(p?`?${p}`:"",location.href);let i=b(v(_.searchParams.get("filterText")??""));D(()=>{M(m,h(c).select={filterText:e(i)},h(c))});let r=b(void 0),T=U(()=>e(r)?f.filter(s=>s.toLowerCase().startsWith(e(r)??"")):f.slice(0,10));var u=B(),d=t(L(u),2),$=t(o(d),2);F($,{get items(){return e(T)},get filterText(){return e(r)},set filterText(s){l(r,v(s))}});var w=t(d,2),g=t(o(w),3),k=t(o(g)),C=t(g,4);C.__click=[z,r],j(k,()=>e(i),s=>l(i,s)),O(n,u),R()}q(["click"]);export{at as default};
