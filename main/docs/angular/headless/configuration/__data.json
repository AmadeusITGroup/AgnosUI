{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,16,30,64],{"title":4,"submenu":5},"Getting started",[6,10,13],{"label":7,"status":8,"path":9,"subpath":8},"Introduction","","docs/angular/getting-started/introduction",{"label":11,"status":8,"path":12,"subpath":8},"Features","docs/angular/getting-started/features",{"label":14,"status":8,"path":15,"subpath":8},"Installation","docs/angular/getting-started/installation",{"title":17,"submenu":18},"Headless",[19,21,24,27],{"label":7,"status":8,"path":20,"subpath":8},"docs/angular/headless/introduction",{"label":22,"status":8,"path":23,"subpath":8},"Configuration","docs/angular/headless/configuration",{"label":25,"status":8,"path":26,"subpath":8},"Slots","docs/angular/headless/slots",{"label":28,"status":8,"path":29,"subpath":8},"Directives","docs/angular/headless/directives",{"title":31,"submenu":32},"Components",[33,38,41,44,48,51,54,58,61],{"label":34,"status":35,"path":36,"subpath":37},"Accordion","stable","docs/angular/components/accordion/","examples",{"label":39,"status":35,"path":40,"subpath":37},"Alert","docs/angular/components/alert/",{"label":42,"status":35,"path":43,"subpath":37},"Modal","docs/angular/components/modal/",{"label":45,"status":46,"path":47,"subpath":37},"Pagination","beta","docs/angular/components/pagination/",{"label":49,"status":35,"path":50,"subpath":37},"Progressbar","docs/angular/components/progressbar/",{"label":52,"status":35,"path":53,"subpath":37},"Rating","docs/angular/components/rating/",{"label":55,"status":56,"path":57,"subpath":37},"Select","inprogress","docs/angular/components/select/",{"label":59,"status":35,"path":60,"subpath":37},"Slider","docs/angular/components/slider/",{"label":62,"status":46,"path":63,"subpath":37},"Toast","docs/angular/components/toast/",{"title":65,"submenu":66},"Services",[67,69,72],{"label":7,"status":8,"path":68,"subpath":8},"docs/angular/services/introduction",{"label":70,"status":8,"path":71,"subpath":8},"Focustrack","docs/angular/services/focustrack",{"label":73,"status":8,"path":74,"subpath":8},"Floating UI","docs/angular/services/floating-ui"],"uses":{"params":["framework"]}},{"type":"data","data":[{"content":1,"prev":2,"next":7,"slug":11},"# Configuration\n\n## Overview\n\nWe call **Configuration** the AgnosUI system to set the default state of widgets deeply in the application tree.  \nThis is usually referred as **context injection** and is handy to configure a part of a web application, without having to pass properties down the chain.\n\nYou can check how each framework handles this need on their respective documentation:\n\n\u003Cul>\n    \u003Cli>\u003Ca href=\"https://svelte.dev/docs/svelte#setcontext\" target=\"_blank\">setContext in Svelte\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca href=\"https://react.dev/learn/passing-data-deeply-with-context\" target=\"_blank\">passing data deeply in React\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca href=\"https://angular.io/guide/creating-injectable-service\" target=\"_blank\">context injection in Angular\u003C/a>\u003C/li>\n\u003C/ul>\n\nThe configuration is available out of the box as soon as widgets are created using the AgnosUI headless factories.  \nThe headless packages also provide utilities for each framework to retrieve and update widget configuration.\n\n## In Action\n\nOne of the most use cases of configuration is setting a default config for multiple sibling widgets.  \nLet's see it in action, using the Bootstrap flavour of the **Alert** component:\n\n```sample\n{Configuration:configuration/basic:278}\n```\n\nThe Configuration is then used by all children with the modified state, as shown below:\n\n```sample\n{Configuration:configuration/down:278}\n```\n",{"slug":3,"mdpath":4,"title":5,"name":5,"subpath":6,"status":6},"headless/introduction","../docs/01-Headless/00-Introduction.md","Introduction","",{"slug":8,"mdpath":9,"title":10,"name":10,"subpath":6,"status":6},"headless/slots","../docs/01-Headless/02-Slots.md","Slots","headless/configuration"],"uses":{"params":["slug","framework"]}}]}
