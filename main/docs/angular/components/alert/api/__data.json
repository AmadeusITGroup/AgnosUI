{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,90,132],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/angular/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/angular/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/angular/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/angular/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/angular/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/angular/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/angular/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/angular/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82,86],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/angular/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/angular/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/angular/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/angular/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/angular/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/angular/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/angular/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/angular/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/angular/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/angular/daisyUI/toast/","daisyUI/toast/",{"label":87,"status":59,"path":88,"subpath":51,"slug":89},"Tree","docs/angular/daisyUI/tree/","daisyUI/tree/",{"title":91,"submenu":92},"Bootstrap Components",[93,96,100,103,106,109,112,115,118,123,126,129],{"label":7,"status":8,"path":94,"subpath":-1,"slug":95},"docs/angular/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":97,"subpath":98,"slug":99},"docs/angular/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":101,"subpath":98,"slug":102},"docs/angular/components/alert/","components/alert/",{"label":58,"status":59,"path":104,"subpath":98,"slug":105},"docs/angular/components/collapse/","components/collapse/",{"label":63,"status":49,"path":107,"subpath":98,"slug":108},"docs/angular/components/modal/","components/modal/",{"label":67,"status":49,"path":110,"subpath":98,"slug":111},"docs/angular/components/pagination/","components/pagination/",{"label":71,"status":49,"path":113,"subpath":98,"slug":114},"docs/angular/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":116,"subpath":98,"slug":117},"docs/angular/components/rating/","components/rating/",{"label":119,"status":120,"path":121,"subpath":98,"slug":122},"Select","inprogress","docs/angular/components/select/","components/select/",{"label":79,"status":49,"path":124,"subpath":98,"slug":125},"docs/angular/components/slider/","components/slider/",{"label":83,"status":49,"path":127,"subpath":98,"slug":128},"docs/angular/components/toast/","components/toast/",{"label":87,"status":59,"path":130,"subpath":98,"slug":131},"docs/angular/components/tree/","components/tree/",{"title":133,"submenu":134},"Services",[135,138,142,146,150,154,158],{"label":7,"status":8,"path":136,"subpath":-1,"slug":137},"docs/angular/services/introduction","services/introduction",{"label":139,"status":8,"path":140,"subpath":-1,"slug":141},"Focustrack","docs/angular/services/focustrack","services/focustrack",{"label":143,"status":8,"path":144,"subpath":-1,"slug":145},"Floating UI","docs/angular/services/floating-ui","services/floating-ui",{"label":147,"status":8,"path":148,"subpath":-1,"slug":149},"Match Media","docs/angular/services/match-media","services/match-media",{"label":151,"status":8,"path":152,"subpath":-1,"slug":153},"Navigation Manager","docs/angular/services/navigation-manager","services/navigation-manager",{"label":155,"status":8,"path":156,"subpath":-1,"slug":157},"Resize Observer","docs/angular/services/resize-observer","services/resize-observer",{"label":159,"status":8,"path":160,"subpath":-1,"slug":161},"Transition","docs/angular/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Alert","stable","v0.1.1","bootstrap",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/alert/examples",{"title":11,"key":12,"path":13},"Api","api","/components/alert/api",{"title":15,"slug":16,"subpath":8},"Accordion","components/accordion/",{"title":18,"slug":19,"subpath":8},"Collapse","components/collapse/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":39,"import":40},"alert",[3,6,9,12,15,18,21,24,27,30,33,36],{"source":4,"name":5},"## interface_AlertApi\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:214\n\nRepresents the API for an alert component.\n\n### Methods\n\n#### close\n\n> **close**(): `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:219\n\nTriggers alert closing programmatically (same as clicking on the close button (×)).\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:225\n\nTriggers the alert to be displayed for the user.\n\n##### Returns\n\n`void`\n","AlertApi",{"source":7,"name":8},"## class_AlertBodyDirective\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:15](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L15)\n\nDirective to be used as a structural directive for the body of an alert component.\n\nThis directive allows the use of a template reference for the alert body content, with type [AlertContext](#alertcontext).\n","AlertBodyDirective",{"source":10,"name":11},"## class_AlertComponent\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:82](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L82)\n\nAlertComponent is a UI component that extends BaseWidgetDirective to provide\nan alert box with various customizable properties and behaviors.\n\n### Remarks\n\nThis component is designed to be used with Bootstrap styles and supports\nvarious Bootstrap contextual classes for different alert types.\n\n### Properties\n\n#### animated\n\n> `readonly` **animated**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:132](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L132)\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> `readonly` **animatedOnInit**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:122](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L122)\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> `readonly` **ariaCloseButtonLabel**: `InputSignal`\\\u003C`undefined` \\| `string`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:139](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L139)\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> `readonly` **children**: `InputSignal`\\\u003C[`SlotContent`](../../../../api/angular/bootstrap/components/alert/../../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:144](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L144)\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> `readonly` **className**: `InputSignal`\\\u003C`undefined` \\| `string`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:188](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L188)\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> `readonly` **dismissible**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:96](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L96)\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> `readonly` **hidden**: `OutputEmitterRef`\\\u003C`void`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:171](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L171)\n\nCallback called when the alert is hidden.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### shown\n\n> `readonly` **shown**: `OutputEmitterRef`\\\u003C`void`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:181](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L181)\n\nCallback called when the alert is shown.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> `readonly` **structure**: `InputSignal`\\\u003C[`SlotContent`](../../../../api/angular/bootstrap/components/alert/../../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:150](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L150)\n\nGlobal template for the alert component\n\n***\n\n#### transition\n\n> `readonly` **transition**: `InputSignal`\\\u003C`undefined` \\| [`TransitionFn`](../../../../api/angular/bootstrap/components/alert/../../services/transitions/baseTransitions#transitionfn)\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:105](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L105)\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### type\n\n> `readonly` **type**: `InputSignal`\\\u003C`undefined` \\| [`BSContextualClass`](../../../../api/angular/bootstrap/components/alert/../../types#bscontextualclass)\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L88)\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> `readonly` **visible**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:112](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L112)\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n\n***\n\n#### visibleChange\n\n> `readonly` **visibleChange**: `OutputEmitterRef`\\\u003C`boolean`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:161](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L161)\n\nCallback called when the alert visibility changed.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n### Accessors\n\n#### api\n\n##### Get Signature\n\n> **get** **api**(): `W`\\[`\"api\"`\\]\n\nDefined in: [angular/headless/src/utils/widget.ts:140](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/headless/src/utils/widget.ts#L140)\n\nRetrieves the widget api\n\n###### Returns\n\n`W`\\[`\"api\"`\\]\n\nthe widget api\n\n***\n\n#### directives\n\n##### Get Signature\n\n> **get** **directives**(): `W`\\[`\"directives\"`\\]\n\nDefined in: [angular/headless/src/utils/widget.ts:156](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/headless/src/utils/widget.ts#L156)\n\nRetrieves the widget directives\n\n###### Returns\n\n`W`\\[`\"directives\"`\\]\n\nthe widget directives\n\n***\n\n#### state\n\n##### Get Signature\n\n> **get** **state**(): [`AngularState`](../../../../api/angular/bootstrap/components/alert/../../types#angularstate)\\\u003C`W`\\>\n\nDefined in: [angular/headless/src/utils/widget.ts:148](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/headless/src/utils/widget.ts#L148)\n\nRetrieves the widget state. Each property of the state is exposed through an Angular [Signal](https://angular.dev/api/core/Signal)\n\n###### Returns\n\n[`AngularState`](../../../../api/angular/bootstrap/components/alert/../../types#angularstate)\\\u003C`W`\\>\n\nthe widget state\n","AlertComponent",{"source":13,"name":14},"## interface_AlertContext\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:19\n\nRepresents the context for an Alert component.\n\n### Properties\n\n#### api\n\n> **api**: [`AlertApi`](#alertapi)\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`AlertDirectives`](#alertdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`AngularState`](../../../../api/angular/bootstrap/components/alert/../../types#angularstate)\\\u003C[`AlertWidget`](#alertwidget)\\>\n\nDefined in: [angular/headless/src/types.ts:119](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/headless/src/types.ts#L119)\n\nThe state of the widget. Each property of the state is exposed through an Angular [Signal](https://angular.dev/api/core/Signal)\n","AlertContext",{"source":16,"name":17},"## constant_alertDefaultSlotStructure\n> `const` **alertDefaultSlotStructure**: [`SlotContent`](../../../../api/angular/bootstrap/components/alert/../../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:54](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L54)\n\nRepresents the default slot structure for the alert component.\n","alertDefaultSlotStructure",{"source":19,"name":20},"## interface_AlertDirectives\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:231\n\nRepresents the directives for an alert component.\n\n### Properties\n\n#### transitionDirective\n\n> **transitionDirective**: [`Directive`](../../../../api/angular/bootstrap/components/alert/../../types#directive)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:236\n\nthe transition directive, piloting what is the visual effect of going from hidden to visible\n","AlertDirectives",{"source":22,"name":23},"## interface_AlertProps\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:82\n\nRepresents the properties for the Alert component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:144\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:134\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:167\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/angular/bootstrap/components/alert/../../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:184\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:174\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:152\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:112\n\nCallback called when the alert is hidden.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:123\n\nCallback called when the alert is shown.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:101\n\nCallback called when the alert visibility changed.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/angular/bootstrap/components/alert/../../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:179\n\nGlobal template for the alert component\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](../../../../api/angular/bootstrap/components/alert/../../services/transitions/baseTransitions#transitionfn)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:91\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### type\n\n> **type**: [`BSContextualClass`](../../../../api/angular/bootstrap/components/alert/../../types#bscontextualclass)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:191\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:159\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertProps",{"source":25,"name":26},"## interface_AlertState\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:24\n\nRepresents the state of an alert component.\n\n### Properties\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:52\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/angular/bootstrap/components/alert/../../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:69\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:59\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:37\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:29\n\nIs `true` when the alert is hidden. Compared to `visible`, this is updated after the transition is executed.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/angular/bootstrap/components/alert/../../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:64\n\nGlobal template for the alert component\n\n***\n\n#### type\n\n> **type**: [`BSContextualClass`](../../../../api/angular/bootstrap/components/alert/../../types#bscontextualclass)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:76\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:44\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertState",{"source":28,"name":29},"## class_AlertStructureDirective\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:28](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/angular/bootstrap/src/components/alert/alert.component.ts#L28)\n\nDirective to define the structure of an alert component.\n\nThis directive uses a `TemplateRef` to inject the template reference of the [AlertContext](#alertcontext).\n","AlertStructureDirective",{"source":31,"name":32},"## type alias_AlertWidget\n> **AlertWidget**: [`Widget`](../../../../api/angular/bootstrap/components/alert/../../types#widget)\\\u003C[`AlertProps`](#alertprops), [`AlertState`](#alertstate), [`AlertApi`](#alertapi), [`AlertDirectives`](#alertdirectives)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:199\n\nRepresents an alert widget component.\n","AlertWidget",{"source":34,"name":35},"## function_createAlert\n> **createAlert**(`props`?): [`AlertWidget`](#alertwidget)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:208\n\nCreate an AlertWidget with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../../../../api/angular/bootstrap/components/alert/../../types#propsconfig)\\\u003C[`AlertProps`](#alertprops)\\>\n\n### Returns\n\n[`AlertWidget`](#alertwidget)\n\nan AlertWidget\n","createAlert",{"source":37,"name":38},"## function_getAlertDefaultConfig\n> **getAlertDefaultConfig**(): [`AlertProps`](#alertprops)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:11\n\nRetrieve a shallow copy of the default Alert config\n\n### Returns\n\n[`AlertProps`](#alertprops)\n\nthe default Alert config\n","getAlertDefaultConfig","Alert","@agnos-ui/angular-bootstrap"],"uses":{"params":["framework","component"]}}]}
