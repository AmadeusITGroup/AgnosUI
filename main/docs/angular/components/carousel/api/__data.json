{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,95,139],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/angular/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/angular/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/angular/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/angular/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/angular/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/angular/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/angular/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/angular/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,67,71,75,79,83,87,91],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/angular/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/angular/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/angular/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Carousel","inprogress","docs/angular/daisyUI/carousel/","daisyUI/carousel/",{"label":63,"status":64,"path":65,"subpath":51,"slug":66},"Collapse","beta","docs/angular/daisyUI/collapse/","daisyUI/collapse/",{"label":68,"status":49,"path":69,"subpath":51,"slug":70},"Modal","docs/angular/daisyUI/modal/","daisyUI/modal/",{"label":72,"status":49,"path":73,"subpath":51,"slug":74},"Pagination","docs/angular/daisyUI/pagination/","daisyUI/pagination/",{"label":76,"status":49,"path":77,"subpath":51,"slug":78},"Progressbar","docs/angular/daisyUI/progressbar/","daisyUI/progressbar/",{"label":80,"status":49,"path":81,"subpath":51,"slug":82},"Rating","docs/angular/daisyUI/rating/","daisyUI/rating/",{"label":84,"status":49,"path":85,"subpath":51,"slug":86},"Slider","docs/angular/daisyUI/slider/","daisyUI/slider/",{"label":88,"status":49,"path":89,"subpath":51,"slug":90},"Toast","docs/angular/daisyUI/toast/","daisyUI/toast/",{"label":92,"status":64,"path":93,"subpath":51,"slug":94},"Tree","docs/angular/daisyUI/tree/","daisyUI/tree/",{"title":96,"submenu":97},"Bootstrap Components",[98,101,105,108,111,114,117,120,123,126,130,133,136],{"label":7,"status":8,"path":99,"subpath":-1,"slug":100},"docs/angular/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":102,"subpath":103,"slug":104},"docs/angular/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":106,"subpath":103,"slug":107},"docs/angular/components/alert/","components/alert/",{"label":58,"status":59,"path":109,"subpath":103,"slug":110},"docs/angular/components/carousel/","components/carousel/",{"label":63,"status":64,"path":112,"subpath":103,"slug":113},"docs/angular/components/collapse/","components/collapse/",{"label":68,"status":49,"path":115,"subpath":103,"slug":116},"docs/angular/components/modal/","components/modal/",{"label":72,"status":49,"path":118,"subpath":103,"slug":119},"docs/angular/components/pagination/","components/pagination/",{"label":76,"status":49,"path":121,"subpath":103,"slug":122},"docs/angular/components/progressbar/","components/progressbar/",{"label":80,"status":49,"path":124,"subpath":103,"slug":125},"docs/angular/components/rating/","components/rating/",{"label":127,"status":59,"path":128,"subpath":103,"slug":129},"Select","docs/angular/components/select/","components/select/",{"label":84,"status":49,"path":131,"subpath":103,"slug":132},"docs/angular/components/slider/","components/slider/",{"label":88,"status":49,"path":134,"subpath":103,"slug":135},"docs/angular/components/toast/","components/toast/",{"label":92,"status":64,"path":137,"subpath":103,"slug":138},"docs/angular/components/tree/","components/tree/",{"title":140,"submenu":141},"Services",[142,145,149,153,157,161,165],{"label":7,"status":8,"path":143,"subpath":-1,"slug":144},"docs/angular/services/introduction","services/introduction",{"label":146,"status":8,"path":147,"subpath":-1,"slug":148},"Focustrack","docs/angular/services/focustrack","services/focustrack",{"label":150,"status":8,"path":151,"subpath":-1,"slug":152},"Floating UI","docs/angular/services/floating-ui","services/floating-ui",{"label":154,"status":8,"path":155,"subpath":-1,"slug":156},"Match Media","docs/angular/services/match-media","services/match-media",{"label":158,"status":8,"path":159,"subpath":-1,"slug":160},"Navigation Manager","docs/angular/services/navigation-manager","services/navigation-manager",{"label":162,"status":8,"path":163,"subpath":-1,"slug":164},"Resize Observer","docs/angular/services/resize-observer","services/resize-observer",{"label":166,"status":8,"path":167,"subpath":-1,"slug":168},"Transition","docs/angular/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Carousel","inprogress","v0.8.0","bootstrap",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/carousel/examples",{"title":11,"key":12,"path":13},"Api","api","/components/carousel/api",{"title":15,"slug":16,"subpath":8},"Alert","components/alert/",{"title":18,"slug":19,"subpath":8},"Collapse","components/collapse/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":48,"import":49},"carousel",[3,6,9,12,15,18,21,24,27,30,33,36,39,42,45],{"source":4,"name":5},"## interface_CarouselApi\n\nRepresents the API for a carousel component.\n\n### Properties\n\n#### emblaApi\n\n> **emblaApi**: () => `undefined` \\| [`EmblaCarouselType`](https://www.embla-carousel.com/api/)\n\n\nRetrieve the inner EmblaApi object\n\n##### Returns\n\n`undefined` \\| [`EmblaCarouselType`](https://www.embla-carousel.com/api/)\n\n***\n\n#### plugins\n\n> **plugins**: () => `undefined` \\| [`EmblaPluginsType`](https://www.embla-carousel.com/plugins/)\n\n\nRetrieve the enabled plugins\n\n##### Returns\n\n`undefined` \\| [`EmblaPluginsType`](https://www.embla-carousel.com/plugins/)\n\n***\n\n#### scrollNext\n\n> **scrollNext**: (`jump`?) => `void`\n\n\nScroll to the next snap point if possible.\n\n##### Parameters\n\n###### jump?\n\n`boolean`\n\nscroll instantly\n\n##### Returns\n\n`void`\n\n***\n\n#### scrollPrev\n\n> **scrollPrev**: (`jump`?) => `void`\n\n\nScroll to the previous snap point if possible.\n\n##### Parameters\n\n###### jump?\n\n`boolean`\n\nscroll instantly\n\n##### Returns\n\n`void`\n\n***\n\n#### scrollTo\n\n> **scrollTo**: (`index`, `jump`?) => `void`\n\n\nScroll to a snap point by index\n\n##### Parameters\n\n###### index\n\n`number`\n\nthe snap point index\n\n###### jump?\n\n`boolean`\n\nscroll instantly\n\n##### Returns\n\n`void`\n","CarouselApi",{"source":7,"name":8},"## class_CarouselComponent\n\nCarouselComponent is an Angular Component that extends [BaseWidgetDirective](../../../../api/angular/bootstrap/components/carousel/../../utils/widget#basewidgetdirective)\u003C[CarouselWidget](#carouselwidget)>\nto create a customizable carousel widget. It provides various inputs (see [CarouselProps](#carouselprops))\nto configure the appearance and behavior of the carousel.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\n### Properties\n\n#### align\n\n> `readonly` **align**: `InputSignal`\\\u003C`undefined` \\| `\"start\"` \\| `\"end\"` \\| `\"center\"`\\>\n\n\nAlign the slides relative to the carousel viewport\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#align](https://www.embla-carousel.com/api/options/#align)\n\n##### Default Value\n\n`'center'`\n\n***\n\n#### ariaIndicatorLabel\n\n> `readonly` **ariaIndicatorLabel**: `InputSignal`\\\u003C`undefined` \\| (`index`) => `string`\\>\n\n\nAria label for navigation indicators\n\n***\n\n#### ariaNextLabel\n\n> `readonly` **ariaNextLabel**: `InputSignal`\\\u003C`undefined` \\| `string`\\>\n\n\nAria label for next button\n\n***\n\n#### ariaPrevLabel\n\n> `readonly` **ariaPrevLabel**: `InputSignal`\\\u003C`undefined` \\| `string`\\>\n\n\nAria label for previous button\n\n***\n\n#### container\n\n> `readonly` **container**: `InputSignal`\\\u003C`undefined` \\| `null` \\| `string`\\>\n\n\nEnables choosing a custom container element which holds the slides. By default, Embla will choose the first direct child element of the root element. Provide a valid CSS selector string.\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#container](https://www.embla-carousel.com/api/options/#container)\n\n***\n\n#### containScroll\n\n> `readonly` **containScroll**: `InputSignal`\\\u003C`undefined` \\| `false` \\| `\"trimSnaps\"` \\| `\"keepSnaps\"`\\>\n\n\nClear leading and trailing empty space that causes excessive scrolling\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#containScroll](https://www.embla-carousel.com/api/options/#containScroll)\n\n##### Default Value\n\n`'trimSnaps'`\n\n***\n\n#### direction\n\n> `readonly` **direction**: `InputSignal`\\\u003C`undefined` \\| `\"ltr\"` \\| `\"rtl\"`\\>\n\n\nChoose content direction between `ltr` and `rtl`\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#direction](https://www.embla-carousel.com/api/options/#direction)\n\n##### Default Value\n\n`'ltr'`\n\n***\n\n#### dragFree\n\n> `readonly` **dragFree**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\n\nEnables momentum scrolling\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#dragFree](https://www.embla-carousel.com/api/options/#dragFree)\n\n##### Default Value\n\n`false`\n\n***\n\n#### dragThreshold\n\n> `readonly` **dragThreshold**: `InputSignalWithTransform`\\\u003C`undefined` \\| `number`, `unknown`\\>\n\n\nDrag threshold in pixels\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#dragThreshold](https://www.embla-carousel.com/api/options/#dragThreshold)\n\n##### Default Value\n\n`10`\n\n***\n\n#### duration\n\n> `readonly` **duration**: `InputSignalWithTransform`\\\u003C`undefined` \\| `number`, `unknown`\\>\n\n\nSet scroll duration when triggered by any of the API methods\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#duration](https://www.embla-carousel.com/api/options/#duration)\n\n##### Default Value\n\n`25`\n\n***\n\n#### loop\n\n> `readonly` **loop**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\n\nEnables infinite looping\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#loop](https://www.embla-carousel.com/api/options/#loop)\n\n##### Default Value\n\n`false`\n\n***\n\n#### navigation\n\n> `readonly` **navigation**: `InputSignal`\\\u003C[`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\\>\n\n\nThe navigation layer of the carousel.\n\n***\n\n#### plugins\n\n> `readonly` **plugins**: `InputSignal`\\\u003C`undefined` \\| `CreatePluginType`\\\u003C`LoosePluginType`, \\{\\}\\>[]\\>\n\n\nPlugins to extend the carousel with additional features\n\n##### Default Value\n\n`[]`\n\n***\n\n#### showNavigationArrows\n\n> `readonly` **showNavigationArrows**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\n\nIf `true`, 'previous' and 'next' navigation arrows will be visible.\n\n***\n\n#### showNavigationIndicators\n\n> `readonly` **showNavigationIndicators**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\n\nIf `true`, navigation indicators at the bottom of the slide will be visible.\n\n***\n\n#### skipSnaps\n\n> `readonly` **skipSnaps**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\n\nAllow the carousel to skip scroll snaps if it's dragged vigorously\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#skipsnaps](https://www.embla-carousel.com/api/options/#skipsnaps)\n\n##### Default Value\n\n`false`\n\n***\n\n#### slide\n\n> `readonly` **slide**: `InputSignal`\\\u003C[`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselSlideContext`](#carouselslidecontext)\\\u003C`SlideData`\\>\\>\\>\n\n\nThe content of each slide in the carousel.\n\n***\n\n#### slidesData\n\n> `readonly` **slidesData**: `InputSignal`\\\u003C`undefined` \\| `SlideData`[]\\>\n\n\nThe data for each slide in the carousel.\n\n***\n\n#### structure\n\n> `readonly` **structure**: `InputSignal`\\\u003C[`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\\>\n\n\nThe structure of the carousel.\n\n### Accessors\n\n#### api\n\n##### Get Signature\n\n> **get** **api**(): `W`\\[`\"api\"`\\]\n\n\nRetrieves the widget api\n\n###### Returns\n\n`W`\\[`\"api\"`\\]\n\nthe widget api\n\n***\n\n#### directives\n\n##### Get Signature\n\n> **get** **directives**(): `W`\\[`\"directives\"`\\]\n\n\nRetrieves the widget directives\n\n###### Returns\n\n`W`\\[`\"directives\"`\\]\n\nthe widget directives\n\n***\n\n#### state\n\n##### Get Signature\n\n> **get** **state**(): [`AngularState`](../../../../api/angular/bootstrap/components/carousel/../../types#angularstate)\\\u003C`W`\\>\n\n\nRetrieves the widget state. Each property of the state is exposed through an Angular [Signal](https://angular.dev/api/core/Signal)\n\n###### Returns\n\n[`AngularState`](../../../../api/angular/bootstrap/components/carousel/../../types#angularstate)\\\u003C`W`\\>\n\nthe widget state\n","CarouselComponent",{"source":10,"name":11},"## type alias_CarouselContext\n> **CarouselContext**\\\u003C`SlideData`\\> = [`WidgetSlotContext`](../../../../api/angular/bootstrap/components/carousel/../../types#widgetslotcontext)\\\u003C[`CarouselWidget`](#carouselwidget)\\\u003C`SlideData`\\>\\>\n\n\nRepresents the context for a carousel.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n","CarouselContext",{"source":13,"name":14},"## constant_carouselDefaultSlotNavigation\n> `const` **carouselDefaultSlotNavigation**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`any`\\>\\>\n\n\nThe default slot for the navigation\n","carouselDefaultSlotNavigation",{"source":16,"name":17},"## constant_carouselDefaultSlotStructure\n> `const` **carouselDefaultSlotStructure**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`any`\\>\\>\n\n\nThe default slot for the structure\n","carouselDefaultSlotStructure",{"source":19,"name":20},"## interface_CarouselDirectives\n\nRepresents the directives for a carousel component.\n\n### Properties\n\n#### root\n\n> **root**: [`Directive`](../../../../api/angular/bootstrap/components/carousel/../../types#directive)\n\n\nthe root directive\n\n***\n\n#### scrollNext\n\n> **scrollNext**: [`Directive`](../../../../api/angular/bootstrap/components/carousel/../../types#directive)\n\n\nA directive to be applied to a navigation button allowing to scroll to the next slide.\n\n***\n\n#### scrollPrev\n\n> **scrollPrev**: [`Directive`](../../../../api/angular/bootstrap/components/carousel/../../types#directive)\n\n\nA directive to be applied to a navigation button allowing to scroll to the previous slide.\n\n***\n\n#### slide\n\n> **slide**: [`Directive`](../../../../api/angular/bootstrap/components/carousel/../../types#directive)\\\u003C\\{ `id`: `string`; `index`: `number`; \\}\\>\n\n\nA directive to be applied to each slide in the carousel.\n\n***\n\n#### tabIndicator\n\n> **tabIndicator**: [`Directive`](../../../../api/angular/bootstrap/components/carousel/../../types#directive)\\\u003C\\{ `id`: `string`; `index`: `number`; `jump`: `boolean`; \\}\\>\n\n\nA directive to be applied to a navigation indicator allowing to slide to the corresponding slide.\nAs this directive adds the role `tab` to the element, it is recommended to use it on a button or a link and the parent element should have the role `tablist`.\n","CarouselDirectives",{"source":22,"name":23},"## class_CarouselNavigationDirective\n\nDirective that provides a template reference for the carousel navigation using the [CarouselContext](#carouselcontext).\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n","CarouselNavigationDirective",{"source":25,"name":26},"## interface_CarouselProps\n\nInterface representing the properties for a carousel component.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n\n### Properties\n\n#### align\n\n> **align**: `\"start\"` \\| `\"end\"` \\| `\"center\"`\n\n\nAlign the slides relative to the carousel viewport\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#align](https://www.embla-carousel.com/api/options/#align)\n\n##### Default Value\n\n`'center'`\n\n***\n\n#### ariaIndicatorLabel\n\n> **ariaIndicatorLabel**: (`index`) => `string`\n\n\nAria label for navigation indicators\n\n##### Parameters\n\n###### index\n\n`number`\n\n##### Returns\n\n`string`\n\n***\n\n#### ariaNextLabel\n\n> **ariaNextLabel**: `string`\n\n\nAria label for next button\n\n***\n\n#### ariaPrevLabel\n\n> **ariaPrevLabel**: `string`\n\n\nAria label for previous button\n\n***\n\n#### container\n\n> **container**: `null` \\| `string`\n\n\nEnables choosing a custom container element which holds the slides. By default, Embla will choose the first direct child element of the root element. Provide a valid CSS selector string.\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#container](https://www.embla-carousel.com/api/options/#container)\n\n***\n\n#### containScroll\n\n> **containScroll**: `false` \\| `\"trimSnaps\"` \\| `\"keepSnaps\"`\n\n\nClear leading and trailing empty space that causes excessive scrolling\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#containScroll](https://www.embla-carousel.com/api/options/#containScroll)\n\n##### Default Value\n\n`'trimSnaps'`\n\n***\n\n#### direction\n\n> **direction**: `\"ltr\"` \\| `\"rtl\"`\n\n\nChoose content direction between `ltr` and `rtl`\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#direction](https://www.embla-carousel.com/api/options/#direction)\n\n##### Default Value\n\n`'ltr'`\n\n***\n\n#### dragFree\n\n> **dragFree**: `boolean`\n\n\nEnables momentum scrolling\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#dragFree](https://www.embla-carousel.com/api/options/#dragFree)\n\n##### Default Value\n\n`false`\n\n***\n\n#### dragThreshold\n\n> **dragThreshold**: `number`\n\n\nDrag threshold in pixels\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#dragThreshold](https://www.embla-carousel.com/api/options/#dragThreshold)\n\n##### Default Value\n\n`10`\n\n***\n\n#### duration\n\n> **duration**: `number`\n\n\nSet scroll duration when triggered by any of the API methods\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#duration](https://www.embla-carousel.com/api/options/#duration)\n\n##### Default Value\n\n`25`\n\n***\n\n#### loop\n\n> **loop**: `boolean`\n\n\nEnables infinite looping\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#loop](https://www.embla-carousel.com/api/options/#loop)\n\n##### Default Value\n\n`false`\n\n***\n\n#### navigation\n\n> **navigation**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe navigation layer of the carousel.\n\n***\n\n#### plugins\n\n> **plugins**: `CreatePluginType`\\\u003C`LoosePluginType`, \\{\\}\\>[]\n\n\nPlugins to extend the carousel with additional features\n\n##### Default Value\n\n`[]`\n\n***\n\n#### showNavigationArrows\n\n> **showNavigationArrows**: `boolean`\n\n\nIf `true`, 'previous' and 'next' navigation arrows will be visible.\n\n***\n\n#### showNavigationIndicators\n\n> **showNavigationIndicators**: `boolean`\n\n\nIf `true`, navigation indicators at the bottom of the slide will be visible.\n\n***\n\n#### skipSnaps\n\n> **skipSnaps**: `boolean`\n\n\nAllow the carousel to skip scroll snaps if it's dragged vigorously\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#skipsnaps](https://www.embla-carousel.com/api/options/#skipsnaps)\n\n##### Default Value\n\n`false`\n\n***\n\n#### slide\n\n> **slide**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselSlideContext`](#carouselslidecontext)\\\u003C`SlideData`\\>\\>\n\n\nThe content of each slide in the carousel.\n\n***\n\n#### slidesData\n\n> **slidesData**: `SlideData`[]\n\n\nThe data for each slide in the carousel.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe structure of the carousel.\n","CarouselProps",{"source":28,"name":29},"## type alias_CarouselSlideContext\n> **CarouselSlideContext**\\\u003C`SlideData`\\> = [`WidgetSlotContext`](../../../../api/angular/bootstrap/components/carousel/../../types#widgetslotcontext)\\\u003C[`CarouselWidget`](#carouselwidget)\\\u003C`SlideData`\\>\\> & `SlideData`\n\n\nRepresents the context for a carousel slide.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n","CarouselSlideContext",{"source":31,"name":32},"## class_CarouselSlideDirective\n\nDirective that provides a template reference for the carousel slide  using the [CarouselSlideContext](#carouselslidecontext).\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n","CarouselSlideDirective",{"source":34,"name":35},"## interface_CarouselState\n\nRepresents the state of a carousel component.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n\n### Properties\n\n#### canScrollNext\n\n> **canScrollNext**: `boolean`\n\n\ncan carousel scroll to next slide\n\n***\n\n#### canScrollPrev\n\n> **canScrollPrev**: `boolean`\n\n\ncan carousel scroll to previous slide\n\n***\n\n#### direction\n\n> **direction**: `\"ltr\"` \\| `\"rtl\"`\n\n\nChoose content direction between `ltr` and `rtl`\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#direction](https://www.embla-carousel.com/api/options/#direction)\n\n##### Default Value\n\n`'ltr'`\n\n***\n\n#### initialized\n\n> **initialized**: `boolean`\n\n\nis the carousel initialized\n\n***\n\n#### navigation\n\n> **navigation**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe navigation layer of the carousel.\n\n***\n\n#### scrolling\n\n> **scrolling**: `boolean`\n\n\nis the carousel currently scrolling\n\n***\n\n#### selectedScrollSnap\n\n> **selectedScrollSnap**: `number`\n\n\nselected scroll snap\n\n***\n\n#### showNavigationArrows\n\n> **showNavigationArrows**: `boolean`\n\n\nIf `true`, 'previous' and 'next' navigation arrows will be visible.\n\n***\n\n#### showNavigationIndicators\n\n> **showNavigationIndicators**: `boolean`\n\n\nIf `true`, navigation indicators at the bottom of the slide will be visible.\n\n***\n\n#### slide\n\n> **slide**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselSlideContext`](#carouselslidecontext)\\\u003C`SlideData`\\>\\>\n\n\nThe content of each slide in the carousel.\n\n***\n\n#### slidesData\n\n> **slidesData**: `SlideData`[]\n\n\nThe data for each slide in the carousel.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/angular/bootstrap/components/carousel/../../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe structure of the carousel.\n","CarouselState",{"source":37,"name":38},"## class_CarouselStructureDirective\n\nDirective that provides a template reference for the carousel structure using the [CarouselContext](#carouselcontext).\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n","CarouselStructureDirective",{"source":40,"name":41},"## type alias_CarouselWidget\n> **CarouselWidget**\\\u003C`SlideData`\\> = [`Widget`](../../../../api/angular/bootstrap/components/carousel/../../types#widget)\\\u003C[`CarouselProps`](#carouselprops)\\\u003C`SlideData`\\>, [`CarouselState`](#carouselstate)\\\u003C`SlideData`\\>, [`CarouselApi`](#carouselapi), [`CarouselDirectives`](#carouseldirectives)\\>\n\n\nRepresents a carousel widget with specific properties, state, API, and directives.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of the data for each slide.\n","CarouselWidget",{"source":43,"name":44},"## constant_createCarousel\n> `const` **createCarousel**: \\\u003C`SlideData`\\>(`config`?) => [`CarouselWidget`](#carouselwidget)\\\u003C`SlideData`\\>\n\n\nCreate a Carousel with given config props\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of the data for each slide.\n\n### Parameters\n\n#### config?\n\n[`PropsConfig`](../../../../api/angular/bootstrap/components/carousel/../../types#propsconfig)\\\u003C[`CarouselProps`](#carouselprops)\\\u003C`SlideData`\\>\\>\n\nan optional carousel config\n\n### Returns\n\n[`CarouselWidget`](#carouselwidget)\\\u003C`SlideData`\\>\n\na CarouselWidget\n","createCarousel",{"source":46,"name":47},"## constant_getCarouselDefaultConfig\n> `const` **getCarouselDefaultConfig**: () => [`CarouselProps`](#carouselprops)\\\u003C`any`\\>\n\n\nRetrieve a shallow copy of the default Carousel config\n\n### Returns\n\n[`CarouselProps`](#carouselprops)\\\u003C`any`\\>\n\nthe default Carousel config\n","getCarouselDefaultConfig","Carousel","@agnos-ui/angular-bootstrap"],"uses":{"params":["framework","component"]}}]}
