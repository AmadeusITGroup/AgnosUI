{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,10,38],{"title":4,"submenu":5},"Getting started",[6],{"label":7,"path":8,"subpath":9},"Installation","docs/angular/getting-started/installation","",{"title":11,"submenu":12},"Components",[13,17,20,23,26,29,32,35],{"label":14,"path":15,"subpath":16},"Accordion","docs/angular/components/accordion/","examples",{"label":18,"path":19,"subpath":16},"Alert","docs/angular/components/alert/",{"label":21,"path":22,"subpath":16},"Modal","docs/angular/components/modal/",{"label":24,"path":25,"subpath":16},"Pagination","docs/angular/components/pagination/",{"label":27,"path":28,"subpath":16},"Progressbar","docs/angular/components/progressbar/",{"label":30,"path":31,"subpath":16},"Rating","docs/angular/components/rating/",{"label":33,"path":34,"subpath":16},"Select","docs/angular/components/select/",{"label":36,"path":37,"subpath":16},"Slider","docs/angular/components/slider/",{"title":39,"submenu":40},"Services",[41,44],{"label":42,"path":43,"subpath":9},"Focustrack","docs/angular/services/focustrack",{"label":45,"path":46,"subpath":9},"Floating ui","docs/angular/services/floating-ui"],"uses":{"params":["framework"]}},{"type":"data","data":[{"source":1,"slug":2},"# Floating UI\n\n## Service Overview\n\nThe Floating UI service is designed to create a flexible and dynamic floating DOM element that can be positioned relative to a reference element. It provides a set of options for customization, including positioning configuration, auto-updating behavior, and arrow styling.\n\nThe service uses a 3rd party library called [floating UI](https://floating-ui.com/).\n\nBy leveraging the provided directives and state stores, developers can easily integrate floating UI elements into their web applications with flexibility and control.\n\n## `createFloatingUI` factory\n\nUse the `createFloatingUI` function to create an instance of the Floating UI service.\nPass an optional `propsConfig` parameter to customize the initial configuration.\n\n### Configuration Options\n\nThe `propsConfig` parameter allows you to provide initial values for the following options:\n\n- **computePositionOptions** Option for positioning the floating UI relative to the reference element. Refer to [computePosition documentation](https://floating-ui.com/docs/computeposition#options) for defaults and options.\n- **autoUpdateOptions** Option for enabling auto-updating of the floating position. Refer to [autoUpdate documentation](https://floating-ui.com/docs/autoupdate#options) for defaults and options.\n- **arrowOptions** Option to customize the arrow element associated, by giving the element itself and eventually a padding. Refer to [arrow documentation](https://floating-ui.com/docs/arrow#options) for defaults and options.\n\n## Output Directives\n\n1. **Reference Directive** Apply this directive to the reference element from which the floating UI will be positioned.\n\n2. **Floating Directive** Apply this directive to the floating UI element. This directive includes styling updates based on the floating UI position.\n3. **Arrow Directive** Apply this directive to the arrow element, if present. This directive includes styling updates based on the arrow position.\n\n## State Stores\n\nThe Floating UI service exposes several state stores that represent different aspects of the UI position:\n\n- `x$`: X-coordinate of the floating UI.\n- `y$`: Y-coordinate of the floating UI.\n- `strategy$`: Strategy used for positioning.\n- `placement$`: Placement of the floating UI.\n- `middlewareData$`: Additional data provided by middleware.\n\n## Patching States\n\nFloating UI instance includes a `patch` method that allows you to patch the configuration dynamically at runtime.\n\n## Usage\n\n### In Action\n\n```sample\n{FloatingUI:floatingUI/floatingUI:500}\n```\n","services/floating-ui"],"uses":{"params":["slug"]}}]}
