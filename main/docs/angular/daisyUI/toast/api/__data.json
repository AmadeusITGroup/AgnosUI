{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,95,139],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/angular/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/angular/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/angular/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/angular/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/angular/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/angular/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/angular/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/angular/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,67,71,75,79,83,87,91],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/angular/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/angular/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/angular/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Carousel","inprogress","docs/angular/daisyUI/carousel/","daisyUI/carousel/",{"label":63,"status":64,"path":65,"subpath":51,"slug":66},"Collapse","beta","docs/angular/daisyUI/collapse/","daisyUI/collapse/",{"label":68,"status":49,"path":69,"subpath":51,"slug":70},"Modal","docs/angular/daisyUI/modal/","daisyUI/modal/",{"label":72,"status":49,"path":73,"subpath":51,"slug":74},"Pagination","docs/angular/daisyUI/pagination/","daisyUI/pagination/",{"label":76,"status":49,"path":77,"subpath":51,"slug":78},"Progressbar","docs/angular/daisyUI/progressbar/","daisyUI/progressbar/",{"label":80,"status":49,"path":81,"subpath":51,"slug":82},"Rating","docs/angular/daisyUI/rating/","daisyUI/rating/",{"label":84,"status":49,"path":85,"subpath":51,"slug":86},"Slider","docs/angular/daisyUI/slider/","daisyUI/slider/",{"label":88,"status":49,"path":89,"subpath":51,"slug":90},"Toast","docs/angular/daisyUI/toast/","daisyUI/toast/",{"label":92,"status":64,"path":93,"subpath":51,"slug":94},"Tree","docs/angular/daisyUI/tree/","daisyUI/tree/",{"title":96,"submenu":97},"Bootstrap Components",[98,101,105,108,111,114,117,120,123,126,130,133,136],{"label":7,"status":8,"path":99,"subpath":-1,"slug":100},"docs/angular/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":102,"subpath":103,"slug":104},"docs/angular/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":106,"subpath":103,"slug":107},"docs/angular/components/alert/","components/alert/",{"label":58,"status":59,"path":109,"subpath":103,"slug":110},"docs/angular/components/carousel/","components/carousel/",{"label":63,"status":64,"path":112,"subpath":103,"slug":113},"docs/angular/components/collapse/","components/collapse/",{"label":68,"status":49,"path":115,"subpath":103,"slug":116},"docs/angular/components/modal/","components/modal/",{"label":72,"status":49,"path":118,"subpath":103,"slug":119},"docs/angular/components/pagination/","components/pagination/",{"label":76,"status":49,"path":121,"subpath":103,"slug":122},"docs/angular/components/progressbar/","components/progressbar/",{"label":80,"status":49,"path":124,"subpath":103,"slug":125},"docs/angular/components/rating/","components/rating/",{"label":127,"status":59,"path":128,"subpath":103,"slug":129},"Select","docs/angular/components/select/","components/select/",{"label":84,"status":49,"path":131,"subpath":103,"slug":132},"docs/angular/components/slider/","components/slider/",{"label":88,"status":49,"path":134,"subpath":103,"slug":135},"docs/angular/components/toast/","components/toast/",{"label":92,"status":64,"path":137,"subpath":103,"slug":138},"docs/angular/components/tree/","components/tree/",{"title":140,"submenu":141},"Services",[142,145,149,153,157,161,165],{"label":7,"status":8,"path":143,"subpath":-1,"slug":144},"docs/angular/services/introduction","services/introduction",{"label":146,"status":8,"path":147,"subpath":-1,"slug":148},"Focustrack","docs/angular/services/focustrack","services/focustrack",{"label":150,"status":8,"path":151,"subpath":-1,"slug":152},"Floating UI","docs/angular/services/floating-ui","services/floating-ui",{"label":154,"status":8,"path":155,"subpath":-1,"slug":156},"Match Media","docs/angular/services/match-media","services/match-media",{"label":158,"status":8,"path":159,"subpath":-1,"slug":160},"Navigation Manager","docs/angular/services/navigation-manager","services/navigation-manager",{"label":162,"status":8,"path":163,"subpath":-1,"slug":164},"Resize Observer","docs/angular/services/resize-observer","services/resize-observer",{"label":166,"status":8,"path":167,"subpath":-1,"slug":168},"Transition","docs/angular/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"tabs":4,"prev":13,"next":16},"Toast","stable","v0.3.0",[5,9],{"title":6,"key":7,"path":8},"Examples","headless","/daisyUI/toast/headless",{"title":10,"key":11,"path":12},"Api","api","/daisyUI/toast/api",{"title":14,"slug":15,"subpath":7},"Slider","daisyUI/slider/",{"title":17,"slug":18,"subpath":7},"Tree","daisyUI/tree/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":24,"import":25},"toast",[3,6,9,12,15,18,21],{"source":4,"name":5},"## function_createToast\n> **createToast**(`config`?): [`ToastWidget`](#toastwidget)\n\n\nCreate a ToastWidget with given config props\n\n### Parameters\n\n#### config?\n\n[`PropsConfig`](../../../../api/angular/headless/components/toast/../../types#propsconfig)\\\u003C[`ToastProps`](#toastprops)\\>\n\nan optional toast config\n\n### Returns\n\n[`ToastWidget`](#toastwidget)\n\na ToastWidget\n","createToast",{"source":7,"name":8},"## function_getToastDefaultConfig\n> **getToastDefaultConfig**(): [`ToastProps`](#toastprops)\n\n\nRetrieve a shallow copy of the default toast config\n\n### Returns\n\n[`ToastProps`](#toastprops)\n\nthe default toast config\n","getToastDefaultConfig",{"source":10,"name":11},"## interface_ToastApi\n\nRepresents the API for the toast component.\n\n### Methods\n\n#### close\n\n> **close**(): `void`\n\n\nTriggers alert closing programmatically (same as clicking on the close button (×)).\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\n\nTriggers the alert to be displayed for the user.\n\n##### Returns\n\n`void`\n","ToastApi",{"source":13,"name":14},"## interface_ToastDirectives\n\nInterface representing the directives for a toast component.\n\n### Properties\n\n#### autoHideDirective\n\n> **autoHideDirective**: [`Directive`](../../../../api/angular/headless/components/toast/../../types#directive)\n\n\nDirective that handles the autohide of the toast component\n\n***\n\n#### bodyDirective\n\n> **bodyDirective**: [`Directive`](../../../../api/angular/headless/components/toast/../../types#directive)\n\n\nDirective that adds all the necessary attributes to the body\n\n***\n\n#### closeButtonDirective\n\n> **closeButtonDirective**: [`Directive`](../../../../api/angular/headless/components/toast/../../types#directive)\n\n\nDirective that adds all the necessary attributes to the close button depending on the presence of the header\n\n***\n\n#### transitionDirective\n\n> **transitionDirective**: [`Directive`](../../../../api/angular/headless/components/toast/../../types#directive)\n\n\nthe transition directive, piloting what is the visual effect of going from hidden to visible\n","ToastDirectives",{"source":16,"name":17},"## interface_ToastProps\n\nRepresents the properties for the toast component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### autoHide\n\n> **autoHide**: `boolean`\n\n\nIf `true` automatically hides the toast after the delay.\n\n##### Default Value\n\n`true`\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### delay\n\n> **delay**: `number`\n\n\nDelay in milliseconds before hiding the toast.\n\n##### Default Value\n\n`5000`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\n\nCallback called when the alert is hidden.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\n\nCallback called when the alert is shown.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\n\nCallback called when the alert visibility changed.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](../../../../api/angular/headless/components/toast/../../services/transitions/baseTransitions#transitionfn)\n\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","ToastProps",{"source":19,"name":20},"## interface_ToastState\n\nRepresents the state of a toast component.\n\n### Properties\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### autoHide\n\n> **autoHide**: `boolean`\n\n\nIf `true` automatically hides the toast after the delay.\n\n##### Default Value\n\n`true`\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### delay\n\n> **delay**: `number`\n\n\nDelay in milliseconds before hiding the toast.\n\n##### Default Value\n\n`5000`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\n\nIs `true` when the alert is hidden. Compared to `visible`, this is updated after the transition is executed.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","ToastState",{"source":22,"name":23},"## type alias_ToastWidget\n> **ToastWidget**: [`Widget`](../../../../api/angular/headless/components/toast/../../types#widget)\\\u003C[`ToastProps`](#toastprops), [`ToastState`](#toaststate), [`ToastApi`](#toastapi), [`ToastDirectives`](#toastdirectives)\\>\n\n\nRepresents a toast widget with specific properties, state, API, and directives.\n","ToastWidget","Toast","@agnos-ui/angular-headless"],"uses":{"params":["framework","component"]}}]}
