{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,81,117],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/react/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/react/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/react/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/react/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/react/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/react/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/react/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/react/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,61,65,69,73,77],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/react/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/react/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/react/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":49,"path":59,"subpath":51,"slug":60},"Modal","docs/react/daisyUI/modal/","daisyUI/modal/",{"label":62,"status":49,"path":63,"subpath":51,"slug":64},"Pagination","docs/react/daisyUI/pagination/","daisyUI/pagination/",{"label":66,"status":49,"path":67,"subpath":51,"slug":68},"Progressbar","docs/react/daisyUI/progressbar/","daisyUI/progressbar/",{"label":70,"status":49,"path":71,"subpath":51,"slug":72},"Rating","docs/react/daisyUI/rating/","daisyUI/rating/",{"label":74,"status":49,"path":75,"subpath":51,"slug":76},"Slider","docs/react/daisyUI/slider/","daisyUI/slider/",{"label":78,"status":49,"path":79,"subpath":51,"slug":80},"Toast","docs/react/daisyUI/toast/","daisyUI/toast/",{"title":82,"submenu":83},"Bootstrap Components",[84,87,91,94,97,100,103,106,111,114],{"label":7,"status":8,"path":85,"subpath":-1,"slug":86},"docs/react/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":88,"subpath":89,"slug":90},"docs/react/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":92,"subpath":89,"slug":93},"docs/react/components/alert/","components/alert/",{"label":58,"status":49,"path":95,"subpath":89,"slug":96},"docs/react/components/modal/","components/modal/",{"label":62,"status":49,"path":98,"subpath":89,"slug":99},"docs/react/components/pagination/","components/pagination/",{"label":66,"status":49,"path":101,"subpath":89,"slug":102},"docs/react/components/progressbar/","components/progressbar/",{"label":70,"status":49,"path":104,"subpath":89,"slug":105},"docs/react/components/rating/","components/rating/",{"label":107,"status":108,"path":109,"subpath":89,"slug":110},"Select","inprogress","docs/react/components/select/","components/select/",{"label":74,"status":49,"path":112,"subpath":89,"slug":113},"docs/react/components/slider/","components/slider/",{"label":78,"status":49,"path":115,"subpath":89,"slug":116},"docs/react/components/toast/","components/toast/",{"title":118,"submenu":119},"Services",[120,123,127,131,135,139],{"label":7,"status":8,"path":121,"subpath":-1,"slug":122},"docs/react/services/introduction","services/introduction",{"label":124,"status":8,"path":125,"subpath":-1,"slug":126},"Focustrack","docs/react/services/focustrack","services/focustrack",{"label":128,"status":8,"path":129,"subpath":-1,"slug":130},"Floating UI","docs/react/services/floating-ui","services/floating-ui",{"label":132,"status":8,"path":133,"subpath":-1,"slug":134},"Resize Observer","docs/react/services/resize-observer","services/resize-observer",{"label":136,"status":8,"path":137,"subpath":-1,"slug":138},"Transition","docs/react/services/transition","services/transition",{"label":140,"status":8,"path":141,"subpath":-1,"slug":142},"Match Media","docs/react/services/match-media","services/match-media"],"uses":{"params":["framework"]}},{"type":"data","data":[{"slug":1,"prev":2,"next":-1,"content":9,"since":10,"pageMeta":11},"services/match-media",{"slug":3,"content":4,"title":5,"status":6,"attributes":7},"services/transition","# Transition\n\n## Service Overview\n\nThe Transition service allows to display or hide content smoothly through an animation. At its heart, a transition is a [Directive](../01-Headless/03-Directives.md) managing the visibility of inner content by attaching / detaching classes.\n\n## In action\n\nCreating and attaching a transition is straighforward! Simply create a transition service using the factory `createTransition` and attach the provided directive to a dom element.  \nLet's see this in action by implementing a **Collapse** component:\n\n```sample\n{Collapse example:transition/collapse:129}\n```\n\nAgnosUI provides several transition functions to use (collapse vertical or horizontal, fade in/out) but you may create your own using the `createSimpleClassTransition` utility and a bit of css. Here is another example with a flip animation:\n\n```sample\n{Flip in example:transition/flip:93}\n```\n\n\u003Cp>\n    When creating your own, remember to respect the user preferences and the media query \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\" target=\"_blank\">prefers-reduced-motion\u003C/a>.\n\u003C/p>\n\n## Properties and stores\n\nYou can configure a transition using the following properties:\n\n- **transition** `TransitionFn` : the transition function that will be run\n- **visible** `boolean` : whether the element should be visible when the transition is completed\n- **animation** `boolean` : whether the transition should be animated\n- **animationOnInit** `boolean` : if the element is initially visible, whether the element should be animated when first displayed\n- **onShown** `() => void` : function to be called when the transition is completed and the element is visible\n- **onHidden** `() => void` : function to be called when the transition is completed and the element is not visible\n- **onVisibleChange** `(visible: boolean) => void` : function to be called when the visible property changes\n\nThe state of the transition will include the stores:\n\n- **visible** `boolean` : whether the element is visible or will be visible when the transition is completed\n- **elementPresent** `boolean` : whether the element to be animated is present in the DOM\n- **element** `HTMLElement | null` : reference to the DOM element\n- **transitioning** `boolean` : whether a transition is currently running\n- **shown** `boolean` : whether the element is visible and not transitioning\n- **hidden** `boolean` : whether the element is not visible and not transitioning\n\nYou may play around the properties and see the stores updated with the following example:\n\n```sample\n{Transition properties and stores:transition/transition:585:noCode:noResize}\n```\n","Transition","",{"since":8},"0.2.0","# Match Media\n\n## Service Overview\n\n\u003Cp>\nThe match media service is a simple factory that wraps the \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\" target=\"_blank\">Window: matchMedia()\u003C/a> method into a Tansu readable store.\n\u003C/p>\n\n```typescript\ntype createMatchMedia = (query: string) => Readable\u003Cboolean>;\n```\n\n## In action\n\n```sample\n{MatchMedia:matchMedia/matchMedia:138}\n```\n","0.3.0",{"description":12},"Documentation for services match media"],"uses":{"params":["slug","framework"]}}]}
