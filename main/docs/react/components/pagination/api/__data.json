{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,90,132],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/react/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/react/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/react/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/react/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/react/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/react/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/react/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/react/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82,86],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/react/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/react/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/react/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/react/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/react/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/react/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/react/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/react/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/react/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/react/daisyUI/toast/","daisyUI/toast/",{"label":87,"status":59,"path":88,"subpath":51,"slug":89},"Tree","docs/react/daisyUI/tree/","daisyUI/tree/",{"title":91,"submenu":92},"Bootstrap Components",[93,96,100,103,106,109,112,115,118,123,126,129],{"label":7,"status":8,"path":94,"subpath":-1,"slug":95},"docs/react/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":97,"subpath":98,"slug":99},"docs/react/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":101,"subpath":98,"slug":102},"docs/react/components/alert/","components/alert/",{"label":58,"status":59,"path":104,"subpath":98,"slug":105},"docs/react/components/collapse/","components/collapse/",{"label":63,"status":49,"path":107,"subpath":98,"slug":108},"docs/react/components/modal/","components/modal/",{"label":67,"status":49,"path":110,"subpath":98,"slug":111},"docs/react/components/pagination/","components/pagination/",{"label":71,"status":49,"path":113,"subpath":98,"slug":114},"docs/react/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":116,"subpath":98,"slug":117},"docs/react/components/rating/","components/rating/",{"label":119,"status":120,"path":121,"subpath":98,"slug":122},"Select","inprogress","docs/react/components/select/","components/select/",{"label":79,"status":49,"path":124,"subpath":98,"slug":125},"docs/react/components/slider/","components/slider/",{"label":83,"status":49,"path":127,"subpath":98,"slug":128},"docs/react/components/toast/","components/toast/",{"label":87,"status":59,"path":130,"subpath":98,"slug":131},"docs/react/components/tree/","components/tree/",{"title":133,"submenu":134},"Services",[135,138,142,146,150,154,158],{"label":7,"status":8,"path":136,"subpath":-1,"slug":137},"docs/react/services/introduction","services/introduction",{"label":139,"status":8,"path":140,"subpath":-1,"slug":141},"Focustrack","docs/react/services/focustrack","services/focustrack",{"label":143,"status":8,"path":144,"subpath":-1,"slug":145},"Floating UI","docs/react/services/floating-ui","services/floating-ui",{"label":147,"status":8,"path":148,"subpath":-1,"slug":149},"Match Media","docs/react/services/match-media","services/match-media",{"label":151,"status":8,"path":152,"subpath":-1,"slug":153},"Navigation Manager","docs/react/services/navigation-manager","services/navigation-manager",{"label":155,"status":8,"path":156,"subpath":-1,"slug":157},"Resize Observer","docs/react/services/resize-observer","services/resize-observer",{"label":159,"status":8,"path":160,"subpath":-1,"slug":161},"Transition","docs/react/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Pagination","stable","v0.1.1","bootstrap",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/pagination/examples",{"title":11,"key":12,"path":13},"Api","api","/components/pagination/api",{"title":15,"slug":16,"subpath":8},"Modal","components/modal/",{"title":18,"slug":19,"subpath":8},"Progressbar","components/progressbar/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":20,"import":48},"pagination",[3,6,9,12,15,18,21,24,27,30,33,36,39,42,45],{"source":4,"name":5},"## function_createPagination\n> **createPagination**(`props`?): [`PaginationWidget`](#paginationwidget)\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:635\n\nCreate a PaginationWidget with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../../../../api/react/bootstrap/components/pagination/../../types#propsconfig)\\\u003C[`PaginationProps`](#paginationprops)\\>\n\n### Returns\n\n[`PaginationWidget`](#paginationwidget)\n\na PaginationWidget\n","createPagination",{"source":7,"name":8},"## interface_DirectionsHrefs\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:641\n\nInterface representing the hrefs for pagination navigation links.\n\n### Properties\n\n#### next\n\n> **next**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:651\n\nThe href for the 'Next' direction link\n\n***\n\n#### previous\n\n> **previous**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:646\n\nThe href for the 'Previous' navigation link\n","DirectionsHrefs",{"source":10,"name":11},"## function_getPaginationDefaultConfig\n> **getPaginationDefaultConfig**(): [`PaginationProps`](#paginationprops)\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:10\n\nRetrieve a shallow copy of the default Pagination config\n\n### Returns\n\n[`PaginationProps`](#paginationprops)\n\nthe default Pagination config\n","getPaginationDefaultConfig",{"source":13,"name":14},"## function_NavButton\n> **NavButton**(`props`): `ReactNode`\n\nDefined in: [react/bootstrap/src/components/pagination/pageItem.tsx:67](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/react/bootstrap/src/components/pagination/pageItem.tsx#L67)\n\n`NavButton` is a React functional component that renders a navigation button\nwithin a list item (`\u003Cli>`) element. It uses `React.forwardRef` to forward the ref\nto the `\u003Cli>` element.\n\n### Parameters\n\n#### props\n\n`NavItemProps` & `RefAttributes`\\\u003C[`HTMLLIElement`](https://developer.mozilla.org/docs/Web/API/HTMLLIElement)\\>\n\nThe properties passed to the component.\n\n### Returns\n\n`ReactNode`\n\nA list item containing a navigation button.\n","NavButton",{"source":16,"name":17},"## function_PageItem\n> **PageItem**(`props`): `ReactNode`\n\nDefined in: [react/bootstrap/src/components/pagination/pageItem.tsx:38](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/react/bootstrap/src/components/pagination/pageItem.tsx#L38)\n\n`PageItem` is a React component that renders a list item (`\u003Cli>`) element\nwith the appropriate classes for pagination. It uses `React.forwardRef` to\nforward the ref to the `\u003Cli>` element.\n\n### Parameters\n\n#### props\n\n`PageItemProps` & `RefAttributes`\\\u003C[`HTMLLIElement`](https://developer.mozilla.org/docs/Web/API/HTMLLIElement)\\>\n\nThe properties passed to the component.\n\n### Returns\n\n`ReactNode`\n\nThe rendered page item component.\n","PageItem",{"source":19,"name":20},"## function_Pagination\n> **Pagination**(`props`): `Element`\n\nDefined in: [react/bootstrap/src/components/pagination/pagination.tsx:121](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/react/bootstrap/src/components/pagination/pagination.tsx#L121)\n\nPagination component that renders a navigation element for paginated content.\nIt uses the useWidgetWithConfig hook to create a pagination widget with the provided props.\n\n### Parameters\n\n#### props\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`PaginationProps`](#paginationprops)\\> & `object`\n\nThe properties for the Pagination component.\n\n### Returns\n\n`Element`\n\nThe rendered pagination navigation element.\n","Pagination",{"source":22,"name":23},"## interface_PaginationApi\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:657\n\nInterface representing pagination API for navigating through pages.\n\n### Methods\n\n#### first\n\n> **first**(): `void`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:668\n\nTo \"go\" to the first page\n\n##### Returns\n\n`void`\n\n***\n\n#### last\n\n> **last**(): `void`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:683\n\nTo \"go\" to the last page\n\n##### Returns\n\n`void`\n\n***\n\n#### next\n\n> **next**(): `void`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:678\n\nTo \"go\" to the next page\n\n##### Returns\n\n`void`\n\n***\n\n#### previous\n\n> **previous**(): `void`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:673\n\nTo \"go\" to the previous page\n\n##### Returns\n\n`void`\n\n***\n\n#### select\n\n> **select**(`page`): `void`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:663\n\nTo \"go\" to a specific page\n\n##### Parameters\n\n###### page\n\n`number`\n\nThe page number to select\n\n##### Returns\n\n`void`\n","PaginationApi",{"source":25,"name":26},"## interface_PaginationContext\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:18\n\nA type for the slot context of the pagination widget\n\n### Extended by\n\n- [`PaginationNumberContext`](#paginationnumbercontext)\n\n### Properties\n\n#### api\n\n> **api**: [`PaginationApi`](#paginationapi)\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`PaginationDirectives`](#paginationdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`PaginationState`](#paginationstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L88)\n\nthe state of the widget\n","PaginationContext",{"source":28,"name":29},"## function_PaginationDefaultSlotPages\n> **PaginationDefaultSlotPages**(`slotContext`): `null` \\| `Element`\n\nDefined in: [react/bootstrap/src/components/pagination/pagination.tsx:23](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/react/bootstrap/src/components/pagination/pagination.tsx#L23)\n\nRenders the default slot pages for the pagination component.\n\n### Parameters\n\n#### slotContext\n\n[`PaginationContext`](#paginationcontext)\n\nThe context containing pagination state and directives.\n\n### Returns\n\n`null` \\| `Element`\n\nThe rendered pagination items or null if there are no pages.\n\nThe function iterates over the pages in the pagination state and generates JSX elements for each page.\nIf a page is represented by -1, it renders an ellipsis item. Otherwise, it renders a page item.\n\n- Ellipsis items are rendered as disabled list items with an aria-hidden attribute for accessibility.\n- Page items are rendered using the `PageItem` component, with properties for disabled state, active state, and directives.\n\nThe function returns a fragment containing the generated JSX elements, or null if there are no pages to render.\n","PaginationDefaultSlotPages",{"source":31,"name":32},"## function_PaginationDefaultSlotStructure\n> **PaginationDefaultSlotStructure**(`slotContext`): `Element`\n\nDefined in: [react/bootstrap/src/components/pagination/pagination.tsx:65](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/react/bootstrap/src/components/pagination/pagination.tsx#L65)\n\nRenders the default slot structure for the pagination component.\n\n### Parameters\n\n#### slotContext\n\n[`PaginationContext`](#paginationcontext)\n\nThe context containing the state and directives for pagination.\n\n### Returns\n\n`Element`\n\nThe rendered pagination component.\n\nThe function constructs the pagination structure based on the provided state and directives.\nIt conditionally includes navigation buttons for first, previous, next, and last pages based on the state.\nThe pagination items are wrapped in an unordered list with appropriate classes.\nAdditionally, an aria-live region is included for accessibility purposes.\n","PaginationDefaultSlotStructure",{"source":34,"name":35},"## interface_PaginationDirectives\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:689\n\nInterface representing the directives for pagination components.\n\n### Properties\n\n#### pageFirst\n\n> **pageFirst**: [`Directive`](../../../../api/react/bootstrap/components/pagination/../../types#directive)\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:709\n\nA directive to be applied on the first link\n\n***\n\n#### pageLast\n\n> **pageLast**: [`Directive`](../../../../api/react/bootstrap/components/pagination/../../types#directive)\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:721\n\nA directive to be applied on the Last link\n\n***\n\n#### pageLink\n\n> **pageLink**: [`Directive`](../../../../api/react/bootstrap/components/pagination/../../types#directive)\\\u003C\\{ `page`: `number`; \\}\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:695\n\nA directive to be applied to each page link\nThis will handle the click, tabindex and aria attributes\n\n***\n\n#### pageNext\n\n> **pageNext**: [`Directive`](../../../../api/react/bootstrap/components/pagination/../../types#directive)\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:715\n\nA directive to be applied on the next link\n\n***\n\n#### pagePrev\n\n> **pagePrev**: [`Directive`](../../../../api/react/bootstrap/components/pagination/../../types#directive)\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:703\n\nA directive to be applied on the previous link\n","PaginationDirectives",{"source":37,"name":38},"## interface_PaginationNumberContext\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:25\n\nA type for the slot context of the pagination widget when the slot is the number label\n\n### Properties\n\n#### api\n\n> **api**: [`PaginationApi`](#paginationapi)\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`PaginationDirectives`](#paginationdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### displayedPage\n\n> **displayedPage**: `number`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:29\n\nDisplayed page\n\n***\n\n#### state\n\n> **state**: [`PaginationState`](#paginationstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L88)\n\nthe state of the widget\n","PaginationNumberContext",{"source":40,"name":41},"## interface_PaginationProps\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:295\n\nRepresents the properties for the Pagination component.\n\n### Properties\n\n#### activeLabel\n\n> **activeLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:431\n\nThe label for the \"active\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'(current)'\n```\n\n***\n\n#### ariaEllipsisLabel\n\n> **ariaEllipsisLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:493\n\nThe label for the \"Ellipsis\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Ellipsis page element'`\n\n***\n\n#### ariaFirstLabel\n\n> **ariaFirstLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:444\n\nThe label for the \"First\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for first page'\n```\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:418\n\nThe label for the nav element.\n\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Page navigation'`\n\n***\n\n#### ariaLastLabel\n\n> **ariaLastLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:483\n\nThe label for the \"Last\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for last page'\n```\n\n***\n\n#### ariaLiveLabel\n\n> **ariaLiveLabel**: (`currentPage`, `pageCount`) => `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:385\n\nProvide the label for the aria-live element\nThis is used for accessibility purposes.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Parameters\n\n###### currentPage\n\n`number`\n\nThe current page number\n\n###### pageCount\n\n`number`\n\nThe total number of pages\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(currentPage: number) => `Current page is ${currentPage}`\n```\n\n***\n\n#### ariaNextLabel\n\n> **ariaNextLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:470\n\nThe label for the \"Next\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for next page'\n```\n\n***\n\n#### ariaPageLabel\n\n> **ariaPageLabel**: (`processPage`, `pageCount`) => `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:369\n\nProvide the label for each \"Page\" page button.\nThis is used for accessibility purposes.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Parameters\n\n###### processPage\n\n`number`\n\nThe current page number\n\n###### pageCount\n\n`number`\n\nThe total number of pages\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(processPage: number, pageCount: number) => `Page ${processPage} of ${pageCount}`\n```\n\n***\n\n#### ariaPreviousLabel\n\n> **ariaPreviousLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:457\n\nThe label for the \"Previous\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for previous page'\n```\n\n***\n\n#### boundaryLinks\n\n> **boundaryLinks**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:517\n\nIf `true`, the \"First\" and \"Last\" page links are shown.\n\n##### Default Value\n\n`false`\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:524\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### collectionSize\n\n> **collectionSize**: `number`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:309\n\nThe number of items in your paginated collection.\n\nNote, that this is not the number of pages. Page numbers are calculated dynamically based on\n`collectionSize` and `pageSize`.\n\nEx. if you have 100 items in your collection and displaying 20 items per page, you'll end up with 5 pages.\n\nWhatever the collectionSize the page number is of minimum 1.\n\n##### Default Value\n\n`0`\n\n***\n\n#### directionLinks\n\n> **directionLinks**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:509\n\nIf `true`, the \"Next\" and \"Previous\" page links are shown.\n\n##### Default Value\n\n`true`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:501\n\nIf `true`, pagination links will be disabled.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ellipsisLabel\n\n> **ellipsisLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:543\n\nThe template to use for the ellipsis slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'…'`\n\n***\n\n#### firstPageLabel\n\n> **firstPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:553\n\nThe template to use for the first slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'«'`\n\n***\n\n#### lastPageLabel\n\n> **lastPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:583\n\nThe template to use for the last slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'»'`\n\n***\n\n#### nextPageLabel\n\n> **nextPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:573\n\nThe template to use for the next slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'›'`\n\n***\n\n#### numberLabel\n\n> **numberLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationNumberContext`](#paginationnumbercontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:605\n\nThe template to use for the number slot\noverride any configuration parameters provided for this\nfor I18n, we suggest to use the global configuration\n\n##### Param\n\nThe current page number\n\n##### Default Value\n\n```ts\n({displayedPage}: PaginationNumberContext) => `${displayedPage}`\n```\n\n***\n\n#### onPageChange\n\n> **onPageChange**: (`page`) => `void`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:332\n\nAn event fired when the page is changed.\n\nEvent payload is the number of the newly selected page.\n\nPage numbers start with `1`.\n\n##### Parameters\n\n###### page\n\n`number`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### page\n\n> **page**: `number`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:407\n\nThe current page.\n\nPage numbers start with `1`.\n\n##### Default Value\n\n`1`\n\n***\n\n#### pageLink\n\n> **pageLink**: (`pageNumber`) => `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:398\n\nFactory function providing the href for a \"Page\" page anchor,\nbased on the current page number\n\n##### Parameters\n\n###### pageNumber\n\n`number`\n\nThe index to use in the link\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(_page: number) => PAGE_LINK_DEFAULT\n```\n\n***\n\n#### pagesDisplay\n\n> **pagesDisplay**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:591\n\nThe template to use for the pages slot\nTo use to customize the pages view\noverride any configuration parameters provided for this\n\n***\n\n#### pagesFactory\n\n> **pagesFactory**: (`page`, `pageCount`) => `number`[]\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:353\n\npagesFactory returns a function computing the array of pages to be displayed\nas number (-1 are treated as ellipsis).\nUse Page slot to customize the pages view and not this\n\n##### Parameters\n\n###### page\n\n`number`\n\nThe current page number\n\n###### pageCount\n\n`number`\n\nThe total number of pages\n\n##### Returns\n\n`number`[]\n\n##### Default Value\n\n```ts\n(_page: number, pageCount: number) => {\n\t\tconst pages: number[] = [];\n\t\tfor (let i = 1; i \u003C= pageCount; i++) {\n\t\t\tpages.push(i);\n\t\t}\n\t\treturn pages;\n\t}\n```\n\n***\n\n#### pageSize\n\n> **pageSize**: `number`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:318\n\nThe number of items per page.\n\n##### Remarks\n\nmin value is 1\n\n##### Default Value\n\n`10`\n\n***\n\n#### previousPageLabel\n\n> **previousPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:563\n\nThe template to use for the previous slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'‹'`\n\n***\n\n#### size\n\n> **size**: `null` \\| `\"sm\"` \\| `\"lg\"`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:615\n\nThe pagination display size.\n\nBootstrap currently supports small and large sizes.\n\n##### Default Value\n\n`null`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:533\n\nThe template to use for the structure of the pagination component\nThe default structure uses [ellipsisLabel](#paginationprops-ellipsislabel), [firstPageLabel](#paginationprops-firstpagelabel),\n[previousPageLabel](#paginationprops-previouspagelabel), [nextPageLabel](#paginationprops-nextpagelabel),\n[lastPageLabel](#paginationprops-lastpagelabel), [pagesDisplay](#paginationprops-pagesdisplay),\n[numberLabel](#paginationprops-numberlabel),\n","PaginationProps",{"source":43,"name":44},"## interface_PaginationState\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:35\n\nRepresents the state of a pagination component.\n\n### Properties\n\n#### activeLabel\n\n> **activeLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:105\n\nThe label for the \"active\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'(current)'\n```\n\n***\n\n#### ariaEllipsisLabel\n\n> **ariaEllipsisLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:167\n\nThe label for the \"Ellipsis\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Ellipsis page element'`\n\n***\n\n#### ariaFirstLabel\n\n> **ariaFirstLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:118\n\nThe label for the \"First\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for first page'\n```\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:92\n\nThe label for the nav element.\n\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Page navigation'`\n\n***\n\n#### ariaLastLabel\n\n> **ariaLastLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:157\n\nThe label for the \"Last\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for last page'\n```\n\n***\n\n#### ariaLiveLabelText\n\n> **ariaLiveLabelText**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:72\n\nThe aria-live text\n\n***\n\n#### ariaNextLabel\n\n> **ariaNextLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:144\n\nThe label for the \"Next\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for next page'\n```\n\n***\n\n#### ariaPreviousLabel\n\n> **ariaPreviousLabel**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:131\n\nThe label for the \"Previous\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for previous page'\n```\n\n***\n\n#### boundaryLinks\n\n> **boundaryLinks**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:191\n\nIf `true`, the \"First\" and \"Last\" page links are shown.\n\n##### Default Value\n\n`false`\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:198\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### directionLinks\n\n> **directionLinks**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:183\n\nIf `true`, the \"Next\" and \"Previous\" page links are shown.\n\n##### Default Value\n\n`true`\n\n***\n\n#### directionsHrefs\n\n> **directionsHrefs**: [`DirectionsHrefs`](#directionshrefs)\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:68\n\nThe hrefs for the direction links\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:175\n\nIf `true`, pagination links will be disabled.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ellipsisLabel\n\n> **ellipsisLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:217\n\nThe template to use for the ellipsis slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'…'`\n\n***\n\n#### firstPageLabel\n\n> **firstPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:227\n\nThe template to use for the first slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'«'`\n\n***\n\n#### lastPageLabel\n\n> **lastPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:257\n\nThe template to use for the last slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'»'`\n\n***\n\n#### nextDisabled\n\n> **nextDisabled**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:55\n\ntrue if the next link need to be disabled\n\n***\n\n#### nextPageLabel\n\n> **nextPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:247\n\nThe template to use for the next slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'›'`\n\n***\n\n#### numberLabel\n\n> **numberLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationNumberContext`](#paginationnumbercontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:279\n\nThe template to use for the number slot\noverride any configuration parameters provided for this\nfor I18n, we suggest to use the global configuration\n\n##### Param\n\nThe current page number\n\n##### Default Value\n\n```ts\n({displayedPage}: PaginationNumberContext) => `${displayedPage}`\n```\n\n***\n\n#### page\n\n> **page**: `number`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:81\n\nThe current page.\n\nPage numbers start with `1`.\n\n##### Default Value\n\n`1`\n\n***\n\n#### pageCount\n\n> **pageCount**: `number`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:40\n\nThe number of pages.\n\n***\n\n#### pages\n\n> **pages**: `number`[]\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:45\n\nThe current pages, the number in the Array is the number of the page.\n\n***\n\n#### pagesDisplay\n\n> **pagesDisplay**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:265\n\nThe template to use for the pages slot\nTo use to customize the pages view\noverride any configuration parameters provided for this\n\n***\n\n#### pagesHrefs\n\n> **pagesHrefs**: `string`[]\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:64\n\nThe hrefs for each \"Page\" page link\n\n***\n\n#### pagesLabel\n\n> **pagesLabel**: `string`[]\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:60\n\nThe label for each \"Page\" page link.\n\n***\n\n#### previousDisabled\n\n> **previousDisabled**: `boolean`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:50\n\ntrue if the previous link need to be disabled\n\n***\n\n#### previousPageLabel\n\n> **previousPageLabel**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:237\n\nThe template to use for the previous slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'‹'`\n\n***\n\n#### size\n\n> **size**: `null` \\| `\"sm\"` \\| `\"lg\"`\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:289\n\nThe pagination display size.\n\nBootstrap currently supports small and large sizes.\n\n##### Default Value\n\n`null`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:207\n\nThe template to use for the structure of the pagination component\nThe default structure uses [ellipsisLabel](#paginationprops-ellipsislabel), [firstPageLabel](#paginationprops-firstpagelabel),\n[previousPageLabel](#paginationprops-previouspagelabel), [nextPageLabel](#paginationprops-nextpagelabel),\n[lastPageLabel](#paginationprops-lastpagelabel), [pagesDisplay](#paginationprops-pagesdisplay),\n[numberLabel](#paginationprops-numberlabel),\n","PaginationState",{"source":46,"name":47},"## type alias_PaginationWidget\n> **PaginationWidget**: [`Widget`](../../../../api/react/bootstrap/components/pagination/../../types#widget)\\\u003C[`PaginationProps`](#paginationprops), [`PaginationState`](#paginationstate), [`PaginationApi`](#paginationapi), [`PaginationDirectives`](#paginationdirectives)\\>\n\nDefined in: react/bootstrap/src/components/pagination/pagination.gen.ts:626\n\nRepresents a pagination widget component.\n\nThis type defines a widget that handles pagination functionality,\nincluding properties, state, api and directives specific to pagination.\n","PaginationWidget","@agnos-ui/react-bootstrap/components/pagination"],"uses":{"params":["framework","component"]}}]}
