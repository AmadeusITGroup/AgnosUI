{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,90,132],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/react/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/react/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/react/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/react/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/react/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/react/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/react/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/react/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82,86],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/react/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/react/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/react/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/react/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/react/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/react/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/react/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/react/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/react/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/react/daisyUI/toast/","daisyUI/toast/",{"label":87,"status":59,"path":88,"subpath":51,"slug":89},"Tree","docs/react/daisyUI/tree/","daisyUI/tree/",{"title":91,"submenu":92},"Bootstrap Components",[93,96,100,103,106,109,112,115,118,123,126,129],{"label":7,"status":8,"path":94,"subpath":-1,"slug":95},"docs/react/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":97,"subpath":98,"slug":99},"docs/react/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":101,"subpath":98,"slug":102},"docs/react/components/alert/","components/alert/",{"label":58,"status":59,"path":104,"subpath":98,"slug":105},"docs/react/components/collapse/","components/collapse/",{"label":63,"status":49,"path":107,"subpath":98,"slug":108},"docs/react/components/modal/","components/modal/",{"label":67,"status":49,"path":110,"subpath":98,"slug":111},"docs/react/components/pagination/","components/pagination/",{"label":71,"status":49,"path":113,"subpath":98,"slug":114},"docs/react/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":116,"subpath":98,"slug":117},"docs/react/components/rating/","components/rating/",{"label":119,"status":120,"path":121,"subpath":98,"slug":122},"Select","inprogress","docs/react/components/select/","components/select/",{"label":79,"status":49,"path":124,"subpath":98,"slug":125},"docs/react/components/slider/","components/slider/",{"label":83,"status":49,"path":127,"subpath":98,"slug":128},"docs/react/components/toast/","components/toast/",{"label":87,"status":59,"path":130,"subpath":98,"slug":131},"docs/react/components/tree/","components/tree/",{"title":133,"submenu":134},"Services",[135,138,142,146,150,154,158],{"label":7,"status":8,"path":136,"subpath":-1,"slug":137},"docs/react/services/introduction","services/introduction",{"label":139,"status":8,"path":140,"subpath":-1,"slug":141},"Focustrack","docs/react/services/focustrack","services/focustrack",{"label":143,"status":8,"path":144,"subpath":-1,"slug":145},"Floating UI","docs/react/services/floating-ui","services/floating-ui",{"label":147,"status":8,"path":148,"subpath":-1,"slug":149},"Match Media","docs/react/services/match-media","services/match-media",{"label":151,"status":8,"path":152,"subpath":-1,"slug":153},"Navigation Manager","docs/react/services/navigation-manager","services/navigation-manager",{"label":155,"status":8,"path":156,"subpath":-1,"slug":157},"Resize Observer","docs/react/services/resize-observer","services/resize-observer",{"label":159,"status":8,"path":160,"subpath":-1,"slug":161},"Transition","docs/react/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":18,"next":21},"Tree","beta","v0.6.0","standalone",[6,10,14],{"title":7,"key":8,"path":9},"Examples","examples","/components/tree/examples",{"title":11,"key":12,"path":13},"Api","api","/components/tree/api",{"title":15,"key":16,"path":17},"Styling","style","/components/tree/style",{"title":19,"slug":20,"subpath":8},"Toast","components/toast/",{"title":22,"slug":23,"subpath":-1},"Services: Introduction","services/introduction"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":26,"import":51},"tree",[3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48],{"source":4,"name":5},"## function_createTree\n> **createTree**(`props`?): [`TreeWidget`](#treewidget)\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:173\n\nCreate a Tree with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../../../../api/react/bootstrap/components/tree/../../types#propsconfig)\\\u003C[`TreeProps`](#treeprops)\\>\n\n### Returns\n\n[`TreeWidget`](#treewidget)\n\na TreeWidget\n","createTree",{"source":7,"name":8},"## function_DefaultTreeSlotItem\n> **DefaultTreeSlotItem**(`slotContext`): `Element`\n\nDefined in: [react/bootstrap/src/components/tree/tree.tsx:55](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/react/bootstrap/src/components/tree/tree.tsx#L55)\n\nA functional component that renders a tree item element with a directive applied to it.\nThe directive is provided through the `slotContext` parameter.\n\n### Parameters\n\n#### slotContext\n\n[`TreeSlotItemContext`](#treeslotitemcontext)\n\nThe context object containing the directives and item for the tree item element.\n\n### Returns\n\n`Element`\n\nA tree root element with the applied directive.\n","DefaultTreeSlotItem",{"source":10,"name":11},"## function_DefaultTreeSlotItemContent\n> **DefaultTreeSlotItemContent**(`slotContext`): `Element`\n\nDefined in: [react/bootstrap/src/components/tree/tree.tsx:38](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/react/bootstrap/src/components/tree/tree.tsx#L38)\n\nA functional component that renders a tree item content element.\n\n### Parameters\n\n#### slotContext\n\n[`TreeSlotItemContext`](#treeslotitemcontext)\n\nThe context object containing the item content for display.\n\n### Returns\n\n`Element`\n\nA tree item element.\n","DefaultTreeSlotItemContent",{"source":13,"name":14},"## function_DefaultTreeSlotItemToggle\n> **DefaultTreeSlotItemToggle**(`slotContext`): `Element`\n\nDefined in: [react/bootstrap/src/components/tree/tree.tsx:23](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/react/bootstrap/src/components/tree/tree.tsx#L23)\n\nA functional component that renders a toggle element with a directive applied to it.\nThe directive is provided through the `slotContext` parameter.\n\n### Parameters\n\n#### slotContext\n\n[`TreeSlotItemContext`](#treeslotitemcontext)\n\nThe context object containing the directives and item the toggle.\n\n### Returns\n\n`Element`\n\nA toggle element with the applied directive.\n","DefaultTreeSlotItemToggle",{"source":16,"name":17},"## function_DefaultTreeSlotStructure\n> **DefaultTreeSlotStructure**(`slotContext`): `Element`\n\nDefined in: [react/bootstrap/src/components/tree/tree.tsx:77](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/react/bootstrap/src/components/tree/tree.tsx#L77)\n\nA functional component that renders a tree structure with a directive applied to it.\nThe directive is provided through the `slotContext` parameter.\n\n### Parameters\n\n#### slotContext\n\n[`TreeContext`](#treecontext)\n\nThe context object containing the directives and items for the tree display.\n\n### Returns\n\n`Element`\n\nA tree structure with the applied directive.\n","DefaultTreeSlotStructure",{"source":19,"name":20},"## function_getTreeDefaultConfig\n> **getTreeDefaultConfig**(): [`TreeProps`](#treeprops)\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:10\n\nRetrieve a shallow copy of the default Tree config\n\n### Returns\n\n[`TreeProps`](#treeprops)\n\nthe default Tree config\n","getTreeDefaultConfig",{"source":22,"name":23},"## interface_NormalizedTreeItem\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:205\n\nNormalized TreeItem object\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:210\n\nAccessibility label for the node\n\n***\n\n#### children\n\n> **children**: [`NormalizedTreeItem`](#normalizedtreeitem)[]\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:222\n\nAn array of children nodes\n\n***\n\n#### isExpanded?\n\n> `optional` **isExpanded**: `boolean`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:227\n\nIf `true` the node is expanded\n\n***\n\n#### label\n\n> **label**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:232\n\nString title of the node\n\n***\n\n#### level\n\n> **level**: `number`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:216\n\nLevel in the hierarchy, starts with 0 for a root node\n","NormalizedTreeItem",{"source":25,"name":26},"## function_Tree\n> **Tree**(`props`): `Element`\n\nDefined in: [react/bootstrap/src/components/tree/tree.tsx:104](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/react/bootstrap/src/components/tree/tree.tsx#L104)\n\nTree component that integrates with a widget context and renders a slot structure.\n\n### Parameters\n\n#### props\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`TreeProps`](#treeprops)\\>\n\nThe properties for the Tree component.\n\n### Returns\n\n`Element`\n\nThe rendered Tree component.\n\nThe Tree component uses the useWidgetWithConfig hook to create a widget context with the provided\nconfiguration. It renders the slot content using the `Slot` component.\n","Tree",{"source":28,"name":29},"## interface_TreeApi\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:238\n\nInterface representing the API for a Tree component.\n","TreeApi",{"source":31,"name":32},"## type alias_TreeContext\n> **TreeContext**: [`WidgetSlotContext`](../../../../api/react/bootstrap/components/tree/../../types#widgetslotcontext)\\\u003C[`TreeWidget`](#treewidget)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:19\n\nRepresents the context for a Tree widget.\nThis interface is an alias for `WidgetSlotContext\u003CTreeWidget>`.\n","TreeContext",{"source":34,"name":35},"## interface_TreeDirectives\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:244\n\nInterface representing various directives used in the Tree component.\n\n### Properties\n\n#### itemAttributesDirective\n\n> **itemAttributesDirective**: [`Directive`](../../../../api/react/bootstrap/components/tree/../../types#directive)\\\u003C\\{ `item`: [`NormalizedTreeItem`](#normalizedtreeitem); \\}\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:259\n\nDirective to handle attributes for the tree item\n\n***\n\n#### itemToggleDirective\n\n> **itemToggleDirective**: [`Directive`](../../../../api/react/bootstrap/components/tree/../../types#directive)\\\u003C\\{ `item`: [`NormalizedTreeItem`](#normalizedtreeitem); \\}\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:254\n\nDirective to handle toggle for the tree item\n\n***\n\n#### navigationDirective\n\n> **navigationDirective**: [`Directive`](../../../../api/react/bootstrap/components/tree/../../types#directive)\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:249\n\nDirective to attach navManager for the tree\n","TreeDirectives",{"source":37,"name":38},"## interface_TreeItem\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:179\n\nRepresents a tree item component.\n\n### Properties\n\n#### ariaLabel?\n\n> `optional` **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:184\n\nOptional accessibility label for the node\n\n***\n\n#### children?\n\n> `optional` **children**: [`TreeItem`](#treeitem)[]\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:189\n\nOptional array of children nodes\n\n***\n\n#### isExpanded?\n\n> `optional` **isExpanded**: `boolean`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:194\n\nIf `true` the node is expanded\n\n***\n\n#### label\n\n> **label**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:199\n\nString title of the node\n","TreeItem",{"source":40,"name":41},"## interface_TreeProps\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:81\n\nRepresents the properties for the Tree component.\n\n### Properties\n\n#### ariaLabel?\n\n> `optional` **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:130\n\nOptional accessibility label for the tree if there is no explicit label\n\n##### Default Value\n\n`''`\n\n***\n\n#### ariaLabelToggleFn\n\n> **ariaLabelToggleFn**: (`label`) => `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:123\n\nReturn the value for the 'aria-label' attribute of the toggle\n\n##### Parameters\n\n###### label\n\n`string`\n\ntree item label\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(label: string) => `Toggle ${label}`\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:137\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### item\n\n> **item**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeSlotItemContext`](#treeslotitemcontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:147\n\nSlot to change the default tree item\n\n***\n\n#### itemContent\n\n> **itemContent**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeSlotItemContext`](#treeslotitemcontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:152\n\nSlot to change the default tree item content\n\n***\n\n#### itemToggle\n\n> **itemToggle**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeSlotItemContext`](#treeslotitemcontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:157\n\nSlot to change the default tree item toggle\n\n***\n\n#### nodes\n\n> **nodes**: [`TreeItem`](#treeitem)[]\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:88\n\nArray of the tree nodes to display\n\n##### Default Value\n\n`[]`\n\n***\n\n#### onExpandToggle\n\n> **onExpandToggle**: (`node`) => `void`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:100\n\nAn event emitted when the user toggles the expand of the TreeItem.\n\nEvent payload is equal to the TreeItem clicked.\n\n##### Parameters\n\n###### node\n\n[`NormalizedTreeItem`](#normalizedtreeitem)\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeContext`](#treecontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:142\n\nSlot to change the default display of the tree\n\n### Methods\n\n#### navSelector\n\n> **navSelector**(`node`): `NodeListOf`\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:112\n\nRetrieves expand items of the TreeItem\n\n##### Parameters\n\n###### node\n\n[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\nHTML element that is representing the expand item\n\n##### Returns\n\n`NodeListOf`\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\\>\n\n##### Default Value\n\n```ts\n(node: HTMLElement) => node.querySelectorAll('button')\n```\n","TreeProps",{"source":43,"name":44},"## type alias_TreeSlotItemContext\n> **TreeSlotItemContext**: [`TreeContext`](#treecontext) & `object`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:26\n\nRepresents the context for a tree item, extending the base `TreeContext`\nwith an additional `item` property.\n\n### Type declaration\n\n#### item\n\n> **item**: [`NormalizedTreeItem`](#normalizedtreeitem)\n","TreeSlotItemContext",{"source":46,"name":47},"## interface_TreeState\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:31\n\nRepresents the state of a Tree component.\n\n### Properties\n\n#### ariaLabel?\n\n> `optional` **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:48\n\nOptional accessibility label for the tree if there is no explicit label\n\n##### Default Value\n\n`''`\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:55\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### expandedMap\n\n> **expandedMap**: `object`\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:41\n\nGetter of expanded state for each tree node\n\n##### get\n\n###### Parameters\n\n####### item\n\n[`NormalizedTreeItem`](#normalizedtreeitem)\n\n###### Returns\n\n`undefined` \\| `boolean`\n\n***\n\n#### item\n\n> **item**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeSlotItemContext`](#treeslotitemcontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:65\n\nSlot to change the default tree item\n\n***\n\n#### itemContent\n\n> **itemContent**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeSlotItemContext`](#treeslotitemcontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:70\n\nSlot to change the default tree item content\n\n***\n\n#### itemToggle\n\n> **itemToggle**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeSlotItemContext`](#treeslotitemcontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:75\n\nSlot to change the default tree item toggle\n\n***\n\n#### normalizedNodes\n\n> **normalizedNodes**: [`NormalizedTreeItem`](#normalizedtreeitem)[]\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:36\n\nArray of normalized tree nodes\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/tree/../../types#slotcontent)\\\u003C[`TreeContext`](#treecontext)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:60\n\nSlot to change the default display of the tree\n","TreeState",{"source":49,"name":50},"## type alias_TreeWidget\n> **TreeWidget**: [`Widget`](../../../../api/react/bootstrap/components/tree/../../types#widget)\\\u003C[`TreeProps`](#treeprops), [`TreeState`](#treestate), [`TreeApi`](#treeapi), [`TreeDirectives`](#treedirectives)\\>\n\nDefined in: react/bootstrap/src/components/tree/tree.gen.ts:164\n\nRepresents a Tree widget component.\n","TreeWidget","@agnos-ui/react-bootstrap/components/tree"],"uses":{"params":["framework","component"]}}]}
