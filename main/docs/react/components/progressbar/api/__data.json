{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,86,125],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/react/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/react/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/react/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/react/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/react/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/react/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/react/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/react/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/react/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/react/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/react/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/react/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/react/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/react/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/react/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/react/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/react/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/react/daisyUI/toast/","daisyUI/toast/",{"title":87,"submenu":88},"Bootstrap Components",[89,92,96,99,102,105,108,111,114,119,122],{"label":7,"status":8,"path":90,"subpath":-1,"slug":91},"docs/react/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":93,"subpath":94,"slug":95},"docs/react/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":97,"subpath":94,"slug":98},"docs/react/components/alert/","components/alert/",{"label":58,"status":59,"path":100,"subpath":94,"slug":101},"docs/react/components/collapse/","components/collapse/",{"label":63,"status":49,"path":103,"subpath":94,"slug":104},"docs/react/components/modal/","components/modal/",{"label":67,"status":49,"path":106,"subpath":94,"slug":107},"docs/react/components/pagination/","components/pagination/",{"label":71,"status":49,"path":109,"subpath":94,"slug":110},"docs/react/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":112,"subpath":94,"slug":113},"docs/react/components/rating/","components/rating/",{"label":115,"status":116,"path":117,"subpath":94,"slug":118},"Select","inprogress","docs/react/components/select/","components/select/",{"label":79,"status":49,"path":120,"subpath":94,"slug":121},"docs/react/components/slider/","components/slider/",{"label":83,"status":49,"path":123,"subpath":94,"slug":124},"docs/react/components/toast/","components/toast/",{"title":126,"submenu":127},"Services",[128,131,135,139,143,147],{"label":7,"status":8,"path":129,"subpath":-1,"slug":130},"docs/react/services/introduction","services/introduction",{"label":132,"status":8,"path":133,"subpath":-1,"slug":134},"Focustrack","docs/react/services/focustrack","services/focustrack",{"label":136,"status":8,"path":137,"subpath":-1,"slug":138},"Floating UI","docs/react/services/floating-ui","services/floating-ui",{"label":140,"status":8,"path":141,"subpath":-1,"slug":142},"Resize Observer","docs/react/services/resize-observer","services/resize-observer",{"label":144,"status":8,"path":145,"subpath":-1,"slug":146},"Transition","docs/react/services/transition","services/transition",{"label":148,"status":8,"path":149,"subpath":-1,"slug":150},"Match Media","docs/react/services/match-media","services/match-media"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"tabs":4,"prev":13,"next":16},"Progressbar","stable","v0.1.1",[5,9],{"title":6,"key":7,"path":8},"Examples","examples","/components/progressbar/examples",{"title":10,"key":11,"path":12},"Api","api","/components/progressbar/api",{"title":14,"slug":15,"subpath":7},"Pagination","components/pagination/",{"title":17,"slug":18,"subpath":7},"Rating","components/rating/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":11,"import":27,"pageMeta":28},"progressbar",[3,6,9,12,15,18,21,24],{"source":4,"name":5},"## function_createProgressbar\n> **createProgressbar**(`props`?): [`ProgressbarWidget`](#progressbarwidget)\n\nCreate a Progressbar with given config props\n\n### Parameters\n\n• **props?**: [`PropsConfig`](../../../../api/react/bootstrap/components/progressbar/../../types#propsconfig)\\\u003C[`ProgressbarProps`](#progressbarprops)\\>\n\n### Returns\n\n[`ProgressbarWidget`](#progressbarwidget)\n\na ProgressbarWidget\n","createProgressbar",{"source":7,"name":8},"## function_getProgressbarDefaultConfig\n> **getProgressbarDefaultConfig**(): [`ProgressbarProps`](#progressbarprops)\n\nRetrieve a shallow copy of the default Progressbar config\n\n### Returns\n\n[`ProgressbarProps`](#progressbarprops)\n\nthe default Progressbar config\n","getProgressbarDefaultConfig",{"source":10,"name":11},"## function_Progressbar\n> **Progressbar**(`props`): `Element`\n\n### Parameters\n\n• **props**: [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`ProgressbarProps`](#progressbarprops)\\>\n\n### Returns\n\n`Element`\n","Progressbar",{"source":13,"name":14},"## type alias_ProgressbarContext\n> **ProgressbarContext**: [`WidgetSlotContext`](../../../../api/react/bootstrap/components/progressbar/../../types#widgetslotcontext)\\\u003C[`ProgressbarWidget`](#progressbarwidget)\\>\n","ProgressbarContext",{"source":16,"name":17},"## interface_ProgressbarDirectives\n### Properties\n\n#### ariaDirective\n\n> **ariaDirective**: [`Directive`](../../../../api/react/bootstrap/components/progressbar/../../types#directive)\n\nA directive to be applied to the main container that handles aria attributes.\n","ProgressbarDirectives",{"source":19,"name":20},"## interface_ProgressbarProps\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nIf `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueTextFn\n\n> **ariaValueTextFn**: (`value`, `minimum`, `maximum`) => `undefined` \\| `string`\n\nReturn the value for the 'aria-valuetext' attribute.\n\n##### Parameters\n\n• **value**: `number`\n\ncurrent value\n\n• **minimum**: `number`\n\nminimum value\n\n• **maximum**: `number`\n\nmaximum value\n\n##### Returns\n\n`undefined` \\| `string`\n\n##### Default Value\n\n```ts\n() => undefined\n```\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nLabel of the progress.\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### height\n\n> **height**: `string`\n\nHeight of the progressbar, can be any valid css height value.\n\n##### Default Value\n\n`''`\n\n***\n\n#### max\n\n> **max**: `number`\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### striped\n\n> **striped**: `boolean`\n\nIf `true`, shows a striped progressbar.\n\n##### Default Value\n\n`false`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nGlobal template for the Progressbar.\n\n***\n\n#### type\n\n> **type**: `undefined` \\| `BSContextualClass`\n\nType of the progressbar, following bootstrap types.\n\n***\n\n#### value\n\n> **value**: `number`\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarProps",{"source":22,"name":23},"## interface_ProgressbarState\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nIf `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `undefined` \\| `string`\n\nThe aria value text.\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nLabel of the progress.\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### finished\n\n> **finished**: `boolean`\n\n`true` if the value has reached its maximum value.\n\n***\n\n#### height\n\n> **height**: `string`\n\nHeight of the progressbar, can be any valid css height value.\n\n##### Default Value\n\n`''`\n\n***\n\n#### max\n\n> **max**: `number`\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### percentage\n\n> **percentage**: `number`\n\nPercentage of completion.\n\n***\n\n#### started\n\n> **started**: `boolean`\n\n`true` if the value is above its minimum value.\n\n***\n\n#### striped\n\n> **striped**: `boolean`\n\nIf `true`, shows a striped progressbar.\n\n##### Default Value\n\n`false`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nGlobal template for the Progressbar.\n\n***\n\n#### type\n\n> **type**: `undefined` \\| `BSContextualClass`\n\nType of the progressbar, following bootstrap types.\n\n***\n\n#### value\n\n> **value**: `number`\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarState",{"source":25,"name":26},"## type alias_ProgressbarWidget\n> **ProgressbarWidget**: [`Widget`](../../../../api/react/bootstrap/components/progressbar/../../types#widget)\\\u003C[`ProgressbarProps`](#progressbarprops), [`ProgressbarState`](#progressbarstate), `object`, `object`, [`ProgressbarDirectives`](#progressbardirectives)\\>\n","ProgressbarWidget","@agnos-ui/react-bootstrap/components/progressbar",{"description":29},"API Documentation for progressbar"],"uses":{"params":["framework","component"]}}]}
