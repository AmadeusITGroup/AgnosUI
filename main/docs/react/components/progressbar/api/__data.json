{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,90,132],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/react/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/react/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/react/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/react/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/react/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/react/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/react/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/react/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82,86],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/react/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/react/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/react/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/react/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/react/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/react/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/react/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/react/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/react/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/react/daisyUI/toast/","daisyUI/toast/",{"label":87,"status":59,"path":88,"subpath":51,"slug":89},"Tree","docs/react/daisyUI/tree/","daisyUI/tree/",{"title":91,"submenu":92},"Bootstrap Components",[93,96,100,103,106,109,112,115,118,123,126,129],{"label":7,"status":8,"path":94,"subpath":-1,"slug":95},"docs/react/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":97,"subpath":98,"slug":99},"docs/react/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":101,"subpath":98,"slug":102},"docs/react/components/alert/","components/alert/",{"label":58,"status":59,"path":104,"subpath":98,"slug":105},"docs/react/components/collapse/","components/collapse/",{"label":63,"status":49,"path":107,"subpath":98,"slug":108},"docs/react/components/modal/","components/modal/",{"label":67,"status":49,"path":110,"subpath":98,"slug":111},"docs/react/components/pagination/","components/pagination/",{"label":71,"status":49,"path":113,"subpath":98,"slug":114},"docs/react/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":116,"subpath":98,"slug":117},"docs/react/components/rating/","components/rating/",{"label":119,"status":120,"path":121,"subpath":98,"slug":122},"Select","inprogress","docs/react/components/select/","components/select/",{"label":79,"status":49,"path":124,"subpath":98,"slug":125},"docs/react/components/slider/","components/slider/",{"label":83,"status":49,"path":127,"subpath":98,"slug":128},"docs/react/components/toast/","components/toast/",{"label":87,"status":59,"path":130,"subpath":98,"slug":131},"docs/react/components/tree/","components/tree/",{"title":133,"submenu":134},"Services",[135,138,142,146,150,154,158],{"label":7,"status":8,"path":136,"subpath":-1,"slug":137},"docs/react/services/introduction","services/introduction",{"label":139,"status":8,"path":140,"subpath":-1,"slug":141},"Focustrack","docs/react/services/focustrack","services/focustrack",{"label":143,"status":8,"path":144,"subpath":-1,"slug":145},"Floating UI","docs/react/services/floating-ui","services/floating-ui",{"label":147,"status":8,"path":148,"subpath":-1,"slug":149},"Match Media","docs/react/services/match-media","services/match-media",{"label":151,"status":8,"path":152,"subpath":-1,"slug":153},"Navigation Manager","docs/react/services/navigation-manager","services/navigation-manager",{"label":155,"status":8,"path":156,"subpath":-1,"slug":157},"Resize Observer","docs/react/services/resize-observer","services/resize-observer",{"label":159,"status":8,"path":160,"subpath":-1,"slug":161},"Transition","docs/react/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Progressbar","stable","v0.1.1","bootstrap",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/progressbar/examples",{"title":11,"key":12,"path":13},"Api","api","/components/progressbar/api",{"title":15,"slug":16,"subpath":8},"Pagination","components/pagination/",{"title":18,"slug":19,"subpath":8},"Rating","components/rating/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":11,"import":30},"progressbar",[3,6,9,12,15,18,21,24,27],{"source":4,"name":5},"## function_createProgressbar\n> **createProgressbar**(`props`?): [`ProgressbarWidget`](#progressbarwidget)\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:228\n\nCreate a Progressbar with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../../../../api/react/bootstrap/components/progressbar/../../types#propsconfig)\\\u003C[`ProgressbarProps`](#progressbarprops)\\>\n\n### Returns\n\n[`ProgressbarWidget`](#progressbarwidget)\n\na ProgressbarWidget\n","createProgressbar",{"source":7,"name":8},"## function_getProgressbarDefaultConfig\n> **getProgressbarDefaultConfig**(): [`ProgressbarProps`](#progressbarprops)\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:11\n\nRetrieve a shallow copy of the default Progressbar config\n\n### Returns\n\n[`ProgressbarProps`](#progressbarprops)\n\nthe default Progressbar config\n","getProgressbarDefaultConfig",{"source":10,"name":11},"## function_Progressbar\n> **Progressbar**(`props`): `Element`\n\nDefined in: [react/bootstrap/src/components/progressbar/progressbar.tsx:34](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/react/bootstrap/src/components/progressbar/progressbar.tsx#L34)\n\nProgressbar component that utilizes the useWidgetWithConfig hook to create a progress bar widget.\n\n### Parameters\n\n#### props\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`ProgressbarProps`](#progressbarprops)\\>\n\nThe properties to configure the progress bar.\n\n### Returns\n\n`Element`\n\nA div element containing the progress bar with appropriate ARIA directives and slot content.\n","Progressbar",{"source":13,"name":14},"## interface_ProgressbarContext\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:20\n\nRepresents the context for a Progressbar widget.\nThis interface is used to define the context object that is passed to the Progressbar widget.\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`ProgressbarDirectives`](#progressbardirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`ProgressbarState`](#progressbarstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L88)\n\nthe state of the widget\n","ProgressbarContext",{"source":16,"name":17},"## function_ProgressbarDefaultSlotStructure\n> **ProgressbarDefaultSlotStructure**(`slotContext`): `Element`\n\nDefined in: [react/bootstrap/src/components/progressbar/progressbar.tsx:15](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/react/bootstrap/src/components/progressbar/progressbar.tsx#L15)\n\nRenders a progress bar component with customizable appearance and behavior.\n\n### Parameters\n\n#### slotContext\n\n[`ProgressbarContext`](#progressbarcontext)\n\nThe context containing the state and properties for the progress bar.\n\n### Returns\n\n`Element`\n\nThe rendered progress bar component.\n","ProgressbarDefaultSlotStructure",{"source":19,"name":20},"## interface_ProgressbarDirectives\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:234\n\nInterface representing directives for a progress bar component.\n\n### Properties\n\n#### ariaDirective\n\n> **ariaDirective**: [`Directive`](../../../../api/react/bootstrap/components/progressbar/../../types#directive)\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:239\n\nA directive to be applied to the main container that handles aria attributes.\n","ProgressbarDirectives",{"source":22,"name":23},"## interface_ProgressbarProps\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:123\n\nInterface representing the properties for the Progressbar component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:203\n\nIf `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:164\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueTextFn\n\n> **ariaValueTextFn**: (`value`, `minimum`, `maximum`) => `undefined` \\| `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:136\n\nReturn the value for the 'aria-valuetext' attribute.\n\n##### Parameters\n\n###### value\n\n`number`\n\ncurrent value\n\n###### minimum\n\n`number`\n\nminimum value\n\n###### maximum\n\n`number`\n\nmaximum value\n\n##### Returns\n\n`undefined` \\| `string`\n\n##### Default Value\n\n```ts\n() => undefined\n```\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:181\n\nLabel of the progress.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:171\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### height\n\n> **height**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:188\n\nHeight of the progressbar, can be any valid css height value.\n\n##### Default Value\n\n`''`\n\n***\n\n#### max\n\n> **max**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:150\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:143\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### striped\n\n> **striped**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:195\n\nIf `true`, shows a striped progressbar.\n\n##### Default Value\n\n`false`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:176\n\nGlobal template for the Progressbar.\n\n***\n\n#### type\n\n> **type**: `undefined` \\| `BSContextualClass`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:208\n\nType of the progressbar, following bootstrap types.\n\n***\n\n#### value\n\n> **value**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:157\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarProps",{"source":25,"name":26},"## interface_ProgressbarState\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:25\n\nRepresents the state of a Progressbar component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:112\n\nIf `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:73\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `undefined` \\| `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:45\n\nThe aria value text.\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:90\n\nLabel of the progress.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:80\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### finished\n\n> **finished**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:40\n\n`true` if the value has reached its maximum value.\n\n***\n\n#### height\n\n> **height**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:97\n\nHeight of the progressbar, can be any valid css height value.\n\n##### Default Value\n\n`''`\n\n***\n\n#### max\n\n> **max**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:59\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:52\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### percentage\n\n> **percentage**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:30\n\nPercentage of completion.\n\n***\n\n#### started\n\n> **started**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:35\n\n`true` if the value is above its minimum value.\n\n***\n\n#### striped\n\n> **striped**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:104\n\nIf `true`, shows a striped progressbar.\n\n##### Default Value\n\n`false`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/react/bootstrap/components/progressbar/../../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:85\n\nGlobal template for the Progressbar.\n\n***\n\n#### type\n\n> **type**: `undefined` \\| `BSContextualClass`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:117\n\nType of the progressbar, following bootstrap types.\n\n***\n\n#### value\n\n> **value**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:66\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarState",{"source":28,"name":29},"## type alias_ProgressbarWidget\n> **ProgressbarWidget**: [`Widget`](../../../../api/react/bootstrap/components/progressbar/../../types#widget)\\\u003C[`ProgressbarProps`](#progressbarprops), [`ProgressbarState`](#progressbarstate), `object`, [`ProgressbarDirectives`](#progressbardirectives)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:218\n\nRepresents a Progressbar widget.\n\nThis type defines the structure of a Progressbar widget, including its properties, state, and directives.\n","ProgressbarWidget","@agnos-ui/react-bootstrap/components/progressbar"],"uses":{"params":["framework","component"]}}]}
