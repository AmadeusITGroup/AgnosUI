{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,94,143],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/react/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/react/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/react/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/react/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/react/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/react/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/react/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/react/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,61,65,69,73,77,81,85,89],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/react/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/react/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/react/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":49,"path":59,"subpath":51,"slug":60},"Carousel","docs/react/daisyUI/carousel/","daisyUI/carousel/",{"label":62,"status":49,"path":63,"subpath":51,"slug":64},"Collapse","docs/react/daisyUI/collapse/","daisyUI/collapse/",{"label":66,"status":49,"path":67,"subpath":51,"slug":68},"Modal","docs/react/daisyUI/modal/","daisyUI/modal/",{"label":70,"status":49,"path":71,"subpath":51,"slug":72},"Pagination","docs/react/daisyUI/pagination/","daisyUI/pagination/",{"label":74,"status":49,"path":75,"subpath":51,"slug":76},"Progressbar","docs/react/daisyUI/progressbar/","daisyUI/progressbar/",{"label":78,"status":49,"path":79,"subpath":51,"slug":80},"Rating","docs/react/daisyUI/rating/","daisyUI/rating/",{"label":82,"status":49,"path":83,"subpath":51,"slug":84},"Slider","docs/react/daisyUI/slider/","daisyUI/slider/",{"label":86,"status":49,"path":87,"subpath":51,"slug":88},"Toast","docs/react/daisyUI/toast/","daisyUI/toast/",{"label":90,"status":91,"path":92,"subpath":51,"slug":93},"Tree","beta","docs/react/daisyUI/tree/","daisyUI/tree/",{"title":95,"submenu":96},"Bootstrap Components",[97,100,104,107,110,113,117,120,123,126,129,134,137,140],{"label":7,"status":8,"path":98,"subpath":-1,"slug":99},"docs/react/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":101,"subpath":102,"slug":103},"docs/react/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":105,"subpath":102,"slug":106},"docs/react/components/alert/","components/alert/",{"label":58,"status":49,"path":108,"subpath":102,"slug":109},"docs/react/components/carousel/","components/carousel/",{"label":62,"status":49,"path":111,"subpath":102,"slug":112},"docs/react/components/collapse/","components/collapse/",{"label":114,"status":91,"path":115,"subpath":102,"slug":116},"Drawer","docs/react/components/drawer/","components/drawer/",{"label":66,"status":49,"path":118,"subpath":102,"slug":119},"docs/react/components/modal/","components/modal/",{"label":70,"status":49,"path":121,"subpath":102,"slug":122},"docs/react/components/pagination/","components/pagination/",{"label":74,"status":49,"path":124,"subpath":102,"slug":125},"docs/react/components/progressbar/","components/progressbar/",{"label":78,"status":49,"path":127,"subpath":102,"slug":128},"docs/react/components/rating/","components/rating/",{"label":130,"status":131,"path":132,"subpath":102,"slug":133},"Select","inprogress","docs/react/components/select/","components/select/",{"label":82,"status":49,"path":135,"subpath":102,"slug":136},"docs/react/components/slider/","components/slider/",{"label":86,"status":49,"path":138,"subpath":102,"slug":139},"docs/react/components/toast/","components/toast/",{"label":90,"status":91,"path":141,"subpath":102,"slug":142},"docs/react/components/tree/","components/tree/",{"title":144,"submenu":145},"Services",[146,149,153,157,161,165,169],{"label":7,"status":8,"path":147,"subpath":-1,"slug":148},"docs/react/services/introduction","services/introduction",{"label":150,"status":8,"path":151,"subpath":-1,"slug":152},"Focustrack","docs/react/services/focustrack","services/focustrack",{"label":154,"status":8,"path":155,"subpath":-1,"slug":156},"Floating UI","docs/react/services/floating-ui","services/floating-ui",{"label":158,"status":8,"path":159,"subpath":-1,"slug":160},"Match Media","docs/react/services/match-media","services/match-media",{"label":162,"status":8,"path":163,"subpath":-1,"slug":164},"Navigation Manager","docs/react/services/navigation-manager","services/navigation-manager",{"label":166,"status":8,"path":167,"subpath":-1,"slug":168},"Resize Observer","docs/react/services/resize-observer","services/resize-observer",{"label":170,"status":8,"path":171,"subpath":-1,"slug":172},"Transition","docs/react/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Rating","stable","v0.1.1","standalone",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/rating/examples",{"title":11,"key":12,"path":13},"Api","api","/components/rating/api",{"title":15,"slug":16,"subpath":8},"Progressbar","components/progressbar/",{"title":18,"slug":19,"subpath":8},"Select","components/select/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":11,"import":30},"rating",[3,6,9,12,15,18,21,24,27],{"source":4,"name":5},"## constant_createRating\n> `const` **createRating**: [`WidgetFactory`](../../../../api/react/bootstrap/components/rating/../../types#widgetfactory)\\\u003C[`RatingWidget`](#ratingwidget)\\>\n\n\nCreate a RatingWidget with given config props\n\n### Param\n\nan optional rating config\n\n### Returns\n\na RatingWidget\n","createRating",{"source":7,"name":8},"## constant_getRatingDefaultConfig\n> `const` **getRatingDefaultConfig**: () => [`RatingProps`](#ratingprops)\n\n\nRetrieve a shallow copy of the default Rating config\n\n### Returns\n\n[`RatingProps`](#ratingprops)\n\nthe default Rating config\n","getRatingDefaultConfig",{"source":10,"name":11},"## function_Rating\n> **Rating**(`props`): `Element`\n\n\nRating component that displays a series of stars based on the provided state.\n\n### Parameters\n\n#### props\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`RatingProps`](#ratingprops)\\> & `object`\n\nThe properties for the Rating component.\n\n### Returns\n\n`Element`\n\nThe rendered Rating component.\n\n### Remarks\n\nThis component uses the [useWidget](../../../../api/react/bootstrap/components/rating/../../config#usewidget) hook to initialize and configure the rating widget.\nIt applies directives to the container and individual stars for styling and behavior.\n","Rating",{"source":13,"name":14},"## interface_RatingApi\n\nInterface representing the API that can be performed on a rating component.\n\n### Methods\n\n#### leave\n\n> **leave**(): `void`\n\n\nLeave the rating, resetting the visible rating to the rating value and triggering the onLeave callback\n\n##### Returns\n\n`void`\n\n***\n\n#### setHoveredRating\n\n> **setHoveredRating**(`index`): `void`\n\n\nSets the hovered rating value.\n\n##### Parameters\n\n###### index\n\n`number`\n\nStar index, starting from 1\n\n##### Returns\n\n`void`\n\n***\n\n#### setRating\n\n> **setRating**(`index`): `void`\n\n\nSets the rating value.\n\n##### Parameters\n\n###### index\n\n`number`\n\nStar index, starting from 1\n\n##### Returns\n\n`void`\n","RatingApi",{"source":16,"name":17},"## interface_RatingDirectives\n\nInterface representing directives for a rating component.\n\n### Properties\n\n#### containerDirective\n\n> **containerDirective**: [`Directive`](../../../../api/react/bootstrap/components/rating/../../types#directive)\n\n\nA directive to be applied to the main container\nThis will handle the keydown, mouseleave, tabindex and aria attributes\n\n***\n\n#### starDirective\n\n> **starDirective**: [`Directive`](../../../../api/react/bootstrap/components/rating/../../types#directive)\\\u003C\\{ `index`: `number`; \\}\\>\n\n\nA directive to be applied on each star element\n","RatingDirectives",{"source":19,"name":20},"## interface_RatingProps\n\nRepresents the properties for the Rating component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\n\nThe aria label\n\n##### Default Value\n\n`'Rating'`\n\n***\n\n#### ariaLabelledBy\n\n> **ariaLabelledBy**: `string`\n\n\nThe aria labelled by\n\n##### Default Value\n\n`''`\n\n***\n\n#### ariaValueTextFn\n\n> **ariaValueTextFn**: (`rating`, `maxRating`) => `string`\n\n\nReturn the value for the 'aria-valuetext' attribute.\n\n##### Parameters\n\n###### rating\n\n`number`\n\nCurrent rating value.\n\n###### maxRating\n\n`number`\n\nmaxRating value.\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(rating: number, maxRating: number) => `${rating} out of ${maxRating}`\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\n\nIf `true`, the rating is disabled.\n\n##### Default Value\n\n`false`\n\n***\n\n#### maxRating\n\n> **maxRating**: `number`\n\n\nThe maximum rating that can be given.\n\n##### Default Value\n\n`10`\n\n***\n\n#### onHover\n\n> **onHover**: (`rating`) => `void`\n\n\nAn event emitted when the user is hovering over a given rating.\n\nEvent payload is equal to the rating being hovered over.\n\n##### Parameters\n\n###### rating\n\n`number`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onLeave\n\n> **onLeave**: (`rating`) => `void`\n\n\nAn event emitted when the user stops hovering over a given rating.\n\nEvent payload is equal to the rating of the last item being hovered over.\n\n##### Parameters\n\n###### rating\n\n`number`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onRatingChange\n\n> **onRatingChange**: (`rating`) => `void`\n\n\nAn event emitted when the rating is changed.\n\nEvent payload is equal to the newly selected rating.\n\n##### Parameters\n\n###### rating\n\n`number`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### rating\n\n> **rating**: `number`\n\n\nThe current rating. Could be a decimal value like `3.75`.\n\n##### Default Value\n\n`0`\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\n\nIf `true`, the rating can't be changed.\n\n##### Default Value\n\n`false`\n\n***\n\n#### resettable\n\n> **resettable**: `boolean`\n\n\nDefine if the rating can be reset.\n\nIf set to true, the user can 'unset' the rating value by cliking on the current rating value.\n\n##### Default Value\n\n`true`\n\n***\n\n#### star\n\n> **star**: [`SlotContent`](../../../../api/react/bootstrap/components/rating/../../types#slotcontent)\\\u003C[`StarContext`](#starcontext)\\>\n\n\nThe template to override the way each star is displayed.\n\n##### Default Value\n\n```ts\n({fill}: StarContext) => String.fromCharCode(fill === 100 ? 9733 : 9734)\n```\n\n***\n\n#### tabindex\n\n> **tabindex**: `number`\n\n\nAllows setting a custom rating tabindex.\nIf the component is disabled, `tabindex` will still be set to `-1`.\n\n##### Default Value\n\n`0`\n","RatingProps",{"source":22,"name":23},"## interface_RatingState\n\nRepresents the state of a rating component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\n\nThe aria label\n\n##### Default Value\n\n`'Rating'`\n\n***\n\n#### ariaLabelledBy\n\n> **ariaLabelledBy**: `string`\n\n\nThe aria labelled by\n\n##### Default Value\n\n`''`\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `string`\n\n\nthe aria value of the rating\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\n\nIf `true`, the rating is disabled.\n\n##### Default Value\n\n`false`\n\n***\n\n#### interactive\n\n> **interactive**: `boolean`\n\n\nis the rating interactive i.e. listening to hover, click and keyboard events\n\n***\n\n#### maxRating\n\n> **maxRating**: `number`\n\n\nThe maximum rating that can be given.\n\n##### Default Value\n\n`10`\n\n***\n\n#### rating\n\n> **rating**: `number`\n\n\nThe current rating. Could be a decimal value like `3.75`.\n\n##### Default Value\n\n`0`\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\n\nIf `true`, the rating can't be changed.\n\n##### Default Value\n\n`false`\n\n***\n\n#### resettable\n\n> **resettable**: `boolean`\n\n\nDefine if the rating can be reset.\n\nIf set to true, the user can 'unset' the rating value by cliking on the current rating value.\n\n##### Default Value\n\n`true`\n\n***\n\n#### star\n\n> **star**: [`SlotContent`](../../../../api/react/bootstrap/components/rating/../../types#slotcontent)\\\u003C[`StarContext`](#starcontext)\\>\n\n\nThe template to override the way each star is displayed.\n\n##### Default Value\n\n```ts\n({fill}: StarContext) => String.fromCharCode(fill === 100 ? 9733 : 9734)\n```\n\n***\n\n#### stars\n\n> **stars**: [`StarContext`](#starcontext)[]\n\n\nthe list of stars\n\n***\n\n#### tabindex\n\n> **tabindex**: `number`\n\n\nAllows setting a custom rating tabindex.\nIf the component is disabled, `tabindex` will still be set to `-1`.\n\n##### Default Value\n\n`0`\n\n***\n\n#### visibleRating\n\n> **visibleRating**: `number`\n\n\nthe visible value of the rating (it changes when hovering over the rating even though the real value did not change)\n","RatingState",{"source":25,"name":26},"## type alias_RatingWidget\n> **RatingWidget** = [`Widget`](../../../../api/react/bootstrap/components/rating/../../types#widget)\\\u003C[`RatingProps`](#ratingprops), [`RatingState`](#ratingstate), [`RatingApi`](#ratingapi), [`RatingDirectives`](#ratingdirectives)\\>\n\n\nRepresents a Rating Widget component.\n","RatingWidget",{"source":28,"name":29},"## interface_StarContext\n\nRepresents the context for a star in a rating component.\n\n### Properties\n\n#### fill\n\n> **fill**: `number`\n\n\nindicates how much the current star is filled, from 0 to 100\n\n***\n\n#### index\n\n> **index**: `number`\n\n\nthe position of the star in the rating\n","StarContext","@agnos-ui/react-bootstrap/components/rating"],"uses":{"params":["framework","component"]}}]}
