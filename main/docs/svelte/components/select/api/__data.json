{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,94,143],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/svelte/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/svelte/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/svelte/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/svelte/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/svelte/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/svelte/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/svelte/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/svelte/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,61,65,69,73,77,81,85,89],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/svelte/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/svelte/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/svelte/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":49,"path":59,"subpath":51,"slug":60},"Carousel","docs/svelte/daisyUI/carousel/","daisyUI/carousel/",{"label":62,"status":49,"path":63,"subpath":51,"slug":64},"Collapse","docs/svelte/daisyUI/collapse/","daisyUI/collapse/",{"label":66,"status":49,"path":67,"subpath":51,"slug":68},"Modal","docs/svelte/daisyUI/modal/","daisyUI/modal/",{"label":70,"status":49,"path":71,"subpath":51,"slug":72},"Pagination","docs/svelte/daisyUI/pagination/","daisyUI/pagination/",{"label":74,"status":49,"path":75,"subpath":51,"slug":76},"Progressbar","docs/svelte/daisyUI/progressbar/","daisyUI/progressbar/",{"label":78,"status":49,"path":79,"subpath":51,"slug":80},"Rating","docs/svelte/daisyUI/rating/","daisyUI/rating/",{"label":82,"status":49,"path":83,"subpath":51,"slug":84},"Slider","docs/svelte/daisyUI/slider/","daisyUI/slider/",{"label":86,"status":49,"path":87,"subpath":51,"slug":88},"Toast","docs/svelte/daisyUI/toast/","daisyUI/toast/",{"label":90,"status":91,"path":92,"subpath":51,"slug":93},"Tree","beta","docs/svelte/daisyUI/tree/","daisyUI/tree/",{"title":95,"submenu":96},"Bootstrap Components",[97,100,104,107,110,113,117,120,123,126,129,134,137,140],{"label":7,"status":8,"path":98,"subpath":-1,"slug":99},"docs/svelte/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":101,"subpath":102,"slug":103},"docs/svelte/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":105,"subpath":102,"slug":106},"docs/svelte/components/alert/","components/alert/",{"label":58,"status":49,"path":108,"subpath":102,"slug":109},"docs/svelte/components/carousel/","components/carousel/",{"label":62,"status":49,"path":111,"subpath":102,"slug":112},"docs/svelte/components/collapse/","components/collapse/",{"label":114,"status":91,"path":115,"subpath":102,"slug":116},"Drawer","docs/svelte/components/drawer/","components/drawer/",{"label":66,"status":49,"path":118,"subpath":102,"slug":119},"docs/svelte/components/modal/","components/modal/",{"label":70,"status":49,"path":121,"subpath":102,"slug":122},"docs/svelte/components/pagination/","components/pagination/",{"label":74,"status":49,"path":124,"subpath":102,"slug":125},"docs/svelte/components/progressbar/","components/progressbar/",{"label":78,"status":49,"path":127,"subpath":102,"slug":128},"docs/svelte/components/rating/","components/rating/",{"label":130,"status":131,"path":132,"subpath":102,"slug":133},"Select","inprogress","docs/svelte/components/select/","components/select/",{"label":82,"status":49,"path":135,"subpath":102,"slug":136},"docs/svelte/components/slider/","components/slider/",{"label":86,"status":49,"path":138,"subpath":102,"slug":139},"docs/svelte/components/toast/","components/toast/",{"label":90,"status":91,"path":141,"subpath":102,"slug":142},"docs/svelte/components/tree/","components/tree/",{"title":144,"submenu":145},"Services",[146,149,153,157,161,165,169],{"label":7,"status":8,"path":147,"subpath":-1,"slug":148},"docs/svelte/services/introduction","services/introduction",{"label":150,"status":8,"path":151,"subpath":-1,"slug":152},"Focustrack","docs/svelte/services/focustrack","services/focustrack",{"label":154,"status":8,"path":155,"subpath":-1,"slug":156},"Floating UI","docs/svelte/services/floating-ui","services/floating-ui",{"label":158,"status":8,"path":159,"subpath":-1,"slug":160},"Match Media","docs/svelte/services/match-media","services/match-media",{"label":162,"status":8,"path":163,"subpath":-1,"slug":164},"Navigation Manager","docs/svelte/services/navigation-manager","services/navigation-manager",{"label":166,"status":8,"path":167,"subpath":-1,"slug":168},"Resize Observer","docs/svelte/services/resize-observer","services/resize-observer",{"label":170,"status":8,"path":171,"subpath":-1,"slug":172},"Transition","docs/svelte/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Select","inprogress","v0.1.1","standalone",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/select/examples",{"title":11,"key":12,"path":13},"Api","api","/components/select/api",{"title":15,"slug":16,"subpath":8},"Rating","components/rating/",{"title":18,"slug":19,"subpath":8},"Slider","components/slider/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":33,"import":34},"select",[3,6,9,12,15,18,21,24,27,30],{"source":4,"name":5},"## constant_createSelect\n> `const` **createSelect**: \\\u003C`Item`\\>(`config?`) => [`SelectWidget`](#selectwidget)\\\u003C`Item`\\>\n\n\nCreates a new select widget instance.\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\n### Parameters\n\n#### config?\n\n[`PropsConfig`](../../../../api/svelte/bootstrap/components/select/../../types#propsconfig)\\\u003C[`SelectProps`](#selectprops)\\\u003C`Item`\\>\\>\n\nconfig of the modal, either as a store or as an object containing values or stores.\n\n### Returns\n\n[`SelectWidget`](#selectwidget)\\\u003C`Item`\\>\n\na new select widget instance\n","createSelect",{"source":7,"name":8},"## constant_getSelectDefaultConfig\n> `const` **getSelectDefaultConfig**: () => [`SelectProps`](#selectprops)\\\u003C`any`\\>\n\n\nRetrieve a shallow copy of the default Select config\n\n### Returns\n\n[`SelectProps`](#selectprops)\\\u003C`any`\\>\n\nthe default Select config\n","getSelectDefaultConfig",{"source":10,"name":11},"## interface_ItemContext\n\nItem representation built from the items provided in parameters\n\n### Type Parameters\n\n#### T\n\n`T`\n\nThe type of the Select Items\n\n### Properties\n\n#### id\n\n> **id**: `string`\n\n\nUnique id to identify the item\n\n***\n\n#### item\n\n> **item**: `T`\n\n\nOriginal item given in the parameters\n\n***\n\n#### selected\n\n> **selected**: `boolean`\n\n\nSpecify if the item is checked\n","ItemContext",{"source":13,"name":14},"## interface_SelectApi\n\nInterface representing the API for a Select component.\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\nThe type of the Select Items\n\n### Methods\n\n#### clear\n\n> **clear**(): `void`\n\n\nClear all the selected items\n\n##### Returns\n\n`void`\n\n***\n\n#### clearText\n\n> **clearText**(): `void`\n\n\nClear the filter text\n\n##### Returns\n\n`void`\n\n***\n\n#### close\n\n> **close**(): `void`\n\n\nclose the select\n\n##### Returns\n\n`void`\n\n***\n\n#### highlight\n\n> **highlight**(`item`): `void`\n\n\nHighlight the given item, if there is a corresponding match among the visible list\n\n##### Parameters\n\n###### item\n\n`Item`\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightFirst\n\n> **highlightFirst**(): `void`\n\n\nHighlight the first item among the visible list\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightLast\n\n> **highlightLast**(): `void`\n\n\nHighlight the last item among the visible list\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightNext\n\n> **highlightNext**(): `void`\n\n\nHighlight the next item among the visible list.\nLoop to the first item if needed\n\n##### Returns\n\n`void`\n\n***\n\n#### highlightPrevious\n\n> **highlightPrevious**(): `void`\n\n\nHighlight the previous item among the visible list\nLoop to the last item if needed\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\n\nopen the select\n\n##### Returns\n\n`void`\n\n***\n\n#### select\n\n> **select**(`item`): `void`\n\n\nSelect the provided item.\nThe selected list is used to\n\n##### Parameters\n\n###### item\n\n`Item`\n\nthe item to select\n\n##### Returns\n\n`void`\n\n***\n\n#### toggle\n\n> **toggle**(`isOpen?`): `void`\n\n\nToggle the dropdown menu\n\n##### Parameters\n\n###### isOpen?\n\n`boolean`\n\nIf specified, set the menu in the defined state.\n\n##### Returns\n\n`void`\n\n***\n\n#### toggleItem\n\n> **toggleItem**(`item`, `selected?`): `void`\n\n\nToggle the selection of an item\n\n##### Parameters\n\n###### item\n\n`Item`\n\nthe item to toggle\n\n###### selected?\n\n`boolean`\n\nan optional boolean to enforce the selected/unselected state instead of toggling\n\n##### Returns\n\n`void`\n\n***\n\n#### unselect\n\n> **unselect**(`item`): `void`\n\n\nUnselect the provided item.\n\n##### Parameters\n\n###### item\n\n`Item`\n\nthe item to unselect\n\n##### Returns\n\n`void`\n","SelectApi",{"source":16,"name":17},"## interface_SelectContext\n\nInterface for the slot context of the pagination widget\n\n### Extended by\n\n- [`SelectItemContext`](#selectitemcontext)\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\nThe type of the items in the Select component.\n\n### Properties\n\n#### api\n\n> **api**: [`SelectApi`](#selectapi)\n\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SelectDirectives`](#selectdirectives)\n\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`SelectState`](#selectstate)\\\u003C`Item`\\>\n\n\nthe state of the widget\n","SelectContext",{"source":19,"name":20},"## interface_SelectDirectives\n\nInterface representing the directives used in the Select component.\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\nThe type of the Select Items\n\n### Properties\n\n#### badgeAttributesDirective\n\n> **badgeAttributesDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\\\u003C[`ItemContext`](#itemcontext)\\\u003C`Item`\\>\\>\n\n\nA directive that applies all the necessary attributes to the container badges\n\n***\n\n#### badgeCloseButtonDirective\n\n> **badgeCloseButtonDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\\\u003C[`ItemContext`](#itemcontext)\\\u003C`Item`\\>\\>\n\n\nA directive to be applied to a button that closes a badge\n\n***\n\n#### floatingDirective\n\n> **floatingDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\\\u003C`void`, [`SSRHTMLElement`](../../../../api/svelte/bootstrap/components/select/../../types#ssrhtmlelement)\\>\n\n\nDirective that enables dynamic positioning of menu element\n\n***\n\n#### hasFocusDirective\n\n> **hasFocusDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\n\n\nDirective to be used in the input group and the menu containers\n\n***\n\n#### inputContainerDirective\n\n> **inputContainerDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\n\n\nA directive to be applied to the element that contains the badges and the input\n\n***\n\n#### inputDirective\n\n> **inputDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\n\n\nA directive to be applied to the input\n\n***\n\n#### itemAttributesDirective\n\n> **itemAttributesDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\\\u003C[`ItemContext`](#itemcontext)\\\u003C`Item`\\>\\>\n\n\nA directive that applies all the necessary attributes to the dropdown item\n\n***\n\n#### menuAttributesDirective\n\n> **menuAttributesDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\n\n\nA directive that applies all the necessary attributes to the dropdown menu\n\n***\n\n#### referenceDirective\n\n> **referenceDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/select/../../types#directive)\\\u003C`void`, [`SSRHTMLElement`](../../../../api/svelte/bootstrap/components/select/../../types#ssrhtmlelement)\\>\n\n\nA directive to be applied to the input group element serves as the base for menu positioning\n","SelectDirectives",{"source":22,"name":23},"## interface_SelectItemContext\n\nRepresents the context for a select item, extending the base `SelectContext` with additional\ncontextual data specific to an item.\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\nThe type of the item within the select context.\n\n### Properties\n\n#### api\n\n> **api**: [`SelectApi`](#selectapi)\n\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SelectDirectives`](#selectdirectives)\n\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### itemContext\n\n> **itemContext**: [`ItemContext`](#itemcontext)\\\u003C`Item`\\>\n\n\nContextual data related to an item\n\n***\n\n#### state\n\n> **state**: [`SelectState`](#selectstate)\\\u003C`Item`\\>\n\n\nthe state of the widget\n","SelectItemContext",{"source":25,"name":26},"## interface_SelectProps\n\nRepresents the properties for the Select component.\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\nThe type of the items in the select component.\n\n### Properties\n\n#### allowedPlacements\n\n> **allowedPlacements**: `Placement`[]\n\n\nList of allowed placements for the dropdown.\nThis refers to the [allowedPlacements from floating UI](https://floating-ui.com/docs/autoPlacement#allowedplacements), given the different [Placement possibilities](https://floating-ui.com/docs/computePosition#placement).\n\n##### Default Value\n\n```ts\n['bottom-start', 'top-start', 'bottom-end', 'top-end']\n```\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `undefined` \\| `string`\n\n\naria-label used for the input inside the select\n\n##### Default Value\n\n`'Select'`\n\n***\n\n#### badgeClassName\n\n> **badgeClassName**: `string`\n\n\nClass to be added on selected items (displayed in the input zone)\n\n##### Default Value\n\n`''`\n\n***\n\n#### badgeLabel\n\n> **badgeLabel**: [`SlotContent`](../../../../api/svelte/bootstrap/components/select/../../types#slotcontent)\\\u003C[`SelectItemContext`](#selectitemcontext)\\\u003C`Item`\\>\\>\n\n\nThe template to override the way each badge on the left of the input is displayed.\nThis define the content of the badge inside the badge container.\n\n##### Default Value\n\n```ts\n({itemContext}: SelectItemContext\u003Cany>) => itemContext.item\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\n\ntrue if the select is disabled\n\n##### Default Value\n\n`false`\n\n***\n\n#### filterText\n\n> **filterText**: `string`\n\n\nFiltered text to be display in the filter input\n\n##### Default Value\n\n`''`\n\n***\n\n#### id\n\n> **id**: `undefined` \\| `string`\n\n\nid used for the input inside the select\n\n***\n\n#### itemLabel\n\n> **itemLabel**: [`SlotContent`](../../../../api/svelte/bootstrap/components/select/../../types#slotcontent)\\\u003C[`SelectItemContext`](#selectitemcontext)\\\u003C`Item`\\>\\>\n\n\nThe template to override the way each item is displayed in the list.\nThis define the content of the badge inside the badge container.\n\n##### Default Value\n\n```ts\n({itemContext}: SelectItemContext\u003Cany>) => itemContext.item\n```\n\n***\n\n#### items\n\n> **items**: `Item`[]\n\n\nList of available items for the dropdown\n\n##### Default Value\n\n`[]`\n\n***\n\n#### loading\n\n> **loading**: `boolean`\n\n\ntrue if a loading process is being done\n\n##### Default Value\n\n`false`\n\n***\n\n#### menuClassName\n\n> **menuClassName**: `string`\n\n\nClass to be added on the dropdown menu container\n\n##### Default Value\n\n`''`\n\n***\n\n#### menuItemClassName\n\n> **menuItemClassName**: `string`\n\n\nClass to be added on menu items\n\n##### Default Value\n\n`''`\n\n***\n\n#### open\n\n> **open**: `boolean`\n\n\ntrue if the select is open\n\n##### Default Value\n\n`false`\n\n***\n\n#### selected\n\n> **selected**: `Item`[]\n\n\nList of selected item ids\n\n##### Default Value\n\n`[]`\n\n### Methods\n\n#### itemIdFn\n\n> **itemIdFn**(`item`): `string`\n\n\nCustom function to get the id of an item\nBy default, the item is returned\n\n##### Parameters\n\n###### item\n\n`Item`\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(item: any) => '' + item\n```\n\n***\n\n#### navSelector\n\n> **navSelector**(`node`): `NodeListOf`\\\u003C[`HTMLInputElement`](https://developer.mozilla.org/docs/Web/API/HTMLInputElement) \\| [`HTMLSpanElement`](https://developer.mozilla.org/docs/Web/API/HTMLSpanElement)\\>\n\n\nRetrieves navigable elements within an HTML element containing badges and the input.\n\n##### Parameters\n\n###### node\n\n[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\nHTMLElement that contains the badges and the input\n\n##### Returns\n\n`NodeListOf`\\\u003C[`HTMLInputElement`](https://developer.mozilla.org/docs/Web/API/HTMLInputElement) \\| [`HTMLSpanElement`](https://developer.mozilla.org/docs/Web/API/HTMLSpanElement)\\>\n\n##### Default Value\n\n```ts\n(node: HTMLElement) => node.querySelectorAll('.au-select-badge,input')\n```\n\n***\n\n#### onFilterTextChange\n\n> **onFilterTextChange**(`text`): `void`\n\n\nCallback called when the text filter change\n\n##### Parameters\n\n###### text\n\n`string`\n\nFiltered text\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onOpenChange\n\n> **onOpenChange**(`isOpen`): `void`\n\n\nCallback called dropdown open state change\n\n##### Parameters\n\n###### isOpen\n\n`boolean`\n\nupdated open state\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onSelectedChange\n\n> **onSelectedChange**(`selected`): `void`\n\n\nCallback called when the selection change\n\n##### Parameters\n\n###### selected\n\n`Item`[]\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n","SelectProps",{"source":28,"name":29},"## interface_SelectState\n\nRepresents the state of a Select component.\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\nThe type of the items in the select component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `undefined` \\| `string`\n\n\naria-label used for the input inside the select\n\n##### Default Value\n\n`'Select'`\n\n***\n\n#### badgeClassName\n\n> **badgeClassName**: `string`\n\n\nClass to be added on selected items (displayed in the input zone)\n\n##### Default Value\n\n`''`\n\n***\n\n#### badgeLabel\n\n> **badgeLabel**: [`SlotContent`](../../../../api/svelte/bootstrap/components/select/../../types#slotcontent)\\\u003C[`SelectItemContext`](#selectitemcontext)\\\u003C`Item`\\>\\>\n\n\nThe template to override the way each badge on the left of the input is displayed.\nThis define the content of the badge inside the badge container.\n\n##### Default Value\n\n```ts\n({itemContext}: SelectItemContext\u003Cany>) => itemContext.item\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\n\ntrue if the select is disabled\n\n##### Default Value\n\n`false`\n\n***\n\n#### filterText\n\n> **filterText**: `string`\n\n\nFiltered text to be display in the filter input\n\n##### Default Value\n\n`''`\n\n***\n\n#### highlighted\n\n> **highlighted**: `undefined` \\| [`ItemContext`](#itemcontext)\\\u003C`Item`\\>\n\n\nHighlighted item context.\nIt is designed to define the highlighted item in the dropdown menu\n\n***\n\n#### id\n\n> **id**: `undefined` \\| `string`\n\n\nid used for the input inside the select\n\n***\n\n#### itemLabel\n\n> **itemLabel**: [`SlotContent`](../../../../api/svelte/bootstrap/components/select/../../types#slotcontent)\\\u003C[`SelectItemContext`](#selectitemcontext)\\\u003C`Item`\\>\\>\n\n\nThe template to override the way each item is displayed in the list.\nThis define the content of the badge inside the badge container.\n\n##### Default Value\n\n```ts\n({itemContext}: SelectItemContext\u003Cany>) => itemContext.item\n```\n\n***\n\n#### loading\n\n> **loading**: `boolean`\n\n\ntrue if a loading process is being done\n\n##### Default Value\n\n`false`\n\n***\n\n#### menuClassName\n\n> **menuClassName**: `string`\n\n\nClass to be added on the dropdown menu container\n\n##### Default Value\n\n`''`\n\n***\n\n#### menuItemClassName\n\n> **menuItemClassName**: `string`\n\n\nClass to be added on menu items\n\n##### Default Value\n\n`''`\n\n***\n\n#### open\n\n> **open**: `boolean`\n\n\ntrue if the select is open\n\n##### Default Value\n\n`false`\n\n***\n\n#### placement\n\n> **placement**: `undefined` \\| `Placement`\n\n\nCurrent placement of the dropdown\n\n***\n\n#### selected\n\n> **selected**: `Item`[]\n\n\nList of selected item ids\n\n##### Default Value\n\n`[]`\n\n***\n\n#### selectedContexts\n\n> **selectedContexts**: [`ItemContext`](#itemcontext)\\\u003C`Item`\\>[]\n\n\nList of selected items to be display\n\n***\n\n#### visibleItems\n\n> **visibleItems**: [`ItemContext`](#itemcontext)\\\u003C`Item`\\>[]\n\n\nList of item contexts, to be displayed in the menu\n","SelectState",{"source":31,"name":32},"## type alias_SelectWidget\n> **SelectWidget**\\\u003C`Item`\\> = [`Widget`](../../../../api/svelte/bootstrap/components/select/../../types#widget)\\\u003C[`SelectProps`](#selectprops)\\\u003C`Item`\\>, [`SelectState`](#selectstate)\\\u003C`Item`\\>, [`SelectApi`](#selectapi)\\\u003C`Item`\\>, [`SelectDirectives`](#selectdirectives)\\\u003C`Item`\\>\\>\n\n\nRepresents a Select widget component.\n\n### Type Parameters\n\n#### Item\n\n`Item`\n\nThe type of the items that the select widget will handle.\n","SelectWidget","Select","@agnos-ui/svelte-bootstrap/components/select"],"uses":{"params":["framework","component"]}}]}
