{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,90,132],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/svelte/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/svelte/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/svelte/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/svelte/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/svelte/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/svelte/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/svelte/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/svelte/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82,86],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/svelte/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/svelte/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/svelte/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/svelte/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/svelte/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/svelte/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/svelte/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/svelte/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/svelte/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/svelte/daisyUI/toast/","daisyUI/toast/",{"label":87,"status":59,"path":88,"subpath":51,"slug":89},"Tree","docs/svelte/daisyUI/tree/","daisyUI/tree/",{"title":91,"submenu":92},"Bootstrap Components",[93,96,100,103,106,109,112,115,118,123,126,129],{"label":7,"status":8,"path":94,"subpath":-1,"slug":95},"docs/svelte/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":97,"subpath":98,"slug":99},"docs/svelte/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":101,"subpath":98,"slug":102},"docs/svelte/components/alert/","components/alert/",{"label":58,"status":59,"path":104,"subpath":98,"slug":105},"docs/svelte/components/collapse/","components/collapse/",{"label":63,"status":49,"path":107,"subpath":98,"slug":108},"docs/svelte/components/modal/","components/modal/",{"label":67,"status":49,"path":110,"subpath":98,"slug":111},"docs/svelte/components/pagination/","components/pagination/",{"label":71,"status":49,"path":113,"subpath":98,"slug":114},"docs/svelte/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":116,"subpath":98,"slug":117},"docs/svelte/components/rating/","components/rating/",{"label":119,"status":120,"path":121,"subpath":98,"slug":122},"Select","inprogress","docs/svelte/components/select/","components/select/",{"label":79,"status":49,"path":124,"subpath":98,"slug":125},"docs/svelte/components/slider/","components/slider/",{"label":83,"status":49,"path":127,"subpath":98,"slug":128},"docs/svelte/components/toast/","components/toast/",{"label":87,"status":59,"path":130,"subpath":98,"slug":131},"docs/svelte/components/tree/","components/tree/",{"title":133,"submenu":134},"Services",[135,138,142,146,150,154,158],{"label":7,"status":8,"path":136,"subpath":-1,"slug":137},"docs/svelte/services/introduction","services/introduction",{"label":139,"status":8,"path":140,"subpath":-1,"slug":141},"Focustrack","docs/svelte/services/focustrack","services/focustrack",{"label":143,"status":8,"path":144,"subpath":-1,"slug":145},"Floating UI","docs/svelte/services/floating-ui","services/floating-ui",{"label":147,"status":8,"path":148,"subpath":-1,"slug":149},"Match Media","docs/svelte/services/match-media","services/match-media",{"label":151,"status":8,"path":152,"subpath":-1,"slug":153},"Navigation Manager","docs/svelte/services/navigation-manager","services/navigation-manager",{"label":155,"status":8,"path":156,"subpath":-1,"slug":157},"Resize Observer","docs/svelte/services/resize-observer","services/resize-observer",{"label":159,"status":8,"path":160,"subpath":-1,"slug":161},"Transition","docs/svelte/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Modal","stable","v0.1.1","bootstrap",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/modal/examples",{"title":11,"key":12,"path":13},"Api","api","/components/modal/api",{"title":15,"slug":16,"subpath":8},"Collapse","components/collapse/",{"title":18,"slug":19,"subpath":8},"Pagination","components/pagination/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":39,"import":40},"modal",[3,6,9,12,15,18,21,24,27,30,33,36],{"source":4,"name":5},"## function_createModal\n> **createModal**\\\u003C`Data`\\>(`config`?): [`ModalWidget`](#modalwidget)\\\u003C`Data`\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:380\n\nCreates a new modal widget instance.\n\n### Type Parameters\n\n• **Data**\n\n### Parameters\n\n#### config?\n\n[`PropsConfig`](../../../../api/svelte/bootstrap/components/modal/../../types#propsconfig)\\\u003C[`ModalProps`](#modalprops)\\\u003C`Data`\\>\\>\n\nconfig of the modal, either as a store or as an object containing values or stores.\n\n### Returns\n\n[`ModalWidget`](#modalwidget)\\\u003C`Data`\\>\n\na new modal widget instance\n","createModal",{"source":7,"name":8},"## function_getModalDefaultConfig\n> **getModalDefaultConfig**(): [`ModalProps`](#modalprops)\\\u003C`any`\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:10\n\nRetrieve a shallow copy of the default modal config\n\n### Returns\n\n[`ModalProps`](#modalprops)\\\u003C`any`\\>\n\nthe default modal config\n","getModalDefaultConfig",{"source":10,"name":11},"## interface_ModalApi\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:340\n\nInterface representing the API for a modal component.\n\n### Type Parameters\n\n• **Data**\n\nThe type of data associated with the modal.\n\n### Properties\n\n#### patch\n\n> **patch**: (`parameters`) => `void`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:345\n\nMethod to change some modal properties.\n\nModify the parameter values, and recalculate the stores accordingly\n\n##### Parameters\n\n###### parameters\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`ModalProps`](#modalprops)\\\u003C`Data`\\>\\>\n\n##### Returns\n\n`void`\n\n### Methods\n\n#### close\n\n> **close**(`result`?): `void`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:353\n\nCloses the modal with the given result.\n\n##### Parameters\n\n###### result?\n\n`any`\n\nresult of the modal, as passed in the [result](#modalbeforecloseevent-result) property of the event passed to the\n[onBeforeClose](#modalprops-onbeforeclose) event handler (and possibly changed by it) and resolved by the promise returned by the [open](#modalapi-open) method.\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`any`\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:361\n\nOpens the modal and returns a promise that is resolved when the modal is closed.\nThe resolved value is the result passed to the [close](#modalapi-close) method and possibly changed by the\n[onBeforeClose](#modalprops-onbeforeclose) event handler\n\n##### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`any`\\>\n","ModalApi",{"source":13,"name":14},"## interface_ModalBeforeCloseEvent\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:404\n\nType of the parameter of [onBeforeClose](#modalprops-onbeforeclose).\n\n### Properties\n\n#### cancel\n\n> **cancel**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:418\n\nWhether to cancel the close of the modal.\nIt can be changed from the [onBeforeClose](#modalprops-onbeforeclose) event handler.\n\n***\n\n#### result\n\n> **result**: `any`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:411\n\nResult of the modal, which is the value passed to the [close](#modalapi-close) method\nand later resolved by the promise returned by the [open](#modalapi-open) method.\nIf needed, it can be changed from the [onBeforeClose](#modalprops-onbeforeclose) event handler.\n","ModalBeforeCloseEvent",{"source":16,"name":17},"## constant_modalCloseButtonClick\n> `const` **modalCloseButtonClick**: *typeof* `modalCloseButtonClick`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:398\n\nValue present in the [result](#modalbeforecloseevent-result) property of the [onBeforeClose](#modalprops-onbeforeclose) event\nand returned by the [open](#modalapi-open) method, when the modal is closed by a click on the close button.\n","modalCloseButtonClick",{"source":19,"name":20},"## interface_ModalContext\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:20\n\nRepresents the context for a modal component.\n\n### Type Parameters\n\n• **Data**\n\nThe type of data associated with the modal.\n\n### Properties\n\n#### api\n\n> **api**: [`ModalApi`](#modalapi)\\\u003C`Data`\\>\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`ModalDirectives`](#modaldirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`ModalState`](#modalstate)\\\u003C`Data`\\>\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L88)\n\nthe state of the widget\n","ModalContext",{"source":22,"name":23},"## interface_ModalDirectives\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:424\n\nDirectives of the modal widget.\n\n### Properties\n\n#### backdropDirective\n\n> **backdropDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/modal/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:435\n\nDirective to put on the backdrop DOM element.\n\n***\n\n#### backdropPortalDirective\n\n> **backdropPortalDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/modal/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:447\n\nPortal directive to put on the backdrop DOM element.\n\n***\n\n#### closeButtonDirective\n\n> **closeButtonDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/modal/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:453\n\nDirective that adds all the necessary attributes to the close button\n\n***\n\n#### dialogDirective\n\n> **dialogDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/modal/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:458\n\nDirective to apply to the dialog element when using the native [HTMLDialogElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement)\n\n***\n\n#### modalDirective\n\n> **modalDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/modal/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:429\n\nDirective to put on the modal DOM element.\n\n***\n\n#### modalPortalDirective\n\n> **modalPortalDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/modal/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:441\n\nPortal directive to put on the modal DOM element.\n","ModalDirectives",{"source":25,"name":26},"## constant_modalOutsideClick\n> `const` **modalOutsideClick**: *typeof* `modalOutsideClick`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:389\n\nValue present in the [result](#modalbeforecloseevent-result) property of the [onBeforeClose](#modalprops-onbeforeclose) event\nand returned by the [open](#modalapi-open) method, when the modal is closed by a click inside the viewport but outside the modal.\n","modalOutsideClick",{"source":28,"name":29},"## interface_ModalProps\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:152\n\nInterface representing the properties for a modal component.\n\n### Type Parameters\n\n• **Data**\n\nThe type of data that the modal will handle.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:174\n\nWhether the modal and its backdrop (if present) should be animated when shown or hidden.\n\n##### Default Value\n\n`true`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:246\n\nValue of the aria-label attribute to put on the close button.\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### backdrop\n\n> **backdrop**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:182\n\nWhether a backdrop should be created behind the modal.\n\n##### Default Value\n\n`true`\n\n***\n\n#### backdropClass\n\n> **backdropClass**: `string`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:254\n\nClasses to add on the backdrop DOM element.\n\n##### Default Value\n\n`''`\n\n***\n\n#### backdropTransition\n\n> **backdropTransition**: [`TransitionFn`](../../../../api/svelte/bootstrap/components/modal/../../services/transitions/baseTransitions#transitionfn)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:159\n\nThe transition to use for the backdrop behind the modal (if present).\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:300\n\nBody of the modal.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:290\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### closeButton\n\n> **closeButton**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:262\n\nWhether to display the close button.\n\n##### Default Value\n\n`true`\n\n***\n\n#### closeOnOutsideClick\n\n> **closeOnOutsideClick**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:190\n\nWhether the modal should be closed when clicking on the viewport outside the modal.\n\n##### Default Value\n\n`true`\n\n***\n\n#### container\n\n> **container**: `null` \\| [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:275\n\nWhich element should contain the modal and backdrop DOM elements.\nIf it is not null, the modal and backdrop DOM elements are moved to the specified container.\nOtherwise, they stay where the widget is located.\n\n##### Default Value\n\n```ts\ntypeof window !== 'undefined' ? document.body : null\n```\n\n***\n\n#### contentData\n\n> **contentData**: `Data`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:295\n\nData to use in content slots\n\n***\n\n#### footer\n\n> **footer**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:306\n\nFooter of the modal.\n\n***\n\n#### fullscreen\n\n> **fullscreen**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:332\n\nOption to create a fullscreen modal, according to the bootstrap documentation.\n\n##### Default Value\n\n`false`\n\n***\n\n#### header\n\n> **header**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:312\n\nHeader of the modal. The default header includes [title](#modalprops-title).\n\n***\n\n#### modalTransition\n\n> **modalTransition**: [`TransitionFn`](../../../../api/svelte/bootstrap/components/modal/../../services/transitions/baseTransitions#transitionfn)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:167\n\nThe transition to use for the modal.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### onBeforeClose\n\n> **onBeforeClose**: (`event`) => `void`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:204\n\nEvent to be triggered when the modal is about to be closed (i.e. the [close](#modalapi-close) method was called).\n\n##### Parameters\n\n###### event\n\n[`ModalBeforeCloseEvent`](#modalbeforecloseevent)\n\nevent giving access to the argument given to the [close](#modalapi-close) method and allowing\nto cancel the close process.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:228\n\nEvent to be triggered when the transition is completed and the modal is not visible.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:239\n\nEvent to be triggered when the transition is completed and the modal is visible.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:217\n\nEvent to be triggered when the visible property changes.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\nnew value of the visible propery\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:319\n\nStructure of the modal.\nThe default structure uses [header](#modalprops-header), [children](#modalprops-children) and [footer](#modalprops-footer).\n\n***\n\n#### title\n\n> **title**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:325\n\nTitle of the modal.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:283\n\nWhether the modal should be visible when the transition is completed.\n\n##### Default Value\n\n`false`\n","ModalProps",{"source":31,"name":32},"## interface_ModalState\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:27\n\nRepresents the state of a modal component.\n\n### Type Parameters\n\n• **Data**\n\nThe type of the data associated with the modal.\n\n### Properties\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:58\n\nValue of the aria-label attribute to put on the close button.\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### backdropClass\n\n> **backdropClass**: `string`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:66\n\nClasses to add on the backdrop DOM element.\n\n##### Default Value\n\n`''`\n\n***\n\n#### backdropHidden\n\n> **backdropHidden**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:33\n\nWhether the backdrop is fully hidden. This can be true either because [backdrop](#modalprops-backdrop) is false or\nbecause [visible](#modalprops-visible-2) is false and there is no current transition.\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:112\n\nBody of the modal.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:102\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### closeButton\n\n> **closeButton**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:74\n\nWhether to display the close button.\n\n##### Default Value\n\n`true`\n\n***\n\n#### container\n\n> **container**: `null` \\| [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:87\n\nWhich element should contain the modal and backdrop DOM elements.\nIf it is not null, the modal and backdrop DOM elements are moved to the specified container.\nOtherwise, they stay where the widget is located.\n\n##### Default Value\n\n```ts\ntypeof window !== 'undefined' ? document.body : null\n```\n\n***\n\n#### contentData\n\n> **contentData**: `Data`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:107\n\nData to use in content slots\n\n***\n\n#### footer\n\n> **footer**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:118\n\nFooter of the modal.\n\n***\n\n#### fullscreen\n\n> **fullscreen**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:144\n\nOption to create a fullscreen modal, according to the bootstrap documentation.\n\n##### Default Value\n\n`false`\n\n***\n\n#### header\n\n> **header**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:124\n\nHeader of the modal. The default header includes [title](#modalprops-title).\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:39\n\nWhether the modal is fully hidden.\n\n***\n\n#### modalElement\n\n> **modalElement**: `null` \\| [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:51\n\nDOM element of the modal.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:131\n\nStructure of the modal.\nThe default structure uses [header](#modalprops-header), [children](#modalprops-children) and [footer](#modalprops-footer).\n\n***\n\n#### title\n\n> **title**: [`SlotContent`](../../../../api/svelte/bootstrap/components/modal/../../types#slotcontent)\\\u003C[`ModalContext`](#modalcontext)\\\u003C`Data`\\>\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:137\n\nTitle of the modal.\n\n***\n\n#### transitioning\n\n> **transitioning**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:45\n\nWhether there is an active transition to either display or hide the modal.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:95\n\nWhether the modal should be visible when the transition is completed.\n\n##### Default Value\n\n`false`\n","ModalState",{"source":34,"name":35},"## type alias_ModalWidget\n> **ModalWidget**\\\u003C`Data`\\>: [`Widget`](../../../../api/svelte/bootstrap/components/modal/../../types#widget)\\\u003C[`ModalProps`](#modalprops)\\\u003C`Data`\\>, [`ModalState`](#modalstate)\\\u003C`Data`\\>, [`ModalApi`](#modalapi)\\\u003C`Data`\\>, [`ModalDirectives`](#modaldirectives)\\>\n\nDefined in: svelte/bootstrap/src/components/modal/modal.gen.ts:371\n\nRepresents a modal widget with specific data type.\n\n### Type Parameters\n\n• **Data**\n\nThe type of data that the modal widget will handle.\n","ModalWidget",{"source":37,"name":38},"## function_openModal\n> **openModal**\\\u003C`Data`\\>(`options`, `context`): [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`any`\\>\n\nDefined in: [svelte/bootstrap/src/components/modal/modalService.ts:23](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/svelte/bootstrap/src/components/modal/modalService.ts#L23)\n\nOpens a modal dialog with the specified options.\n\n### Type Parameters\n\n• **Data**\n\nThe type of data that the modal will handle.\n\n### Parameters\n\n#### options\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`ModalProps`](#modalprops)\\\u003C`Data`\\>\\>\n\nThe options to configure the modal.\n\n#### context\n\nOptional context to pass to the modal.\n\n##### context\n\n[`Map`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map)\\\u003C`any`, `any`\\>\n\nA map of context values to pass to the modal.\n\n### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`any`\\>\n\nA promise that resolves when the modal is closed.\n\n### Example\n\n```typescript\nconst result = await openModal\u003CMyDataType>({\n  title: 'My Modal Title',\n  content: 'This is the content of the modal.'\n});\nconsole.log(result);\n```\n","openModal","Modal","@agnos-ui/svelte-bootstrap/components/modal"],"uses":{"params":["framework","component"]}}]}
