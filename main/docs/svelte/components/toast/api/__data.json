{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,90,132],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/svelte/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/svelte/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/svelte/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/svelte/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/svelte/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/svelte/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/svelte/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/svelte/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82,86],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/svelte/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/svelte/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/svelte/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/svelte/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/svelte/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/svelte/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/svelte/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/svelte/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/svelte/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/svelte/daisyUI/toast/","daisyUI/toast/",{"label":87,"status":59,"path":88,"subpath":51,"slug":89},"Tree","docs/svelte/daisyUI/tree/","daisyUI/tree/",{"title":91,"submenu":92},"Bootstrap Components",[93,96,100,103,106,109,112,115,118,123,126,129],{"label":7,"status":8,"path":94,"subpath":-1,"slug":95},"docs/svelte/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":97,"subpath":98,"slug":99},"docs/svelte/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":101,"subpath":98,"slug":102},"docs/svelte/components/alert/","components/alert/",{"label":58,"status":59,"path":104,"subpath":98,"slug":105},"docs/svelte/components/collapse/","components/collapse/",{"label":63,"status":49,"path":107,"subpath":98,"slug":108},"docs/svelte/components/modal/","components/modal/",{"label":67,"status":49,"path":110,"subpath":98,"slug":111},"docs/svelte/components/pagination/","components/pagination/",{"label":71,"status":49,"path":113,"subpath":98,"slug":114},"docs/svelte/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":116,"subpath":98,"slug":117},"docs/svelte/components/rating/","components/rating/",{"label":119,"status":120,"path":121,"subpath":98,"slug":122},"Select","inprogress","docs/svelte/components/select/","components/select/",{"label":79,"status":49,"path":124,"subpath":98,"slug":125},"docs/svelte/components/slider/","components/slider/",{"label":83,"status":49,"path":127,"subpath":98,"slug":128},"docs/svelte/components/toast/","components/toast/",{"label":87,"status":59,"path":130,"subpath":98,"slug":131},"docs/svelte/components/tree/","components/tree/",{"title":133,"submenu":134},"Services",[135,138,142,146,150,154,158],{"label":7,"status":8,"path":136,"subpath":-1,"slug":137},"docs/svelte/services/introduction","services/introduction",{"label":139,"status":8,"path":140,"subpath":-1,"slug":141},"Focustrack","docs/svelte/services/focustrack","services/focustrack",{"label":143,"status":8,"path":144,"subpath":-1,"slug":145},"Floating UI","docs/svelte/services/floating-ui","services/floating-ui",{"label":147,"status":8,"path":148,"subpath":-1,"slug":149},"Match Media","docs/svelte/services/match-media","services/match-media",{"label":151,"status":8,"path":152,"subpath":-1,"slug":153},"Navigation Manager","docs/svelte/services/navigation-manager","services/navigation-manager",{"label":155,"status":8,"path":156,"subpath":-1,"slug":157},"Resize Observer","docs/svelte/services/resize-observer","services/resize-observer",{"label":159,"status":8,"path":160,"subpath":-1,"slug":161},"Transition","docs/svelte/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":14,"next":17},"Toast","stable","v0.2.0","bootstrap",[6,10],{"title":7,"key":8,"path":9},"Examples","examples","/components/toast/examples",{"title":11,"key":12,"path":13},"Api","api","/components/toast/api",{"title":15,"slug":16,"subpath":8},"Slider","components/slider/",{"title":18,"slug":19,"subpath":8},"Tree","components/tree/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":27,"import":28},"toast",[3,6,9,12,15,18,21,24],{"source":4,"name":5},"## function_createToast\n> **createToast**(`props`?): [`ToastWidget`](#toastwidget)\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:233\n\nCreate an ToastWidget with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../../../../api/svelte/bootstrap/components/toast/../../types#propsconfig)\\\u003C[`ToastProps`](#toastprops)\\>\n\n### Returns\n\n[`ToastWidget`](#toastwidget)\n\nan ToastWidget\n","createToast",{"source":7,"name":8},"## function_getToastDefaultConfig\n> **getToastDefaultConfig**(): [`ToastProps`](#toastprops)\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:11\n\nRetrieve a shallow copy of the default Toast config\n\n### Returns\n\n[`ToastProps`](#toastprops)\n\nthe default Toast config\n","getToastDefaultConfig",{"source":10,"name":11},"## interface_ToastApi\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:239\n\nRepresents the API for the toast component.\n\n### Methods\n\n#### close\n\n> **close**(): `void`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:244\n\nTriggers alert closing programmatically (same as clicking on the close button (Ã—)).\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:250\n\nTriggers the alert to be displayed for the user.\n\n##### Returns\n\n`void`\n","ToastApi",{"source":13,"name":14},"## interface_ToastContext\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:20\n\nRepresents the context for a Toast widget.\nThis interface is an alias for `WidgetSlotContext\u003CToastWidget>`.\n\n### Properties\n\n#### api\n\n> **api**: [`ToastApi`](#toastapi)\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`ToastDirectives`](#toastdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`ToastState`](#toaststate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L88)\n\nthe state of the widget\n","ToastContext",{"source":16,"name":17},"## interface_ToastDirectives\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:256\n\nInterface representing the directives for a toast component.\n\n### Properties\n\n#### autoHideDirective\n\n> **autoHideDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/toast/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:266\n\nDirective that handles the autohide of the toast component\n\n***\n\n#### bodyDirective\n\n> **bodyDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/toast/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:271\n\nDirective that adds all the necessary attributes to the body\n\n***\n\n#### closeButtonDirective\n\n> **closeButtonDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/toast/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:276\n\nDirective that adds all the necessary attributes to the close button depending on the presence of the header\n\n***\n\n#### transitionDirective\n\n> **transitionDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/toast/../../types#directive)\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:261\n\nthe transition directive, piloting what is the visual effect of going from hidden to visible\n","ToastDirectives",{"source":19,"name":20},"## interface_ToastProps\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:95\n\nInterface representing the properties for the Toast component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:157\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (Ã—),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:147\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:180\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### autoHide\n\n> **autoHide**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:194\n\nIf `true` automatically hides the toast after the delay.\n\n##### Default Value\n\n`true`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/svelte/bootstrap/components/toast/../../types#slotcontent)\\\u003C[`ToastContext`](#toastcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:211\n\nTemplate for the toast content\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:187\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### delay\n\n> **delay**: `number`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:201\n\nDelay in milliseconds before hiding the toast.\n\n##### Default Value\n\n`5000`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:165\n\nIf `true`, alert can be dismissed by the user.\nThe close button (Ã—) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### header\n\n> **header**: [`SlotContent`](../../../../api/svelte/bootstrap/components/toast/../../types#slotcontent)\\\u003C[`ToastContext`](#toastcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:216\n\nHeader template for the toast component\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:125\n\nCallback called when the alert is hidden.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:136\n\nCallback called when the alert is shown.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:114\n\nCallback called when the alert visibility changed.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/toast/../../types#slotcontent)\\\u003C[`ToastContext`](#toastcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:206\n\nGlobal template for the toast component\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](../../../../api/svelte/bootstrap/components/toast/../../services/transitions/baseTransitions#transitionfn)\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:104\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:172\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","ToastProps",{"source":22,"name":23},"## interface_ToastState\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:25\n\nRepresents the state of a Toast component.\n\n### Properties\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:53\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### autoHide\n\n> **autoHide**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:67\n\nIf `true` automatically hides the toast after the delay.\n\n##### Default Value\n\n`true`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../../../../api/svelte/bootstrap/components/toast/../../types#slotcontent)\\\u003C[`ToastContext`](#toastcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:84\n\nTemplate for the toast content\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:60\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### delay\n\n> **delay**: `number`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:74\n\nDelay in milliseconds before hiding the toast.\n\n##### Default Value\n\n`5000`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:38\n\nIf `true`, alert can be dismissed by the user.\nThe close button (Ã—) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### header\n\n> **header**: [`SlotContent`](../../../../api/svelte/bootstrap/components/toast/../../types#slotcontent)\\\u003C[`ToastContext`](#toastcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:89\n\nHeader template for the toast component\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:30\n\nIs `true` when the alert is hidden. Compared to `visible`, this is updated after the transition is executed.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/toast/../../types#slotcontent)\\\u003C[`ToastContext`](#toastcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:79\n\nGlobal template for the toast component\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:45\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","ToastState",{"source":25,"name":26},"## type alias_ToastWidget\n> **ToastWidget**: [`Widget`](../../../../api/svelte/bootstrap/components/toast/../../types#widget)\\\u003C[`ToastProps`](#toastprops), [`ToastState`](#toaststate), [`ToastApi`](#toastapi), [`ToastDirectives`](#toastdirectives)\\>\n\nDefined in: svelte/bootstrap/src/components/toast/toast.gen.ts:224\n\nRepresents a Toast widget component.\n","ToastWidget","Toast","@agnos-ui/svelte-bootstrap/components/toast"],"uses":{"params":["framework","component"]}}]}
