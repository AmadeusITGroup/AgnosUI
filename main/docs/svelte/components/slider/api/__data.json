{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,95,139],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/svelte/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/svelte/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/svelte/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/svelte/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/svelte/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/svelte/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/svelte/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/svelte/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,67,71,75,79,83,87,91],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/svelte/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/svelte/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/svelte/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Carousel","inprogress","docs/svelte/daisyUI/carousel/","daisyUI/carousel/",{"label":63,"status":64,"path":65,"subpath":51,"slug":66},"Collapse","beta","docs/svelte/daisyUI/collapse/","daisyUI/collapse/",{"label":68,"status":49,"path":69,"subpath":51,"slug":70},"Modal","docs/svelte/daisyUI/modal/","daisyUI/modal/",{"label":72,"status":49,"path":73,"subpath":51,"slug":74},"Pagination","docs/svelte/daisyUI/pagination/","daisyUI/pagination/",{"label":76,"status":49,"path":77,"subpath":51,"slug":78},"Progressbar","docs/svelte/daisyUI/progressbar/","daisyUI/progressbar/",{"label":80,"status":49,"path":81,"subpath":51,"slug":82},"Rating","docs/svelte/daisyUI/rating/","daisyUI/rating/",{"label":84,"status":49,"path":85,"subpath":51,"slug":86},"Slider","docs/svelte/daisyUI/slider/","daisyUI/slider/",{"label":88,"status":49,"path":89,"subpath":51,"slug":90},"Toast","docs/svelte/daisyUI/toast/","daisyUI/toast/",{"label":92,"status":64,"path":93,"subpath":51,"slug":94},"Tree","docs/svelte/daisyUI/tree/","daisyUI/tree/",{"title":96,"submenu":97},"Bootstrap Components",[98,101,105,108,111,114,117,120,123,126,130,133,136],{"label":7,"status":8,"path":99,"subpath":-1,"slug":100},"docs/svelte/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":102,"subpath":103,"slug":104},"docs/svelte/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":106,"subpath":103,"slug":107},"docs/svelte/components/alert/","components/alert/",{"label":58,"status":59,"path":109,"subpath":103,"slug":110},"docs/svelte/components/carousel/","components/carousel/",{"label":63,"status":64,"path":112,"subpath":103,"slug":113},"docs/svelte/components/collapse/","components/collapse/",{"label":68,"status":49,"path":115,"subpath":103,"slug":116},"docs/svelte/components/modal/","components/modal/",{"label":72,"status":49,"path":118,"subpath":103,"slug":119},"docs/svelte/components/pagination/","components/pagination/",{"label":76,"status":49,"path":121,"subpath":103,"slug":122},"docs/svelte/components/progressbar/","components/progressbar/",{"label":80,"status":49,"path":124,"subpath":103,"slug":125},"docs/svelte/components/rating/","components/rating/",{"label":127,"status":59,"path":128,"subpath":103,"slug":129},"Select","docs/svelte/components/select/","components/select/",{"label":84,"status":49,"path":131,"subpath":103,"slug":132},"docs/svelte/components/slider/","components/slider/",{"label":88,"status":49,"path":134,"subpath":103,"slug":135},"docs/svelte/components/toast/","components/toast/",{"label":92,"status":64,"path":137,"subpath":103,"slug":138},"docs/svelte/components/tree/","components/tree/",{"title":140,"submenu":141},"Services",[142,145,149,153,157,161,165],{"label":7,"status":8,"path":143,"subpath":-1,"slug":144},"docs/svelte/services/introduction","services/introduction",{"label":146,"status":8,"path":147,"subpath":-1,"slug":148},"Focustrack","docs/svelte/services/focustrack","services/focustrack",{"label":150,"status":8,"path":151,"subpath":-1,"slug":152},"Floating UI","docs/svelte/services/floating-ui","services/floating-ui",{"label":154,"status":8,"path":155,"subpath":-1,"slug":156},"Match Media","docs/svelte/services/match-media","services/match-media",{"label":158,"status":8,"path":159,"subpath":-1,"slug":160},"Navigation Manager","docs/svelte/services/navigation-manager","services/navigation-manager",{"label":162,"status":8,"path":163,"subpath":-1,"slug":164},"Resize Observer","docs/svelte/services/resize-observer","services/resize-observer",{"label":166,"status":8,"path":167,"subpath":-1,"slug":168},"Transition","docs/svelte/services/transition","services/transition"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":18,"next":21},"Slider","stable","v0.1.1","standalone",[6,10,14],{"title":7,"key":8,"path":9},"Examples","examples","/components/slider/examples",{"title":11,"key":12,"path":13},"Api","api","/components/slider/api",{"title":15,"key":16,"path":17},"Styling","style","/components/slider/style",{"title":19,"slug":20,"subpath":8},"Select","components/select/",{"title":22,"slug":23,"subpath":8},"Toast","components/toast/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":45,"import":46},"slider",[3,6,9,12,15,18,21,24,27,30,33,36,39,42],{"source":4,"name":5},"## function_createSlider\n> **createSlider**(`props`?): [`SliderWidget`](#sliderwidget)\n\n\nCreate a Slider with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../../../../api/svelte/bootstrap/components/slider/../../types#propsconfig)\\\u003C[`SliderProps`](#sliderprops)\\>\n\n### Returns\n\n[`SliderWidget`](#sliderwidget)\n\na SliderWidget\n","createSlider",{"source":7,"name":8},"## function_getSliderDefaultConfig\n> **getSliderDefaultConfig**(): [`SliderProps`](#sliderprops)\n\n\nRetrieve a shallow copy of the default Slider config\n\n### Returns\n\n[`SliderProps`](#sliderprops)\n\nthe default Slider config\n","getSliderDefaultConfig",{"source":10,"name":11},"## interface_HandleDisplayOptions\n\nOptions for displaying a handle in a slider component.\n\n### Properties\n\n#### left\n\n> **left**: `null` \\| `number`\n\n\nLeft offset of the handle in %\n\n***\n\n#### top\n\n> **top**: `null` \\| `number`\n\n\nTop offset of the handle in %\n","HandleDisplayOptions",{"source":13,"name":14},"## interface_ProgressDisplayOptions\n\nOptions for displaying progress in a slider component.\n\n### Properties\n\n#### bottom\n\n> **bottom**: `null` \\| `number`\n\n\nBottom offset of the progress in %\n\n***\n\n#### height\n\n> **height**: `number`\n\n\nHeight of the progress in %\n\n***\n\n#### id\n\n> **id**: `number`\n\n\nId of the progress\n\n***\n\n#### left\n\n> **left**: `null` \\| `number`\n\n\nRight offset of the progress in %\n\n***\n\n#### right\n\n> **right**: `null` \\| `number`\n\n\nLeft offset of the progress in %\n\n***\n\n#### top\n\n> **top**: `null` \\| `number`\n\n\nTop offset of the progress in %\n\n***\n\n#### width\n\n> **width**: `number`\n\n\nWidth of the progress in %\n","ProgressDisplayOptions",{"source":16,"name":17},"## interface_SliderContext\n\nRepresents the context for a Slider component.\nThis type is an alias for `WidgetSlotContext\u003CSliderWidget>`.\n\n### Extended by\n\n- [`SliderSlotLabelContext`](#sliderslotlabelcontext)\n- [`SliderSlotHandleContext`](#sliderslothandlecontext)\n- [`SliderSlotTickContext`](#sliderslottickcontext)\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SliderDirectives`](#sliderdirectives)\n\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`SliderState`](#sliderstate)\n\n\nthe state of the widget\n","SliderContext",{"source":19,"name":20},"## interface_SliderDirectives\n\nInterface representing various directives used in the slider component.\n\n### Properties\n\n#### clickableAreaDirective\n\n> **clickableAreaDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\n\nDirective to apply to the slider clickable area, to directly move the handle to a given specific position\n\n***\n\n#### combinedHandleLabelDisplayDirective\n\n> **combinedHandleLabelDisplayDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\n\nDirective to apply to the handle when combined label display is active\n\n***\n\n#### handleDirective\n\n> **handleDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C\\{ `item`: [`SliderHandle`](#sliderhandle); \\}\\>\n\n\nDirective to apply to the slider handle if any\n\n***\n\n#### handleEventsDirective\n\n> **handleEventsDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C\\{ `item`: \\{ `id`: `number`; \\}; \\}\\>\n\n\nDirective to apply handle events handlers\n\n***\n\n#### handleLabelDisplayDirective\n\n> **handleLabelDisplayDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C\\{ `index`: `number`; \\}\\>\n\n\nDirective to apply to the handle when combined label display is not active\n\n***\n\n#### maxLabelDirective\n\n> **maxLabelDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\n\nDirective to get the maxLabel elementRef\n\n***\n\n#### minLabelDirective\n\n> **minLabelDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\n\nDirective to get the minLabel elementRef\n\n***\n\n#### progressDisplayDirective\n\n> **progressDisplayDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C\\{ `option`: [`ProgressDisplayOptions`](#progressdisplayoptions); \\}\\>\n\n\nDirective used to style the progress display for each handle\n\n***\n\n#### sliderDirective\n\n> **sliderDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\n\nDirective to get the slider component elementRef\n\n***\n\n#### tickDirective\n\n> **tickDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C\\{ `tick`: [`SliderTick`](#slidertick); \\}\\>\n\n\nDirective to apply to the slider tick\n\n***\n\n#### tickLabelDirective\n\n> **tickLabelDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C\\{ `tick`: [`SliderTick`](#slidertick); \\}\\>\n\n\nDirective to apply to the slider tick label\n","SliderDirectives",{"source":22,"name":23},"## interface_SliderHandle\n\nRepresents a handle in a slider component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `undefined` \\| `string`\n\n\nariaLabel of the handle\n\n***\n\n#### ariaLabelledBy\n\n> **ariaLabelledBy**: `undefined` \\| `string`\n\n\naria-labelledBy of the handle\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `undefined` \\| `string`\n\n\nariaValueText of the handle\n\n***\n\n#### id\n\n> **id**: `number`\n\n\nHandle id\n\n***\n\n#### value\n\n> **value**: `number`\n\n\nValue of the handle\n","SliderHandle",{"source":25,"name":26},"## interface_SliderProps\n\nRepresents the properties for the Slider component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: (`sortedIndex`) => `string`\n\n\nReturn the value for the 'aria-label' attribute for the handle\n\n##### Parameters\n\n###### sortedIndex\n\n`number`\n\nindex of the handle in the sorted list\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n() => 'Value'\n```\n\n***\n\n#### ariaLabelledBy\n\n> **ariaLabelledBy**: (`sortedIndex`) => `string`\n\n\nReturn the value for the 'aria-labelledBy' attribute for the handle\n\n##### Parameters\n\n###### sortedIndex\n\n`number`\n\nindex of the handle in the sorted list\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n() => ''\n```\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: (`value`, `sortedIndex`) => `string`\n\n\nReturn the value for the 'aria-valuetext' attribute for the handle\n\n##### Parameters\n\n###### value\n\n`number`\n\nvalue of the handle\n\n###### sortedIndex\n\n`number`\n\nindex of the handle in the sorted list\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(value: number) => ''\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\n\nIf `true` slider value cannot be changed and the slider cannot be focused\n\n##### Default Value\n\n`false`\n\n***\n\n#### handle\n\n> **handle**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotHandleContext`](#sliderslothandlecontext)\\>\n\n\nSlot to change the handlers\n\n***\n\n#### label\n\n> **label**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotLabelContext`](#sliderslotlabelcontext)\\>\n\n\nSlot to change the default labels of the slider\n\n##### Default Value\n\n```ts\n({value}: SliderSlotLabelContext) => '' + value\n```\n\n***\n\n#### max\n\n> **max**: `number`\n\n\nMaximum value that can be assigned to the slider\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\n\nMinimum value that can be assigned to the slider\n\n##### Default Value\n\n`0`\n\n***\n\n#### onValuesChange\n\n> **onValuesChange**: (`values`) => `void`\n\n\nAn event emitted when slider values are changed\n\nEvent payload equals to the updated slider values\n\n##### Parameters\n\n###### values\n\n`number`[]\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\n\nIf `true` slider value cannot be changed but the slider is still focusable\n\n##### Default Value\n\n`false`\n\n***\n\n#### rtl\n\n> **rtl**: `boolean`\n\n\nIt `true` slider display is inversed\n\n##### Default Value\n\n`false`\n\n***\n\n#### showMinMaxLabels\n\n> **showMinMaxLabels**: `boolean`\n\n\nIf `true` the min and max labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### showTicks\n\n> **showTicks**: `boolean`\n\n\nIf `true` the ticks are displayed on the slider\n\n##### Default Value\n\n`false`\n\n***\n\n#### showTickValues\n\n> **showTickValues**: `boolean`\n\n\nIf `true` the tick values are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### showValueLabels\n\n> **showValueLabels**: `boolean`\n\n\nIf `true` the value labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### stepSize\n\n> **stepSize**: `number`\n\n\nUnit value between slider steps\n\n##### Default Value\n\n`1`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderContext`](#slidercontext)\\>\n\n\nSlot to change the default display of the slider\n\n***\n\n#### tick\n\n> **tick**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotTickContext`](#sliderslottickcontext)\\>\n\n\nSlot to change the ticks\n\n***\n\n#### tickInterval\n\n> **tickInterval**: `number`\n\n\nUnit value between the ticks\nIf value is set to `0` the [stepSize](#sliderprops-stepsize) is used to space the ticks\n\n##### Default Value\n\n`0`\n\n***\n\n#### values\n\n> **values**: `number`[]\n\n\nCurrent slider values\n\n##### Default Value\n\n`[0]`\n\n***\n\n#### vertical\n\n> **vertical**: `boolean`\n\n\nIf `true` is vertically positioned otherwise it is horizontal\n\n##### Default Value\n\n`false`\n","SliderProps",{"source":28,"name":29},"## interface_SliderSlotHandleContext\n\nRepresents the context for a slider slot handle.\nThis type extends the `SliderContext` and includes an additional `item` property of type `SliderHandle`.\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SliderDirectives`](#sliderdirectives)\n\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### item\n\n> **item**: [`SliderHandle`](#sliderhandle)\n\n\nthe handle context\n\n***\n\n#### state\n\n> **state**: [`SliderState`](#sliderstate)\n\n\nthe state of the widget\n","SliderSlotHandleContext",{"source":31,"name":32},"## interface_SliderSlotLabelContext\n\nRepresents the context for a slider slot label, extending the base `SliderContext`\nwith an additional `value` property.\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SliderDirectives`](#sliderdirectives)\n\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`SliderState`](#sliderstate)\n\n\nthe state of the widget\n\n***\n\n#### value\n\n> **value**: `number`\n\n\nthe value of the handle the label is attached to\n","SliderSlotLabelContext",{"source":34,"name":35},"## interface_SliderSlotTickContext\n\nRepresents the context for a slider tick slot\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SliderDirectives`](#sliderdirectives)\n\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`SliderState`](#sliderstate)\n\n\nthe state of the widget\n\n***\n\n#### tick\n\n> **tick**: [`SliderTick`](#slidertick)\n\n\ntick context\n","SliderSlotTickContext",{"source":37,"name":38},"## interface_SliderState\n\nRepresents the state of a slider component.\n\n### Properties\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### combinedLabelDisplay\n\n> **combinedLabelDisplay**: `boolean`\n\n\nIf true, the label when the handles are close is visible\n\n***\n\n#### combinedLabelPositionLeft\n\n> **combinedLabelPositionLeft**: `number`\n\n\nCombined label left offset in %\n\n***\n\n#### combinedLabelPositionTop\n\n> **combinedLabelPositionTop**: `number`\n\n\nCombined label top offset in %\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\n\nIf `true` slider value cannot be changed and the slider cannot be focused\n\n##### Default Value\n\n`false`\n\n***\n\n#### handle\n\n> **handle**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotHandleContext`](#sliderslothandlecontext)\\>\n\n\nSlot to change the handlers\n\n***\n\n#### handleDisplayOptions\n\n> **handleDisplayOptions**: [`HandleDisplayOptions`](#handledisplayoptions)[]\n\n\nArray of objects representing handle display options\n\n***\n\n#### interactive\n\n> **interactive**: `boolean`\n\n\nCheck if the slider is interactive, meaning it is not disabled or readonly\n\n***\n\n#### label\n\n> **label**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotLabelContext`](#sliderslotlabelcontext)\\>\n\n\nSlot to change the default labels of the slider\n\n##### Default Value\n\n```ts\n({value}: SliderSlotLabelContext) => '' + value\n```\n\n***\n\n#### max\n\n> **max**: `number`\n\n\nMaximum value that can be assigned to the slider\n\n##### Default Value\n\n`100`\n\n***\n\n#### maxValueLabelDisplay\n\n> **maxValueLabelDisplay**: `boolean`\n\n\nIf true, the maximum label will be visible\n\n***\n\n#### min\n\n> **min**: `number`\n\n\nMinimum value that can be assigned to the slider\n\n##### Default Value\n\n`0`\n\n***\n\n#### minValueLabelDisplay\n\n> **minValueLabelDisplay**: `boolean`\n\n\nIf true, the minimum label will be visible\n\n***\n\n#### progressDisplayOptions\n\n> **progressDisplayOptions**: [`ProgressDisplayOptions`](#progressdisplayoptions)[]\n\n\nArray of objects representing progress display options\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\n\nIf `true` slider value cannot be changed but the slider is still focusable\n\n##### Default Value\n\n`false`\n\n***\n\n#### rtl\n\n> **rtl**: `boolean`\n\n\nIt `true` slider display is inversed\n\n##### Default Value\n\n`false`\n\n***\n\n#### showMinMaxLabels\n\n> **showMinMaxLabels**: `boolean`\n\n\nIf `true` the min and max labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### showTicks\n\n> **showTicks**: `boolean`\n\n\nIf `true` the ticks are displayed on the slider\n\n##### Default Value\n\n`false`\n\n***\n\n#### showValueLabels\n\n> **showValueLabels**: `boolean`\n\n\nIf `true` the value labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### sortedHandles\n\n> **sortedHandles**: [`SliderHandle`](#sliderhandle)[]\n\n\nArray of the sorted handles to display\n\n***\n\n#### sortedValues\n\n> **sortedValues**: `number`[]\n\n\nSorted slider values\n\n***\n\n#### stepSize\n\n> **stepSize**: `number`\n\n\nUnit value between slider steps\n\n##### Default Value\n\n`1`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderContext`](#slidercontext)\\>\n\n\nSlot to change the default display of the slider\n\n***\n\n#### tick\n\n> **tick**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotTickContext`](#sliderslottickcontext)\\>\n\n\nSlot to change the ticks\n\n***\n\n#### ticks\n\n> **ticks**: [`SliderTick`](#slidertick)[]\n\n\nArray of ticks to display on the slider component\n\n***\n\n#### values\n\n> **values**: `number`[]\n\n\nCurrent slider values\n\n##### Default Value\n\n`[0]`\n\n***\n\n#### vertical\n\n> **vertical**: `boolean`\n\n\nIf `true` is vertically positioned otherwise it is horizontal\n\n##### Default Value\n\n`false`\n","SliderState",{"source":40,"name":41},"## interface_SliderTick\n\nRepresents a tick in a slider component.\n\n### Properties\n\n#### className?\n\n> `optional` **className**: `null` \\| `string`\n\n\nCSS classes to be applied on the tick\n\n***\n\n#### displayLabel\n\n> **displayLabel**: `boolean`\n\n\nIf `true` the tick label is displayed\n\n***\n\n#### legend?\n\n> `optional` **legend**: `null` \\| `string`\n\n\nVisualized optional explanation of the label\n\n***\n\n#### position\n\n> **position**: `number`\n\n\nPosition of the tick in percent\n\n***\n\n#### selected\n\n> **selected**: `boolean`\n\n\nIf `true` the tick has selected style\n\n***\n\n#### value\n\n> **value**: `number`\n\n\nValue of the tick\n","SliderTick",{"source":43,"name":44},"## type alias_SliderWidget\n> **SliderWidget**: [`Widget`](../../../../api/svelte/bootstrap/components/slider/../../types#widget)\\\u003C[`SliderProps`](#sliderprops), [`SliderState`](#sliderstate), `object`, [`SliderDirectives`](#sliderdirectives)\\>\n\n\nRepresents a slider widget component.\n","SliderWidget","Slider","@agnos-ui/svelte-bootstrap/components/slider"],"uses":{"params":["framework","component"]}}]}
