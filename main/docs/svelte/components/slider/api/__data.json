{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,86,125],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/svelte/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/svelte/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/svelte/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/svelte/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/svelte/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/svelte/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/svelte/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/svelte/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/svelte/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/svelte/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/svelte/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/svelte/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/svelte/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/svelte/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/svelte/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/svelte/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/svelte/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/svelte/daisyUI/toast/","daisyUI/toast/",{"title":87,"submenu":88},"Bootstrap Components",[89,92,96,99,102,105,108,111,114,119,122],{"label":7,"status":8,"path":90,"subpath":-1,"slug":91},"docs/svelte/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":93,"subpath":94,"slug":95},"docs/svelte/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":97,"subpath":94,"slug":98},"docs/svelte/components/alert/","components/alert/",{"label":58,"status":59,"path":100,"subpath":94,"slug":101},"docs/svelte/components/collapse/","components/collapse/",{"label":63,"status":49,"path":103,"subpath":94,"slug":104},"docs/svelte/components/modal/","components/modal/",{"label":67,"status":49,"path":106,"subpath":94,"slug":107},"docs/svelte/components/pagination/","components/pagination/",{"label":71,"status":49,"path":109,"subpath":94,"slug":110},"docs/svelte/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":112,"subpath":94,"slug":113},"docs/svelte/components/rating/","components/rating/",{"label":115,"status":116,"path":117,"subpath":94,"slug":118},"Select","inprogress","docs/svelte/components/select/","components/select/",{"label":79,"status":49,"path":120,"subpath":94,"slug":121},"docs/svelte/components/slider/","components/slider/",{"label":83,"status":49,"path":123,"subpath":94,"slug":124},"docs/svelte/components/toast/","components/toast/",{"title":126,"submenu":127},"Services",[128,131,135,139,143,147],{"label":7,"status":8,"path":129,"subpath":-1,"slug":130},"docs/svelte/services/introduction","services/introduction",{"label":132,"status":8,"path":133,"subpath":-1,"slug":134},"Focustrack","docs/svelte/services/focustrack","services/focustrack",{"label":136,"status":8,"path":137,"subpath":-1,"slug":138},"Floating UI","docs/svelte/services/floating-ui","services/floating-ui",{"label":140,"status":8,"path":141,"subpath":-1,"slug":142},"Resize Observer","docs/svelte/services/resize-observer","services/resize-observer",{"label":144,"status":8,"path":145,"subpath":-1,"slug":146},"Transition","docs/svelte/services/transition","services/transition",{"label":148,"status":8,"path":149,"subpath":-1,"slug":150},"Match Media","docs/svelte/services/match-media","services/match-media"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"tabs":4,"prev":17,"next":20},"Slider","stable","v0.1.1",[5,9,13],{"title":6,"key":7,"path":8},"Examples","examples","/components/slider/examples",{"title":10,"key":11,"path":12},"Api","api","/components/slider/api",{"title":14,"key":15,"path":16},"Styling","style","/components/slider/style",{"title":18,"slug":19,"subpath":7},"Select","components/select/",{"title":21,"slug":22,"subpath":7},"Toast","components/toast/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":39,"import":40,"pageMeta":41},"slider",[3,6,9,12,15,18,21,24,27,30,33,36],{"source":4,"name":5},"## function_createSlider\n> **createSlider**(`props`?): [`SliderWidget`](#sliderwidget)\n\nCreate a Slider with given config props\n\n### Parameters\n\nâ€¢ **props?**: [`PropsConfig`](../../../../api/svelte/bootstrap/components/slider/../../types#propsconfig)\\\u003C[`SliderProps`](#sliderprops)\\>\n\n### Returns\n\n[`SliderWidget`](#sliderwidget)\n\na SliderWidget\n","createSlider",{"source":7,"name":8},"## function_getSliderDefaultConfig\n> **getSliderDefaultConfig**(): [`SliderProps`](#sliderprops)\n\nRetrieve a shallow copy of the default Slider config\n\n### Returns\n\n[`SliderProps`](#sliderprops)\n\nthe default Slider config\n","getSliderDefaultConfig",{"source":10,"name":11},"## interface_HandleDisplayOptions\n### Properties\n\n#### left\n\n> **left**: `null` \\| `number`\n\nLeft offset of the handle in %\n\n***\n\n#### top\n\n> **top**: `null` \\| `number`\n\nTop offset of the handle in %\n","HandleDisplayOptions",{"source":13,"name":14},"## interface_ProgressDisplayOptions\n### Properties\n\n#### bottom\n\n> **bottom**: `null` \\| `number`\n\nBottom offset of the progress in %\n\n***\n\n#### height\n\n> **height**: `number`\n\nHeight of hte progress in %\n\n***\n\n#### left\n\n> **left**: `null` \\| `number`\n\nRight offset of the progress in %\n\n***\n\n#### right\n\n> **right**: `null` \\| `number`\n\nLeft offset of the progress in %\n\n***\n\n#### top\n\n> **top**: `null` \\| `number`\n\nTop offset of the progress in %\n\n***\n\n#### width\n\n> **width**: `number`\n\nWidth of the progress in %\n","ProgressDisplayOptions",{"source":16,"name":17},"## type alias_SliderContext\n> **SliderContext**: [`WidgetSlotContext`](../../../../api/svelte/bootstrap/components/slider/../../types#widgetslotcontext)\\\u003C[`SliderWidget`](#sliderwidget)\\>\n","SliderContext",{"source":19,"name":20},"## interface_SliderDirectives\n### Properties\n\n#### clickableAreaDirective\n\n> **clickableAreaDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\nDirective to apply to the slider clickable area, to directly move the handle to a given specific position\n\n***\n\n#### combinedHandleLabelDisplayDirective\n\n> **combinedHandleLabelDisplayDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\nDirective to apply to the handle when combined label display is active\n\n***\n\n#### handleDirective\n\n> **handleDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C`object`\\>\n\nDirective to apply to the slider handle if any\n\n##### Type declaration\n\n###### item\n\n> **item**: [`SliderHandle`](#sliderhandle)\n\n***\n\n#### handleEventsDirective\n\n> **handleEventsDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C`object`\\>\n\nDirective to apply handle events handlers\n\n##### Type declaration\n\n###### item\n\n> **item**: `object`\n\n###### item.id\n\n> **id**: `number`\n\n***\n\n#### handleLabelDisplayDirective\n\n> **handleLabelDisplayDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C`object`\\>\n\nDirective to apply to the handle when combined label display is not active\n\n##### Type declaration\n\n###### index\n\n> **index**: `number`\n\n***\n\n#### maxLabelDirective\n\n> **maxLabelDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\nDirective to get the maxLabel elementRef\n\n***\n\n#### minLabelDirective\n\n> **minLabelDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\nDirective to get the minLabel elementRef\n\n***\n\n#### progressDisplayDirective\n\n> **progressDisplayDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\\\u003C`object`\\>\n\nDirective used to style the progress display for each handle\n\n##### Type declaration\n\n###### option\n\n> **option**: [`ProgressDisplayOptions`](#progressdisplayoptions)\n\n***\n\n#### sliderDirective\n\n> **sliderDirective**: [`Directive`](../../../../api/svelte/bootstrap/components/slider/../../types#directive)\n\nDirective to get the slider component elementRef\n","SliderDirectives",{"source":22,"name":23},"## interface_SliderHandle\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nariaLabel of the handle\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `string`\n\nariaValueText of the handle\n\n***\n\n#### id\n\n> **id**: `number`\n\nHandle id\n\n***\n\n#### value\n\n> **value**: `number`\n\nValue of the handle\n","SliderHandle",{"source":25,"name":26},"## interface_SliderProps\n### Properties\n\n#### ariaLabelHandle\n\n> **ariaLabelHandle**: (`value`, `sortedIndex`, `index`) => `string`\n\nReturn the value for the 'aria-label' attribute for the handle\n\n##### Parameters\n\nâ€¢ **value**: `number`\n\nvalue of the handle\n\nâ€¢ **sortedIndex**: `number`\n\nindex of the handle in the sorted list\n\nâ€¢ **index**: `number`\n\nindex of the handle in the original list\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(value: number) => '' + value\n```\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: (`value`, `sortedIndex`, `index`) => `string`\n\nReturn the value for the 'aria-valuetext' attribute for the handle\n\n##### Parameters\n\nâ€¢ **value**: `number`\n\nvalue of the handle\n\nâ€¢ **sortedIndex**: `number`\n\nindex of the handle in the sorted list\n\nâ€¢ **index**: `number`\n\nindex of the handle in the original list\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(value: number) => '' + value\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nIf `true` slider value cannot be changed and the slider cannot be focused\n\n##### Default Value\n\n`false`\n\n***\n\n#### handle\n\n> **handle**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotHandleContext`](#sliderslothandlecontext)\\>\n\nSlot to change the handlers\n\n***\n\n#### label\n\n> **label**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotLabelContext`](#sliderslotlabelcontext)\\>\n\nSlot to change the default labels of the slider\n\n##### Default Value\n\n```ts\n({value}: SliderSlotLabelContext) => '' + value\n```\n\n***\n\n#### max\n\n> **max**: `number`\n\nMaximum value that can be assigned to the slider\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nMinimum value that can be assigned to the slider\n\n##### Default Value\n\n`0`\n\n***\n\n#### onValuesChange\n\n> **onValuesChange**: (`values`) => `void`\n\nAn event emitted when slider values are changed\n\nEvent payload equals to the updated slider values\n\n##### Parameters\n\nâ€¢ **values**: `number`[]\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\nIf `true` slider value cannot be changed but the slider is still focusable\n\n##### Default Value\n\n`false`\n\n***\n\n#### rtl\n\n> **rtl**: `boolean`\n\nIt `true` slider display is inversed\n\n##### Default Value\n\n`false`\n\n***\n\n#### showMinMaxLabels\n\n> **showMinMaxLabels**: `boolean`\n\nIf `true` the min and max labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### showValueLabels\n\n> **showValueLabels**: `boolean`\n\nIf `true` the value labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### stepSize\n\n> **stepSize**: `number`\n\nUnit value between slider steps\n\n##### Default Value\n\n`1`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderContext`](#slidercontext)\\>\n\nSlot to change the default display of the slider\n\n***\n\n#### values\n\n> **values**: `number`[]\n\nCurrent slider values\n\n##### Default Value\n\n`[0]`\n\n***\n\n#### vertical\n\n> **vertical**: `boolean`\n\nIf `true` is vertically positioned otherwise it is horizontal\n\n##### Default Value\n\n`false`\n","SliderProps",{"source":28,"name":29},"## type alias_SliderSlotHandleContext\n> **SliderSlotHandleContext**: [`SliderContext`](#slidercontext) & `object`\n\n### Type declaration\n\n#### item\n\n> **item**: [`SliderHandle`](#sliderhandle)\n","SliderSlotHandleContext",{"source":31,"name":32},"## type alias_SliderSlotLabelContext\n> **SliderSlotLabelContext**: [`SliderContext`](#slidercontext) & `object`\n\n### Type declaration\n\n#### value\n\n> **value**: `number`\n","SliderSlotLabelContext",{"source":34,"name":35},"## interface_SliderState\n### Properties\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### combinedLabelDisplay\n\n> **combinedLabelDisplay**: `boolean`\n\nIf true, the label when the handles are close is visible\n\n***\n\n#### combinedLabelPositionLeft\n\n> **combinedLabelPositionLeft**: `number`\n\nCombined label left offset in %\n\n***\n\n#### combinedLabelPositionTop\n\n> **combinedLabelPositionTop**: `number`\n\nCombined label top offset in %\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nIf `true` slider value cannot be changed and the slider cannot be focused\n\n##### Default Value\n\n`false`\n\n***\n\n#### handle\n\n> **handle**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotHandleContext`](#sliderslothandlecontext)\\>\n\nSlot to change the handlers\n\n***\n\n#### handleDisplayOptions\n\n> **handleDisplayOptions**: [`HandleDisplayOptions`](#handledisplayoptions)[]\n\nArray of objects representing handle display options\n\n***\n\n#### interactive\n\n> **interactive**: `boolean`\n\nCheck if the slider is interactive, meaning it is not disabled or readonly\n\n***\n\n#### label\n\n> **label**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderSlotLabelContext`](#sliderslotlabelcontext)\\>\n\nSlot to change the default labels of the slider\n\n##### Default Value\n\n```ts\n({value}: SliderSlotLabelContext) => '' + value\n```\n\n***\n\n#### max\n\n> **max**: `number`\n\nMaximum value that can be assigned to the slider\n\n##### Default Value\n\n`100`\n\n***\n\n#### maxValueLabelDisplay\n\n> **maxValueLabelDisplay**: `boolean`\n\nIf true, the maximum label will be visible\n\n***\n\n#### min\n\n> **min**: `number`\n\nMinimum value that can be assigned to the slider\n\n##### Default Value\n\n`0`\n\n***\n\n#### minValueLabelDisplay\n\n> **minValueLabelDisplay**: `boolean`\n\nIf true, the minimum label will be visible\n\n***\n\n#### progressDisplayOptions\n\n> **progressDisplayOptions**: [`ProgressDisplayOptions`](#progressdisplayoptions)[]\n\nArray of objects representing progress display options\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\nIf `true` slider value cannot be changed but the slider is still focusable\n\n##### Default Value\n\n`false`\n\n***\n\n#### rtl\n\n> **rtl**: `boolean`\n\nIt `true` slider display is inversed\n\n##### Default Value\n\n`false`\n\n***\n\n#### showMinMaxLabels\n\n> **showMinMaxLabels**: `boolean`\n\nIf `true` the min and max labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### showValueLabels\n\n> **showValueLabels**: `boolean`\n\nIf `true` the value labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### sortedHandles\n\n> **sortedHandles**: [`SliderHandle`](#sliderhandle)[]\n\nArray of the sorted handles to display\n\n***\n\n#### sortedValues\n\n> **sortedValues**: `number`[]\n\nSorted slider values\n\n***\n\n#### stepSize\n\n> **stepSize**: `number`\n\nUnit value between slider steps\n\n##### Default Value\n\n`1`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/svelte/bootstrap/components/slider/../../types#slotcontent)\\\u003C[`SliderContext`](#slidercontext)\\>\n\nSlot to change the default display of the slider\n\n***\n\n#### values\n\n> **values**: `number`[]\n\nCurrent slider values\n\n##### Default Value\n\n`[0]`\n\n***\n\n#### vertical\n\n> **vertical**: `boolean`\n\nIf `true` is vertically positioned otherwise it is horizontal\n\n##### Default Value\n\n`false`\n","SliderState",{"source":37,"name":38},"## type alias_SliderWidget\n> **SliderWidget**: [`Widget`](../../../../api/svelte/bootstrap/components/slider/../../types#widget)\\\u003C[`SliderProps`](#sliderprops), [`SliderState`](#sliderstate), `object`, `object`, [`SliderDirectives`](#sliderdirectives)\\>\n","SliderWidget","Slider","@agnos-ui/svelte-bootstrap/components/slider",{"description":42},"API Documentation for slider"],"uses":{"params":["framework","component"]}}]}
