{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,86,125],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/svelte/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/svelte/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/svelte/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/svelte/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/svelte/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/svelte/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/svelte/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/svelte/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,62,66,70,74,78,82],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/svelte/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/svelte/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/svelte/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":59,"path":60,"subpath":51,"slug":61},"Collapse","beta","docs/svelte/daisyUI/collapse/","daisyUI/collapse/",{"label":63,"status":49,"path":64,"subpath":51,"slug":65},"Modal","docs/svelte/daisyUI/modal/","daisyUI/modal/",{"label":67,"status":49,"path":68,"subpath":51,"slug":69},"Pagination","docs/svelte/daisyUI/pagination/","daisyUI/pagination/",{"label":71,"status":49,"path":72,"subpath":51,"slug":73},"Progressbar","docs/svelte/daisyUI/progressbar/","daisyUI/progressbar/",{"label":75,"status":49,"path":76,"subpath":51,"slug":77},"Rating","docs/svelte/daisyUI/rating/","daisyUI/rating/",{"label":79,"status":49,"path":80,"subpath":51,"slug":81},"Slider","docs/svelte/daisyUI/slider/","daisyUI/slider/",{"label":83,"status":49,"path":84,"subpath":51,"slug":85},"Toast","docs/svelte/daisyUI/toast/","daisyUI/toast/",{"title":87,"submenu":88},"Bootstrap Components",[89,92,96,99,102,105,108,111,114,119,122],{"label":7,"status":8,"path":90,"subpath":-1,"slug":91},"docs/svelte/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":93,"subpath":94,"slug":95},"docs/svelte/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":97,"subpath":94,"slug":98},"docs/svelte/components/alert/","components/alert/",{"label":58,"status":59,"path":100,"subpath":94,"slug":101},"docs/svelte/components/collapse/","components/collapse/",{"label":63,"status":49,"path":103,"subpath":94,"slug":104},"docs/svelte/components/modal/","components/modal/",{"label":67,"status":49,"path":106,"subpath":94,"slug":107},"docs/svelte/components/pagination/","components/pagination/",{"label":71,"status":49,"path":109,"subpath":94,"slug":110},"docs/svelte/components/progressbar/","components/progressbar/",{"label":75,"status":49,"path":112,"subpath":94,"slug":113},"docs/svelte/components/rating/","components/rating/",{"label":115,"status":116,"path":117,"subpath":94,"slug":118},"Select","inprogress","docs/svelte/components/select/","components/select/",{"label":79,"status":49,"path":120,"subpath":94,"slug":121},"docs/svelte/components/slider/","components/slider/",{"label":83,"status":49,"path":123,"subpath":94,"slug":124},"docs/svelte/components/toast/","components/toast/",{"title":126,"submenu":127},"Services",[128,131,135,139,143,147],{"label":7,"status":8,"path":129,"subpath":-1,"slug":130},"docs/svelte/services/introduction","services/introduction",{"label":132,"status":8,"path":133,"subpath":-1,"slug":134},"Focustrack","docs/svelte/services/focustrack","services/focustrack",{"label":136,"status":8,"path":137,"subpath":-1,"slug":138},"Floating UI","docs/svelte/services/floating-ui","services/floating-ui",{"label":140,"status":8,"path":141,"subpath":-1,"slug":142},"Resize Observer","docs/svelte/services/resize-observer","services/resize-observer",{"label":144,"status":8,"path":145,"subpath":-1,"slug":146},"Transition","docs/svelte/services/transition","services/transition",{"label":148,"status":8,"path":149,"subpath":-1,"slug":150},"Match Media","docs/svelte/services/match-media","services/match-media"],"uses":{"params":["framework"]}},{"type":"data","data":[{"slug":1,"prev":2,"next":9,"content":14,"since":8,"pageMeta":15},"headless/introduction",{"slug":3,"content":4,"title":5,"status":6,"attributes":7},"getting-started/installation","# Installation\n\n## Prerequisites\n\nBefore you begin, make sure you have the following prerequisites installed on your system:\n\n\u003Cul>\n  \u003Cli>Node.js: You can download and install Node.js from the \u003Ca href=\"https://nodejs.org/\" target=\"_blank\">official website\u003C/a>\u003C/li>\n\u003C/ul>\n\n## Create a new project\n\nIf you haven't already, create a new project where you want to use AgnosUI.\n\n## Install AgnosUI\n\nAgnosUI provides two flavours of the components for you to choose from:\n\n- **Headless**: The headless package contains the headless functionality of the component library. It can be used with any front-end CSS framework. It uses the core of AgnosUI which is framework agnostic.\n- **Bootstrap**: The Bootstrap package builds upon the headless package to provide additional UI components styled with Bootstrap.\n\nTo install the headless part, open your project's terminal and run the following command:\n\n```bash\n{install-headless}\n```\n\nTo install the bootstrap part, open your project's terminal and run the following command:\n\n```bash\n{install-bootstrap}\n```\n","Getting started: Installation","",{"since":8},"0.1.1",{"slug":10,"content":11,"title":12,"status":6,"attributes":13},"headless/configuration","# Configuration\n\n## Overview\n\nWe call **Configuration** the AgnosUI system to set the default state of components deeply in the application tree.  \nThis is usually referred as **context injection** and is handy to configure a part of a web application, without having to pass properties down the chain.\n\nYou can check how each framework handles this need on their respective documentation:\n\n\u003Cul>\n    \u003Cli>\u003Ca href=\"https://svelte.dev/docs/svelte#setcontext\" target=\"_blank\">setContext in Svelte\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca href=\"https://react.dev/learn/passing-data-deeply-with-context\" target=\"_blank\">passing data deeply in React\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca href=\"https://angular.io/guide/creating-injectable-service\" target=\"_blank\">context injection in Angular\u003C/a>\u003C/li>\n\u003C/ul>\n\nThe configuration is available out of the box as soon as components are created using the AgnosUI headless factories.  \nThe headless packages also provide utilities for each framework to retrieve and update component configuration.\n\n## In Action\n\nOne of the most use cases of configuration is setting a default config for multiple sibling components.  \nLet's see it in action, using the Bootstrap flavour of the **Alert** component:\n\n```sample\n{Configuration:configuration/basic:278}\n```\n\nThe Configuration is then used by all children with the modified state, as shown below:\n\n```sample\n{Configuration:configuration/down:278}\n```\n","Configuration",{"since":8},"# Introduction to Headless\n\nA headless component is a design pattern where the component applies a separation of concerns between the logic (or \"head\") and the user interface (or \"body\").\n\nThe “headless” part refers to the logic of the component, which is decoupled from its visual representation. This means that the component doesn’t have a user interface, but it does have functionality and exposes actions (APIs), states, directives but keeps internally their implementation.\n\nLeveraging its core, AgnosUI provides headless components across various frameworks. These components not only share the core API but also adhere to the best practices and implementation strategies specific to each framework. This ensures seamless integration and optimal performance.\n\n## Anatomy of a Component Creation\n\nAgnosUI includes pre-built components for supported frameworks. To use these components directly, you may not need to dive deeply into this section, except for understanding `directives`.\n\nCreating a new component with the core typically involves the following base code:\n\n```typescript\nconst {patch, stores, directives, actions, api} = create[WidgetName](props);\n```\n\nLet's break down the components.\n\n### props\n\n`props` contain the essential values for the component, received through attributes.\n\nAs an example, consider a rating component requiring the value prop:\n\n```typescript\nconst component = createRating({value: 2});\n```\n\nWhich is used in the HTML as follows:\n\n```html\n\u003CRating value=\"{2}\" />\n```\n\n`props` may also include functions beginning with `on...`. These are specific methods called when a prop changes. For instance, in the rating component, you can provide the `onRatingChange` method to be invoked every time the rating value changes, with the new value.\n\n> - Every `prop` comes with a default value.\n> - In all supported frameworks, these default prop values are customizable at any level within the component subtrees. The method of injecting these configurations is specific to the framework overseeing these component trees. Additional details can be found on [the dedicated page](01-Configuration.md).\n\n### patch\n\nThe `patch` function receives a partial of the props parameters, allowing modification of the initial props provided to the component.\n\n### stores\n\nList of Tansu stores showing the component's current state.\n\nor example, in a rating component, you'll find stores such as `rating$` and `visibleRating$`.\n\n- `rating$`: holds the current numeric value of the rating.\n\n- `visibleRating$`: holds the value displayed in the UI. It may differ from `rating$` during interactions like hovering, showcasing real-time visual changes.\n\nEach store can be subscribed to or integrated into the UI framework system.\n\n> `state$` is a persistent store in all components, grouping all other store values together. Depending on the framework or use case, it might be more convenient to use individual stores or the global `state$`.\n\n### directives\n\n`directives` are specific functions used to apply behaviors to HTML elements, strictly following [actions Svelte specifications](https://svelte.dev/docs/svelte-action).\n\nThese must be applied to the appropriate elements in the UI to ensure correct behavior.\n\nRefer to the [dedicated section](03-Directives.md) for more details.\n\n### actions\n\n`actions` contain functions designed to be directly plugged into the UI, such as `click` or `hover` in the rating component, connected to specific HTML element events.\n\n### api\n\n`api` includes functions for programmatically changing the component's state. Unlike the previous section, these functions are not specifically designed to be plugged into the UI.\n",{"description":16},"Documentation for headless introduction"],"uses":{"params":["slug","framework"]}}]}
