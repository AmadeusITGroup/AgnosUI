{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":143},true,[3,6,9,12,55,98,121],{"title":4,"path":5,"submenu":-1},"Types","api/react/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/react/bootstrap/config",{"title":10,"path":11,"submenu":-1},"Slot","api/react/bootstrap/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51],{"path":16,"slug":17,"label":18},"api/react/bootstrap/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/react/bootstrap/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/react/bootstrap/components/collapse","components/collapse","Collapse",{"path":28,"slug":29,"label":30},"api/react/bootstrap/components/modal","components/modal","Modal",{"path":32,"slug":33,"label":34},"api/react/bootstrap/components/pagination","components/pagination","Pagination",{"path":36,"slug":37,"label":38},"api/react/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":40,"slug":41,"label":42},"api/react/bootstrap/components/rating","components/rating","Rating",{"path":44,"slug":45,"label":46},"api/react/bootstrap/components/select","components/select","Select",{"path":48,"slug":49,"label":50},"api/react/bootstrap/components/slider","components/slider","Slider",{"path":52,"slug":53,"label":54},"api/react/bootstrap/components/toast","components/toast","Toast",{"title":56,"path":-1,"submenu":57},"Services",[58,62,66,70,74,78,82,86,90,94],{"path":59,"slug":60,"label":61},"api/react/bootstrap/services/extendWidget","services/extendWidget","extendWidget",{"path":63,"slug":64,"label":65},"api/react/bootstrap/services/floatingUI","services/floatingUI","floatingUI",{"path":67,"slug":68,"label":69},"api/react/bootstrap/services/focustrack","services/focustrack","focustrack",{"path":71,"slug":72,"label":73},"api/react/bootstrap/services/hash","services/hash","hash",{"path":75,"slug":76,"label":77},"api/react/bootstrap/services/intersection","services/intersection","intersection",{"path":79,"slug":80,"label":81},"api/react/bootstrap/services/matchMedia","services/matchMedia","matchMedia",{"path":83,"slug":84,"label":85},"api/react/bootstrap/services/navManager","services/navManager","navManager",{"path":87,"slug":88,"label":89},"api/react/bootstrap/services/portal","services/portal","portal",{"path":91,"slug":92,"label":93},"api/react/bootstrap/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":95,"slug":96,"label":97},"api/react/bootstrap/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":99,"path":-1,"submenu":100},"Transitions",[101,105,109,113,117],{"path":102,"slug":103,"label":104},"api/react/bootstrap/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":106,"slug":107,"label":108},"api/react/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":110,"slug":111,"label":112},"api/react/bootstrap/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":114,"slug":115,"label":116},"api/react/bootstrap/services/transitions/fade","services/transitions/fade","fade",{"path":118,"slug":119,"label":120},"api/react/bootstrap/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":122,"path":-1,"submenu":123},"Utils",[124,128,131,135,139],{"path":125,"slug":126,"label":127},"api/react/bootstrap/utils/directive","utils/directive","directive",{"path":129,"slug":130,"label":89},"api/react/bootstrap/utils/portal","utils/portal",{"path":132,"slug":133,"label":134},"api/react/bootstrap/utils/stores","utils/stores","stores",{"path":136,"slug":137,"label":138},"api/react/bootstrap/utils/widget","utils/widget","widget",{"path":140,"slug":141,"label":142},"api/react/bootstrap/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":33,"import":34},"components/alert",[3,6,9,12,15,18,21,24,27,30],{"source":4,"name":5},"## function_Alert\n> **Alert**(`props`): `ReactNode`\n\nAlert component that uses a forward ref to expose an API.\n\nThis component utilizes the useWidgetWithConfig hook to create an alert widget context\nand the [useImperativeHandle](https://react.dev/reference/react/useImperativeHandle) hook to expose the widget's API via the ref.\n\n### Parameters\n\n• **props**: [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`AlertProps`](#alertprops)\\> & `RefAttributes`\\\u003C[`AlertApi`](#alertapi)\\>\n\nPartial properties of the AlertProps interface.\n\n### Returns\n\n`ReactNode`\n\nA JSX element that conditionally renders the AlertElement based on the widget's hidden state.\n","Alert",{"source":7,"name":8},"## interface_AlertApi\nRepresents the API for an alert component.\n\n### Methods\n\n#### close\n\n> **close**(): `void`\n\nTriggers alert closing programmatically (same as clicking on the close button (×)).\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\nTriggers the alert to be displayed for the user.\n\n##### Returns\n\n`void`\n","AlertApi",{"source":10,"name":11},"## interface_AlertContext\nRepresents the context for an Alert component.\n\n### Properties\n\n#### api\n\n> **api**: [`AlertApi`](#alertapi)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`AlertDirectives`](#alertdirectives)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`AlertState`](#alertstate)\n\nthe state of the widget\n","AlertContext",{"source":13,"name":14},"## function_AlertDefaultSlotStructure\n> **AlertDefaultSlotStructure**(`slotContext`): `Element`\n\nRenders the default slot structure for an alert component.\n\n### Parameters\n\n• **slotContext**: [`AlertContext`](#alertcontext)\n\nThe context object containing state and API for the alert.\n\n### Returns\n\n`Element`\n\nA JSX element representing the alert's body and an optional close button.\n","AlertDefaultSlotStructure",{"source":16,"name":17},"## interface_AlertDirectives\nRepresents the directives for an alert component.\n\n### Properties\n\n#### transitionDirective\n\n> **transitionDirective**: [`Directive`](../types#directive)\n\nthe transition directive, piloting what is the visual effect of going from hidden to visible\n","AlertDirectives",{"source":19,"name":20},"## interface_AlertProps\nRepresents the properties for the Alert component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nCallback called when the alert is hidden.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nCallback called when the alert is shown.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nCallback called when the alert visibility changed.\n\n##### Parameters\n\n• **visible**: `boolean`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nGlobal template for the alert component\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](../services/transitions/baseTransitions#transitionfn)\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### type\n\n> **type**: `BSContextualClass`\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertProps",{"source":22,"name":23},"## interface_AlertState\nRepresents the state of an alert component.\n\n### Properties\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\nIs `true` when the alert is hidden. Compared to `visible`, this is updated after the transition is executed.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nGlobal template for the alert component\n\n***\n\n#### type\n\n> **type**: `BSContextualClass`\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertState",{"source":25,"name":26},"## type alias_AlertWidget\n> **AlertWidget**: [`Widget`](../types#widget)\\\u003C[`AlertProps`](#alertprops), [`AlertState`](#alertstate), [`AlertApi`](#alertapi), [`AlertDirectives`](#alertdirectives)\\>\n\nRepresents an alert widget component.\n","AlertWidget",{"source":28,"name":29},"## function_createAlert\n> **createAlert**(`props`?): [`AlertWidget`](#alertwidget)\n\nCreate an AlertWidget with given config props\n\n### Parameters\n\n• **props?**: [`PropsConfig`](../types#propsconfig)\\\u003C[`AlertProps`](#alertprops)\\>\n\n### Returns\n\n[`AlertWidget`](#alertwidget)\n\nan AlertWidget\n","createAlert",{"source":31,"name":32},"## function_getAlertDefaultConfig\n> **getAlertDefaultConfig**(): [`AlertProps`](#alertprops)\n\nRetrieve a shallow copy of the default Alert config\n\n### Returns\n\n[`AlertProps`](#alertprops)\n\nthe default Alert config\n","getAlertDefaultConfig","API alert","@agnos-ui/react-bootstrap/components/alert"],"uses":{"params":["framework","type","slug"]}}]}
