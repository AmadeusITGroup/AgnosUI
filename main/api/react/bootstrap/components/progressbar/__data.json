{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":147},true,[3,6,9,12,59,102,125],{"title":4,"path":5,"submenu":-1},"Types","api/react/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/react/bootstrap/config",{"title":10,"path":11,"submenu":-1},"Slot","api/react/bootstrap/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51,55],{"path":16,"slug":17,"label":18},"api/react/bootstrap/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/react/bootstrap/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/react/bootstrap/components/collapse","components/collapse","Collapse",{"path":28,"slug":29,"label":30},"api/react/bootstrap/components/modal","components/modal","Modal",{"path":32,"slug":33,"label":34},"api/react/bootstrap/components/pagination","components/pagination","Pagination",{"path":36,"slug":37,"label":38},"api/react/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":40,"slug":41,"label":42},"api/react/bootstrap/components/rating","components/rating","Rating",{"path":44,"slug":45,"label":46},"api/react/bootstrap/components/select","components/select","Select",{"path":48,"slug":49,"label":50},"api/react/bootstrap/components/slider","components/slider","Slider",{"path":52,"slug":53,"label":54},"api/react/bootstrap/components/toast","components/toast","Toast",{"path":56,"slug":57,"label":58},"api/react/bootstrap/components/tree","components/tree","Tree",{"title":60,"path":-1,"submenu":61},"Services",[62,66,70,74,78,82,86,90,94,98],{"path":63,"slug":64,"label":65},"api/react/bootstrap/services/extendWidget","services/extendWidget","extendWidget",{"path":67,"slug":68,"label":69},"api/react/bootstrap/services/floatingUI","services/floatingUI","floatingUI",{"path":71,"slug":72,"label":73},"api/react/bootstrap/services/focustrack","services/focustrack","focustrack",{"path":75,"slug":76,"label":77},"api/react/bootstrap/services/hash","services/hash","hash",{"path":79,"slug":80,"label":81},"api/react/bootstrap/services/intersection","services/intersection","intersection",{"path":83,"slug":84,"label":85},"api/react/bootstrap/services/matchMedia","services/matchMedia","matchMedia",{"path":87,"slug":88,"label":89},"api/react/bootstrap/services/navManager","services/navManager","navManager",{"path":91,"slug":92,"label":93},"api/react/bootstrap/services/portal","services/portal","portal",{"path":95,"slug":96,"label":97},"api/react/bootstrap/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":99,"slug":100,"label":101},"api/react/bootstrap/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":103,"path":-1,"submenu":104},"Transitions",[105,109,113,117,121],{"path":106,"slug":107,"label":108},"api/react/bootstrap/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":110,"slug":111,"label":112},"api/react/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":114,"slug":115,"label":116},"api/react/bootstrap/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":118,"slug":119,"label":120},"api/react/bootstrap/services/transitions/fade","services/transitions/fade","fade",{"path":122,"slug":123,"label":124},"api/react/bootstrap/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":126,"path":-1,"submenu":127},"Utils",[128,132,135,139,143],{"path":129,"slug":130,"label":131},"api/react/bootstrap/utils/directive","utils/directive","directive",{"path":133,"slug":134,"label":93},"api/react/bootstrap/utils/portal","utils/portal",{"path":136,"slug":137,"label":138},"api/react/bootstrap/utils/stores","utils/stores","stores",{"path":140,"slug":141,"label":142},"api/react/bootstrap/utils/widget","utils/widget","widget",{"path":144,"slug":145,"label":146},"api/react/bootstrap/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":30,"import":31},"components/progressbar",[3,6,9,12,15,18,21,24,27],{"source":4,"name":5},"## function_createProgressbar\n> **createProgressbar**(`props`?): [`ProgressbarWidget`](#progressbarwidget)\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:228\n\nCreate a Progressbar with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../types#propsconfig)\\\u003C[`ProgressbarProps`](#progressbarprops)\\>\n\n### Returns\n\n[`ProgressbarWidget`](#progressbarwidget)\n\na ProgressbarWidget\n","createProgressbar",{"source":7,"name":8},"## function_getProgressbarDefaultConfig\n> **getProgressbarDefaultConfig**(): [`ProgressbarProps`](#progressbarprops)\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:11\n\nRetrieve a shallow copy of the default Progressbar config\n\n### Returns\n\n[`ProgressbarProps`](#progressbarprops)\n\nthe default Progressbar config\n","getProgressbarDefaultConfig",{"source":10,"name":11},"## function_Progressbar\n> **Progressbar**(`props`): `Element`\n\nDefined in: [react/bootstrap/src/components/progressbar/progressbar.tsx:34](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/react/bootstrap/src/components/progressbar/progressbar.tsx#L34)\n\nProgressbar component that utilizes the useWidgetWithConfig hook to create a progress bar widget.\n\n### Parameters\n\n#### props\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`ProgressbarProps`](#progressbarprops)\\>\n\nThe properties to configure the progress bar.\n\n### Returns\n\n`Element`\n\nA div element containing the progress bar with appropriate ARIA directives and slot content.\n","Progressbar",{"source":13,"name":14},"## interface_ProgressbarContext\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:20\n\nRepresents the context for a Progressbar widget.\nThis interface is used to define the context object that is passed to the Progressbar widget.\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`ProgressbarDirectives`](#progressbardirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`ProgressbarState`](#progressbarstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L88)\n\nthe state of the widget\n","ProgressbarContext",{"source":16,"name":17},"## function_ProgressbarDefaultSlotStructure\n> **ProgressbarDefaultSlotStructure**(`slotContext`): `Element`\n\nDefined in: [react/bootstrap/src/components/progressbar/progressbar.tsx:15](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/react/bootstrap/src/components/progressbar/progressbar.tsx#L15)\n\nRenders a progress bar component with customizable appearance and behavior.\n\n### Parameters\n\n#### slotContext\n\n[`ProgressbarContext`](#progressbarcontext)\n\nThe context containing the state and properties for the progress bar.\n\n### Returns\n\n`Element`\n\nThe rendered progress bar component.\n","ProgressbarDefaultSlotStructure",{"source":19,"name":20},"## interface_ProgressbarDirectives\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:234\n\nInterface representing directives for a progress bar component.\n\n### Properties\n\n#### ariaDirective\n\n> **ariaDirective**: [`Directive`](../types#directive)\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:239\n\nA directive to be applied to the main container that handles aria attributes.\n","ProgressbarDirectives",{"source":22,"name":23},"## interface_ProgressbarProps\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:123\n\nInterface representing the properties for the Progressbar component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:203\n\nIf `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:164\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueTextFn\n\n> **ariaValueTextFn**: (`value`, `minimum`, `maximum`) => `undefined` \\| `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:136\n\nReturn the value for the 'aria-valuetext' attribute.\n\n##### Parameters\n\n###### value\n\n`number`\n\ncurrent value\n\n###### minimum\n\n`number`\n\nminimum value\n\n###### maximum\n\n`number`\n\nmaximum value\n\n##### Returns\n\n`undefined` \\| `string`\n\n##### Default Value\n\n```ts\n() => undefined\n```\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:181\n\nLabel of the progress.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:171\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### height\n\n> **height**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:188\n\nHeight of the progressbar, can be any valid css height value.\n\n##### Default Value\n\n`''`\n\n***\n\n#### max\n\n> **max**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:150\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:143\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### striped\n\n> **striped**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:195\n\nIf `true`, shows a striped progressbar.\n\n##### Default Value\n\n`false`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:176\n\nGlobal template for the Progressbar.\n\n***\n\n#### type\n\n> **type**: `undefined` \\| `BSContextualClass`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:208\n\nType of the progressbar, following bootstrap types.\n\n***\n\n#### value\n\n> **value**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:157\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarProps",{"source":25,"name":26},"## interface_ProgressbarState\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:25\n\nRepresents the state of a Progressbar component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:112\n\nIf `true`, animates a striped progressbar.\nTakes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:73\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `undefined` \\| `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:45\n\nThe aria value text.\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:90\n\nLabel of the progress.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:80\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### finished\n\n> **finished**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:40\n\n`true` if the value has reached its maximum value.\n\n***\n\n#### height\n\n> **height**: `string`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:97\n\nHeight of the progressbar, can be any valid css height value.\n\n##### Default Value\n\n`''`\n\n***\n\n#### max\n\n> **max**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:59\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:52\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### percentage\n\n> **percentage**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:30\n\nPercentage of completion.\n\n***\n\n#### started\n\n> **started**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:35\n\n`true` if the value is above its minimum value.\n\n***\n\n#### striped\n\n> **striped**: `boolean`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:104\n\nIf `true`, shows a striped progressbar.\n\n##### Default Value\n\n`false`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`ProgressbarContext`](#progressbarcontext)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:85\n\nGlobal template for the Progressbar.\n\n***\n\n#### type\n\n> **type**: `undefined` \\| `BSContextualClass`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:117\n\nType of the progressbar, following bootstrap types.\n\n***\n\n#### value\n\n> **value**: `number`\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:66\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarState",{"source":28,"name":29},"## type alias_ProgressbarWidget\n> **ProgressbarWidget**: [`Widget`](../types#widget)\\\u003C[`ProgressbarProps`](#progressbarprops), [`ProgressbarState`](#progressbarstate), `object`, [`ProgressbarDirectives`](#progressbardirectives)\\>\n\nDefined in: react/bootstrap/src/components/progressbar/progressbar.gen.ts:218\n\nRepresents a Progressbar widget.\n\nThis type defines the structure of a Progressbar widget, including its properties, state, and directives.\n","ProgressbarWidget","API progressbar","@agnos-ui/react-bootstrap/components/progressbar"],"uses":{"params":["framework","type","slug"]}}]}
