{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":163},true,[3,6,9,12,67,114,137],{"title":4,"path":5,"submenu":-1},"Types","api/react/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/react/bootstrap/config",{"title":10,"path":11,"submenu":-1},"Slot","api/react/bootstrap/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51,55,59,63],{"path":16,"slug":17,"label":18},"api/react/bootstrap/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/react/bootstrap/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/react/bootstrap/components/carousel","components/carousel","Carousel",{"path":28,"slug":29,"label":30},"api/react/bootstrap/components/collapse","components/collapse","Collapse",{"path":32,"slug":33,"label":34},"api/react/bootstrap/components/drawer","components/drawer","Drawer",{"path":36,"slug":37,"label":38},"api/react/bootstrap/components/modal","components/modal","Modal",{"path":40,"slug":41,"label":42},"api/react/bootstrap/components/pagination","components/pagination","Pagination",{"path":44,"slug":45,"label":46},"api/react/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":48,"slug":49,"label":50},"api/react/bootstrap/components/rating","components/rating","Rating",{"path":52,"slug":53,"label":54},"api/react/bootstrap/components/select","components/select","Select",{"path":56,"slug":57,"label":58},"api/react/bootstrap/components/slider","components/slider","Slider",{"path":60,"slug":61,"label":62},"api/react/bootstrap/components/toast","components/toast","Toast",{"path":64,"slug":65,"label":66},"api/react/bootstrap/components/tree","components/tree","Tree",{"title":68,"path":-1,"submenu":69},"Services",[70,74,78,82,86,90,94,98,102,106,110],{"path":71,"slug":72,"label":73},"api/react/bootstrap/services/extendWidget","services/extendWidget","extendWidget",{"path":75,"slug":76,"label":77},"api/react/bootstrap/services/floatingUI","services/floatingUI","floatingUI",{"path":79,"slug":80,"label":81},"api/react/bootstrap/services/focusElement","services/focusElement","focusElement",{"path":83,"slug":84,"label":85},"api/react/bootstrap/services/focustrack","services/focustrack","focustrack",{"path":87,"slug":88,"label":89},"api/react/bootstrap/services/hash","services/hash","hash",{"path":91,"slug":92,"label":93},"api/react/bootstrap/services/intersection","services/intersection","intersection",{"path":95,"slug":96,"label":97},"api/react/bootstrap/services/matchMedia","services/matchMedia","matchMedia",{"path":99,"slug":100,"label":101},"api/react/bootstrap/services/navManager","services/navManager","navManager",{"path":103,"slug":104,"label":105},"api/react/bootstrap/services/portal","services/portal","portal",{"path":107,"slug":108,"label":109},"api/react/bootstrap/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":111,"slug":112,"label":113},"api/react/bootstrap/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":115,"path":-1,"submenu":116},"Transitions",[117,121,125,129,133],{"path":118,"slug":119,"label":120},"api/react/bootstrap/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":122,"slug":123,"label":124},"api/react/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":126,"slug":127,"label":128},"api/react/bootstrap/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":130,"slug":131,"label":132},"api/react/bootstrap/services/transitions/fade","services/transitions/fade","fade",{"path":134,"slug":135,"label":136},"api/react/bootstrap/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":138,"path":-1,"submenu":139},"Utils",[140,144,148,151,155,159],{"path":141,"slug":142,"label":143},"api/react/bootstrap/utils/directive","utils/directive","directive",{"path":145,"slug":146,"label":147},"api/react/bootstrap/utils/func","utils/func","func",{"path":149,"slug":150,"label":105},"api/react/bootstrap/utils/portal","utils/portal",{"path":152,"slug":153,"label":154},"api/react/bootstrap/utils/stores","utils/stores","stores",{"path":156,"slug":157,"label":158},"api/react/bootstrap/utils/widget","utils/widget","widget",{"path":160,"slug":161,"label":162},"api/react/bootstrap/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":27,"import":28},"components/collapse",[3,6,9,12,15,18,21,24],{"source":4,"name":5},"## function_Collapse\n> **Collapse**(`props`): `Element`\n\n\nCollapse component that provides a collapsible container.\n\nThis component uses the [useWidget](../config#usewidget) hook to create a collapse widget\nand applies transition directives to the container.\n\n### Parameters\n\n#### props\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`CollapseProps`](#collapseprops)\\> & `object` & `object`\n\nThe properties for the Collapse component.\n\n### Returns\n\n`Element`\n\nA div element with transition directives applied, containing the child elements.\n","Collapse",{"source":7,"name":8},"## interface_CollapseApi\n\nInterface representing the API for a collapsible component.\n\n### Methods\n\n#### close\n\n> **close**(): `void`\n\n\nTriggers collapse closing programmatically.\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\n\nTriggers the collapse content to be displayed for the user.\n\n##### Returns\n\n`void`\n\n***\n\n#### toggle\n\n> **toggle**(): `void`\n\n\nToggles the collapse content visibility.\n\n##### Returns\n\n`void`\n","CollapseApi",{"source":10,"name":11},"## interface_CollapseDirectives\n\nInterface representing the directives used in a collapse component.\n\n### Properties\n\n#### collapseDirective\n\n> **collapseDirective**: [`Directive`](../types#directive)\n\n\nDirective to apply the collapse.\n\n***\n\n#### triggerDirective\n\n> **triggerDirective**: [`Directive`](../types#directive)\n\n\nDirective to apply to a trigger;\n","CollapseDirectives",{"source":13,"name":14},"## interface_CollapseProps\n\nProperties for the Collapse component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\n\nIf `true`, collapse closing and opening will be animated.\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\n\nIf `true`, collapse opening will be animated at init time.\n\n##### Default Value\n\n`false`\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### horizontal\n\n> **horizontal**: `boolean`\n\n\nIf `true`, collapse will be done horizontally.\n\n##### Default Value\n\n`false`\n\n***\n\n#### id\n\n> **id**: `string`\n\n\nid of the collapse\n\n##### Default Value\n\n`''`\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\n\nCallback called when the collapse is hidden.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\n\nCallback called when the collapse is shown.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\n\nCallback called when the collapse visibility changed.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\nThe new visibility state of the collapse.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\n\nIf `true` the collapse is visible to the user\n\n##### Default Value\n\n`true`\n","CollapseProps",{"source":16,"name":17},"## interface_CollapseState\n\nRepresents the state of a Collapse component.\n\n### Properties\n\n#### hidden\n\n> **hidden**: `boolean`\n\n\nIs `true` when the collapse is hidden. Compared to `visible`, this is updated after the transition is executed.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\n\nIf `true` the collapse is visible to the user\n\n##### Default Value\n\n`true`\n","CollapseState",{"source":19,"name":20},"## type alias_CollapseWidget\n> **CollapseWidget** = [`Widget`](../types#widget)\\\u003C[`CollapseProps`](#collapseprops), [`CollapseState`](#collapsestate), [`CollapseApi`](#collapseapi), [`CollapseDirectives`](#collapsedirectives)\\>\n\n\nRepresents a widget for handling collapse functionality.\n\nThis type defines the structure of a CollapseWidget, which includes properties, state, API, and directives\nnecessary for managing the collapse behavior in the UI.\n","CollapseWidget",{"source":22,"name":23},"## constant_createCollapse\n> `const` **createCollapse**: [`WidgetFactory`](../types#widgetfactory)\\\u003C[`CollapseWidget`](#collapsewidget)\\>\n\n\nCreate an CollapseWidget with given config props\n\n### Param\n\nan optional collapse config\n\n### Returns\n\nan CollapseWidget\n","createCollapse",{"source":25,"name":26},"## constant_getCollapseDefaultConfig\n> `const` **getCollapseDefaultConfig**: () => [`CollapseProps`](#collapseprops)\n\n\nRetrieve a shallow copy of the default collapse config\n\n### Returns\n\n[`CollapseProps`](#collapseprops)\n\nthe default collapse config\n","getCollapseDefaultConfig","API collapse","@agnos-ui/react-bootstrap/components/collapse"],"uses":{"params":["framework","type","slug"]}}]}
