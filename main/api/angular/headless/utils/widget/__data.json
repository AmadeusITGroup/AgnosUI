{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":164},true,[3,6,9,12,67,114,133],{"title":4,"path":5,"submenu":-1},"Types","api/angular/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/angular/headless/config",{"title":10,"path":11,"submenu":-1},"Slot","api/angular/headless/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51,55,59,63],{"path":16,"slug":17,"label":18},"api/angular/headless/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/angular/headless/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/angular/headless/components/carousel","components/carousel","Carousel",{"path":28,"slug":29,"label":30},"api/angular/headless/components/collapse","components/collapse","Collapse",{"path":32,"slug":33,"label":34},"api/angular/headless/components/drawer","components/drawer","Drawer",{"path":36,"slug":37,"label":38},"api/angular/headless/components/modal","components/modal","Modal",{"path":40,"slug":41,"label":42},"api/angular/headless/components/pagination","components/pagination","Pagination",{"path":44,"slug":45,"label":46},"api/angular/headless/components/progressbar","components/progressbar","Progressbar",{"path":48,"slug":49,"label":50},"api/angular/headless/components/rating","components/rating","Rating",{"path":52,"slug":53,"label":54},"api/angular/headless/components/select","components/select","Select",{"path":56,"slug":57,"label":58},"api/angular/headless/components/slider","components/slider","Slider",{"path":60,"slug":61,"label":62},"api/angular/headless/components/toast","components/toast","Toast",{"path":64,"slug":65,"label":66},"api/angular/headless/components/tree","components/tree","Tree",{"title":68,"path":-1,"submenu":69},"Services",[70,74,78,82,86,90,94,98,102,106,110],{"path":71,"slug":72,"label":73},"api/angular/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":75,"slug":76,"label":77},"api/angular/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":79,"slug":80,"label":81},"api/angular/headless/services/focusElement","services/focusElement","focusElement",{"path":83,"slug":84,"label":85},"api/angular/headless/services/focustrack","services/focustrack","focustrack",{"path":87,"slug":88,"label":89},"api/angular/headless/services/hash","services/hash","hash",{"path":91,"slug":92,"label":93},"api/angular/headless/services/intersection","services/intersection","intersection",{"path":95,"slug":96,"label":97},"api/angular/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":99,"slug":100,"label":101},"api/angular/headless/services/navManager","services/navManager","navManager",{"path":103,"slug":104,"label":105},"api/angular/headless/services/portal","services/portal","portal",{"path":107,"slug":108,"label":109},"api/angular/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":111,"slug":112,"label":113},"api/angular/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":115,"path":-1,"submenu":116},"Transitions",[117,121,125,129],{"path":118,"slug":119,"label":120},"api/angular/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":122,"slug":123,"label":124},"api/angular/headless/services/transitions/collapse","services/transitions/collapse","collapse",{"path":126,"slug":127,"label":128},"api/angular/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":130,"slug":131,"label":132},"api/angular/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":134,"path":-1,"submenu":135},"Utils",[136,140,144,148,152,156,160],{"path":137,"slug":138,"label":139},"api/angular/headless/utils/coercion","utils/coercion","coercion",{"path":141,"slug":142,"label":143},"api/angular/headless/utils/directive","utils/directive","directive",{"path":145,"slug":146,"label":147},"api/angular/headless/utils/func","utils/func","func",{"path":149,"slug":150,"label":151},"api/angular/headless/utils/stores","utils/stores","stores",{"path":153,"slug":154,"label":155},"api/angular/headless/utils/widget","utils/widget","widget",{"path":157,"slug":158,"label":159},"api/angular/headless/utils/writables","utils/writables","writables",{"path":161,"slug":162,"label":163},"api/angular/headless/utils/zone","utils/zone","zone","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":12,"import":13},"utils/widget",[3,6,9],{"source":4,"name":5},"## class_BaseWidgetDirective\n\nAn abstract base class for widget directives, providing common functionality\nfor Angular components that interact with widgets.\n\n### Type Parameters\n\n#### W\n\n`W` *extends* [`Widget`](../types#widget)\n\nThe type of the widget.\n\n### Implements\n\n- [`OnChanges`](https://angular.dev/api/core/OnChanges)\n- [`OnInit`](https://angular.dev/api/core/OnInit)\n- [`AfterContentChecked`](https://angular.dev/api/core/AfterContentChecked)\n\n### Accessors\n\n#### api\n\n##### Get Signature\n\n> **get** **api**(): `W`\\[`\"api\"`\\]\n\n\nRetrieves the widget api\n\n###### Returns\n\n`W`\\[`\"api\"`\\]\n\nthe widget api\n\n***\n\n#### directives\n\n##### Get Signature\n\n> **get** **directives**(): `W`\\[`\"directives\"`\\]\n\n\nRetrieves the widget directives\n\n###### Returns\n\n`W`\\[`\"directives\"`\\]\n\nthe widget directives\n\n***\n\n#### state\n\n##### Get Signature\n\n> **get** **state**(): [`AngularState`](../types#angularstate)\\\u003C`W`\\>\n\n\nRetrieves the widget state. Each property of the state is exposed through an Angular [Signal](https://angular.dev/api/core/Signal)\n\n###### Returns\n\n[`AngularState`](../types#angularstate)\\\u003C`W`\\>\n\nthe widget state\n","BaseWidgetDirective",{"source":7,"name":8},"## function_callWidgetFactoryWithConfig\n> **callWidgetFactoryWithConfig**\\\u003C`W`\\>(`factory`, `options?`): [`AngularWidget`](../types#angularwidget)\\\u003C`W`\\>\n\n\nCall a widget factory using provided configs.\n\nThe resulting widget can be easily hooked into the lifecycle of an Angular component through [BaseWidgetDirective](#basewidgetdirective).\n\n### Type Parameters\n\n#### W\n\n`W` *extends* [`Widget`](../types#widget)\\\u003C`object`, `object`, `object`, `object`\\>\n\n### Parameters\n\n#### factory\n\n[`WidgetFactory`](../types#widgetfactory)\\\u003C`W`\\>\n\nthe widget factory to call\n\n#### options?\n\nthe options\n\n##### afterInit?\n\n(`widget`) => `void`\n\na callback to call after successful setup of the widget\n\n##### defaultConfig?\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`WidgetProps`](../types#widgetprops)\\\u003C`W`\\>\\> \\| [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`undefined` \\| [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`WidgetProps`](../types#widgetprops)\\\u003C`W`\\>\\>\\>\n\nthe default config of the widget\n\n##### events?\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`Pick`](https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys)\\\u003C[`WidgetProps`](../types#widgetprops)\\\u003C`W`\\>, keyof [`WidgetProps`](../types#widgetprops)\\\u003C`W`\\> & `` `on${string}` ``\\>\\>\n\nthe events of the widget\n\n##### slotChildren?\n\n() => `undefined` \\| [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`void`\\>\n\na function to provide the default children slot using a view query\n\n##### slotTemplates?\n\n() => \\{ \\[K in string \\| number \\| symbol as IsSlotContent\\\u003CWidgetProps\\\u003CW\\>\\[K\\]\\> extends 0 ? never : K\\]: WidgetProps\\\u003CW\\>\\[K\\] extends SlotContent\\\u003CU\\> ? undefined \\| TemplateRef\\\u003CU\\> : never \\}\n\na function to provide all slot templates using child queries\n\n##### widgetConfig?\n\n`null` \\| [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`undefined` \\| [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`WidgetProps`](../types#widgetprops)\\\u003C`W`\\>\\>\\>\n\nthe config of the widget, overriding the defaultConfig\n\n### Returns\n\n[`AngularWidget`](../types#angularwidget)\\\u003C`W`\\>\n\nthe widget\n","callWidgetFactoryWithConfig",{"source":10,"name":11},"## function_createWidgetFactory\n> **createWidgetFactory**\\\u003C`W`, `T`\\>(`widgetName`, `factory`): [`WidgetFactory`](../types#widgetfactory)\\\u003C`W`, `T`\\>\n\n\nDefine a widget factory that can be linked with configuration through the provided widget name.\n\n### Type Parameters\n\n#### W\n\n`W` *extends* [`Widget`](../types#widget)\\\u003C`object`, `object`, `object`, `object`\\>\n\nThe type of the widget\n\n#### T\n\n`T` *extends* (`config?`) => `W` = (`config?`) => `W`\n\nThe type of the widget factory function. Useful when the widget factory has a generic.\n\n### Parameters\n\n#### widgetName\n\n`string`\n\nthe widget name, used for configuration injection\n\n#### factory\n\n`T`\n\nthe widget factory function\n\n### Returns\n\n[`WidgetFactory`](../types#widgetfactory)\\\u003C`W`, `T`\\>\n\nthe widget factory\n","createWidgetFactory","API widget","@agnos-ui/angular-headless"],"uses":{"params":["framework","type","slug"]}}]}
