{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":144},true,[3,6,9,12,55,98,117],{"title":4,"path":5,"submenu":-1},"Types","api/angular/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/angular/headless/config",{"title":10,"path":11,"submenu":-1},"Slot","api/angular/headless/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51],{"path":16,"slug":17,"label":18},"api/angular/headless/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/angular/headless/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/angular/headless/components/modal","components/modal","Modal",{"path":28,"slug":29,"label":30},"api/angular/headless/components/pagination","components/pagination","Pagination",{"path":32,"slug":33,"label":34},"api/angular/headless/components/progressbar","components/progressbar","Progressbar",{"path":36,"slug":37,"label":38},"api/angular/headless/components/rating","components/rating","Rating",{"path":40,"slug":41,"label":42},"api/angular/headless/components/select","components/select","Select",{"path":44,"slug":45,"label":46},"api/angular/headless/components/slider","components/slider","Slider",{"path":48,"slug":49,"label":50},"api/angular/headless/components/toast","components/toast","Toast",{"path":52,"slug":53,"label":54},"api/angular/headless/components/tree","components/tree","Tree",{"title":56,"path":-1,"submenu":57},"Services",[58,62,66,70,74,78,82,86,90,94],{"path":59,"slug":60,"label":61},"api/angular/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":63,"slug":64,"label":65},"api/angular/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":67,"slug":68,"label":69},"api/angular/headless/services/focustrack","services/focustrack","focustrack",{"path":71,"slug":72,"label":73},"api/angular/headless/services/hash","services/hash","hash",{"path":75,"slug":76,"label":77},"api/angular/headless/services/intersection","services/intersection","intersection",{"path":79,"slug":80,"label":81},"api/angular/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":83,"slug":84,"label":85},"api/angular/headless/services/navManager","services/navManager","navManager",{"path":87,"slug":88,"label":89},"api/angular/headless/services/portal","services/portal","portal",{"path":91,"slug":92,"label":93},"api/angular/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":95,"slug":96,"label":97},"api/angular/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":99,"path":-1,"submenu":100},"Transitions",[101,105,109,113],{"path":102,"slug":103,"label":104},"api/angular/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":106,"slug":107,"label":108},"api/angular/headless/services/transitions/collapse","services/transitions/collapse","collapse",{"path":110,"slug":111,"label":112},"api/angular/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":114,"slug":115,"label":116},"api/angular/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":118,"path":-1,"submenu":119},"Utils",[120,124,128,132,136,140],{"path":121,"slug":122,"label":123},"api/angular/headless/utils/coercion","utils/coercion","coercion",{"path":125,"slug":126,"label":127},"api/angular/headless/utils/directive","utils/directive","directive",{"path":129,"slug":130,"label":131},"api/angular/headless/utils/stores","utils/stores","stores",{"path":133,"slug":134,"label":135},"api/angular/headless/utils/widget","utils/widget","widget",{"path":137,"slug":138,"label":139},"api/angular/headless/utils/writables","utils/writables","writables",{"path":141,"slug":142,"label":143},"api/angular/headless/utils/zone","utils/zone","zone","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":36,"import":37},"utils/writables",[3,6,9,12,15,18,21,24,27,30,33],{"source":4,"name":5},"## function_createTypeEnum\n> **createTypeEnum**\\\u003C`T`\\>(`enumList`): [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`T`\\>\n\nDefined in: [core/src/utils/writables.ts:143](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L143)\n\nBuild an enum normalizer\n\n### Type Parameters\n\n• **T**\n\nthe enum type\n\n### Parameters\n\n#### enumList\n\n`T`[]\n\nlist of enum values to check\n\n### Returns\n\n[`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`T`\\>\n\nthe enum normalizer\n","createTypeEnum",{"source":7,"name":8},"## function_testToNormalizeValue\n> **testToNormalizeValue**\\\u003C`T`\\>(`filter`): (`value`) => *typeof* [`INVALID_VALUE`](../types#invalid_value) \\| `T`\n\nDefined in: [core/src/utils/writables.ts:15](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L15)\n\nCheck if a value respects a provided type guard.\n\n### Type Parameters\n\n• **T**\n\nThe type that the filter function validates.\n\n### Parameters\n\n#### filter\n\n(`value`) => `value is T`\n\nA function that takes a value and returns a boolean indicating\n                whether the value is of type T.\n\n### Returns\n\n`Function`\n\nA function that takes a value and returns the value if it passes the filter,\n         otherwise returns `INVALID_VALUE`.\n\n#### Parameters\n\n##### value\n\n`any`\n\n#### Returns\n\n*typeof* [`INVALID_VALUE`](../types#invalid_value) \\| `T`\n","testToNormalizeValue",{"source":10,"name":11},"## constant_typeArray\n> `const` **typeArray**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`any`[]\\>\n\nDefined in: [core/src/utils/writables.ts:123](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L123)\n\nA writable object with default options for handling arrays.\n","typeArray",{"source":13,"name":14},"## constant_typeBoolean\n> `const` **typeBoolean**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`boolean`\\>\n\nDefined in: [core/src/utils/writables.ts:76](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L76)\n\nA writable object with default options for boolean values.\n\nThis object provides a normalized way to handle boolean values\nusing the `WritableWithDefaultOptions` interface. The `normalizeValue`\nfunction ensures that the value is properly validated and normalized\nas a boolean.\n","typeBoolean",{"source":16,"name":17},"## constant_typeBooleanOrNull\n> `const` **typeBooleanOrNull**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`boolean` \\| `null`\\>\n\nDefined in: [core/src/utils/writables.ts:86](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L86)\n\nA writable with default options that normalizes its value to a boolean or null.\n\nThis writable uses a normalization function that allows null values and ensures\nthe value is a boolean.\n","typeBooleanOrNull",{"source":19,"name":20},"## constant_typeFunction\n> `const` **typeFunction**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C(...`args`) => `any`\\>\n\nDefined in: [core/src/utils/writables.ts:103](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L103)\n\nA writable object that holds a function type with default options.\n","typeFunction",{"source":22,"name":23},"## constant_typeHTMLElementOrNull\n> `const` **typeHTMLElementOrNull**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\\>\n\nDefined in: [core/src/utils/writables.ts:115](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L115)\n\nA writable object with default options for handling values of type `HTMLElement` or `null`.\n\nThis object provides:\n- `normalizeValue`: A function to normalize the value, ensuring it is either an `HTMLElement` or `null`.\n- `equal`: A function to compare two values for equality using `Object.is`.\n","typeHTMLElementOrNull",{"source":25,"name":26},"## constant_typeNumber\n> `const` **typeNumber**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`number`\\>\n\nDefined in: [core/src/utils/writables.ts:24](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L24)\n\nA writable object with default options for handling numbers.\n","typeNumber",{"source":28,"name":29},"## function_typeNumberInRangeFactory\n> **typeNumberInRangeFactory**(`min`, `max`, `options`): [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`number`\\>\n\nDefined in: [core/src/utils/writables.ts:48](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L48)\n\nFactory function for creating a type constraint for numbers within a specified range.\n\n### Parameters\n\n#### min\n\n`number`\n\nThe minimum value.\n\n#### max\n\n`number`\n\nThe maximum value.\n\n#### options\n\n[`TypeNumberInRangeOptions`](#typenumberinrangeoptions) = `{}`\n\nAdditional options to customize the behavior.\n\n### Returns\n\n[`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`number`\\>\n\nA type guard function that returns the clamp value or INVALID_VALUE depending on the provided options.\n","typeNumberInRangeFactory",{"source":31,"name":32},"## interface_TypeNumberInRangeOptions\nDefined in: [core/src/utils/writables.ts:31](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L31)\n\nOptions for specifying the behavior of number range validation.\n\n### Properties\n\n#### strict?\n\n> `optional` **strict**: `boolean`\n\nDefined in: [core/src/utils/writables.ts:33](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L33)\n\nIf `true`, the range checking will be strict, excluding the minimum and maximum values. Default is `false`.\n\n***\n\n#### useClamp?\n\n> `optional` **useClamp**: `boolean`\n\nDefined in: [core/src/utils/writables.ts:36](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L36)\n\nIf `true`, values outside the range will be clamped to the minimum or maximum. Default is `true`.\n","TypeNumberInRangeOptions",{"source":34,"name":35},"## constant_typeString\n> `const` **typeString**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`string`\\>\n\nDefined in: [core/src/utils/writables.ts:96](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L96)\n\nA writable object with default options for string values.\n\nThis object provides a normalized value for strings using the `testToNormalizeValue` function\nwith the `isString` validator.\n","typeString","API writables","@agnos-ui/angular-headless"],"uses":{"params":["framework","type","slug"]}}]}
