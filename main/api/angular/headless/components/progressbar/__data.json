{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":160},true,[3,6,9,12,63,110,129],{"title":4,"path":5,"submenu":-1},"Types","api/angular/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/angular/headless/config",{"title":10,"path":11,"submenu":-1},"Slot","api/angular/headless/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51,55,59],{"path":16,"slug":17,"label":18},"api/angular/headless/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/angular/headless/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/angular/headless/components/carousel","components/carousel","Carousel",{"path":28,"slug":29,"label":30},"api/angular/headless/components/collapse","components/collapse","Collapse",{"path":32,"slug":33,"label":34},"api/angular/headless/components/modal","components/modal","Modal",{"path":36,"slug":37,"label":38},"api/angular/headless/components/pagination","components/pagination","Pagination",{"path":40,"slug":41,"label":42},"api/angular/headless/components/progressbar","components/progressbar","Progressbar",{"path":44,"slug":45,"label":46},"api/angular/headless/components/rating","components/rating","Rating",{"path":48,"slug":49,"label":50},"api/angular/headless/components/select","components/select","Select",{"path":52,"slug":53,"label":54},"api/angular/headless/components/slider","components/slider","Slider",{"path":56,"slug":57,"label":58},"api/angular/headless/components/toast","components/toast","Toast",{"path":60,"slug":61,"label":62},"api/angular/headless/components/tree","components/tree","Tree",{"title":64,"path":-1,"submenu":65},"Services",[66,70,74,78,82,86,90,94,98,102,106],{"path":67,"slug":68,"label":69},"api/angular/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":71,"slug":72,"label":73},"api/angular/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":75,"slug":76,"label":77},"api/angular/headless/services/focusElement","services/focusElement","focusElement",{"path":79,"slug":80,"label":81},"api/angular/headless/services/focustrack","services/focustrack","focustrack",{"path":83,"slug":84,"label":85},"api/angular/headless/services/hash","services/hash","hash",{"path":87,"slug":88,"label":89},"api/angular/headless/services/intersection","services/intersection","intersection",{"path":91,"slug":92,"label":93},"api/angular/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":95,"slug":96,"label":97},"api/angular/headless/services/navManager","services/navManager","navManager",{"path":99,"slug":100,"label":101},"api/angular/headless/services/portal","services/portal","portal",{"path":103,"slug":104,"label":105},"api/angular/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":107,"slug":108,"label":109},"api/angular/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":111,"path":-1,"submenu":112},"Transitions",[113,117,121,125],{"path":114,"slug":115,"label":116},"api/angular/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":118,"slug":119,"label":120},"api/angular/headless/services/transitions/collapse","services/transitions/collapse","collapse",{"path":122,"slug":123,"label":124},"api/angular/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":126,"slug":127,"label":128},"api/angular/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":130,"path":-1,"submenu":131},"Utils",[132,136,140,144,148,152,156],{"path":133,"slug":134,"label":135},"api/angular/headless/utils/coercion","utils/coercion","coercion",{"path":137,"slug":138,"label":139},"api/angular/headless/utils/directive","utils/directive","directive",{"path":141,"slug":142,"label":143},"api/angular/headless/utils/func","utils/func","func",{"path":145,"slug":146,"label":147},"api/angular/headless/utils/stores","utils/stores","stores",{"path":149,"slug":150,"label":151},"api/angular/headless/utils/widget","utils/widget","widget",{"path":153,"slug":154,"label":155},"api/angular/headless/utils/writables","utils/writables","writables",{"path":157,"slug":158,"label":159},"api/angular/headless/utils/zone","utils/zone","zone","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":21,"import":22},"components/progressbar",[3,6,9,12,15,18],{"source":4,"name":5},"## constant_createProgressbar\n> `const` **createProgressbar**: [`WidgetFactory`](../types#widgetfactory)\\\u003C[`ProgressbarWidget`](#progressbarwidget)\\>\n\n\nCreate an ProgressbarWidget with given config props\n\n### Param\n\nan optional progress bar config\n\n### Returns\n\nan ProgressbarWidget\n","createProgressbar",{"source":7,"name":8},"## function_getProgressbarDefaultConfig\n> **getProgressbarDefaultConfig**(): [`ProgressbarProps`](#progressbarprops)\n\n\nRetrieve a shallow copy of the default Progressbar config\n\n### Returns\n\n[`ProgressbarProps`](#progressbarprops)\n\nthe default Progressbar config\n","getProgressbarDefaultConfig",{"source":10,"name":11},"## interface_ProgressbarDirectives\n\nInterface representing directives for a progress bar component.\n\n### Properties\n\n#### ariaDirective\n\n> **ariaDirective**: [`Directive`](../types#directive)\n\n\nA directive to be applied to the main container that handles aria attributes.\n","ProgressbarDirectives",{"source":13,"name":14},"## interface_ProgressbarProps\n\nInterface representing the properties for the Progressbar component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueTextFn\n\n> **ariaValueTextFn**: (`value`, `minimum`, `maximum`) => `undefined` \\| `string`\n\n\nReturn the value for the 'aria-valuetext' attribute.\n\n##### Parameters\n\n###### value\n\n`number`\n\ncurrent value\n\n###### minimum\n\n`number`\n\nminimum value\n\n###### maximum\n\n`number`\n\nmaximum value\n\n##### Returns\n\n`undefined` \\| `string`\n\n##### Default Value\n\n```ts\n() => undefined\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### max\n\n> **max**: `number`\n\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### value\n\n> **value**: `number`\n\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarProps",{"source":16,"name":17},"## interface_ProgressbarState\n\nRepresents the state of a progress bar component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\n\nThe aria label.\n\n##### Default Value\n\n`'Progressbar'`\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `undefined` \\| `string`\n\n\nThe aria value text.\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### finished\n\n> **finished**: `boolean`\n\n\n`true` if the value has reached its maximum value.\n\n***\n\n#### max\n\n> **max**: `number`\n\n\nThe maximum value.\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\n\nThe minimum value.\n\n##### Default Value\n\n`0`\n\n***\n\n#### percentage\n\n> **percentage**: `number`\n\n\nPercentage of completion.\n\n***\n\n#### started\n\n> **started**: `boolean`\n\n\n`true` if the value is above its minimum value.\n\n***\n\n#### value\n\n> **value**: `number`\n\n\nThe current value.\n\n##### Default Value\n\n`0`\n","ProgressbarState",{"source":19,"name":20},"## type alias_ProgressbarWidget\n> **ProgressbarWidget** = [`Widget`](../types#widget)\\\u003C[`ProgressbarProps`](#progressbarprops), [`ProgressbarState`](#progressbarstate), `object`, [`ProgressbarDirectives`](#progressbardirectives)\\>\n\n\nRepresents a Progressbar widget with specific properties, state, API, and directives.\n","ProgressbarWidget","API progressbar","@agnos-ui/angular-headless"],"uses":{"params":["framework","type","slug"]}}]}
