{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":140},true,[3,6,9,12,51,94,113],{"title":4,"path":5,"submenu":-1},"Types","api/angular/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/angular/headless/config",{"title":10,"path":11,"submenu":-1},"Slot","api/angular/headless/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47],{"path":16,"slug":17,"label":18},"api/angular/headless/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/angular/headless/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/angular/headless/components/modal","components/modal","Modal",{"path":28,"slug":29,"label":30},"api/angular/headless/components/pagination","components/pagination","Pagination",{"path":32,"slug":33,"label":34},"api/angular/headless/components/progressbar","components/progressbar","Progressbar",{"path":36,"slug":37,"label":38},"api/angular/headless/components/rating","components/rating","Rating",{"path":40,"slug":41,"label":42},"api/angular/headless/components/select","components/select","Select",{"path":44,"slug":45,"label":46},"api/angular/headless/components/slider","components/slider","Slider",{"path":48,"slug":49,"label":50},"api/angular/headless/components/toast","components/toast","Toast",{"title":52,"path":-1,"submenu":53},"Services",[54,58,62,66,70,74,78,82,86,90],{"path":55,"slug":56,"label":57},"api/angular/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":59,"slug":60,"label":61},"api/angular/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":63,"slug":64,"label":65},"api/angular/headless/services/focustrack","services/focustrack","focustrack",{"path":67,"slug":68,"label":69},"api/angular/headless/services/hash","services/hash","hash",{"path":71,"slug":72,"label":73},"api/angular/headless/services/intersection","services/intersection","intersection",{"path":75,"slug":76,"label":77},"api/angular/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":79,"slug":80,"label":81},"api/angular/headless/services/navManager","services/navManager","navManager",{"path":83,"slug":84,"label":85},"api/angular/headless/services/portal","services/portal","portal",{"path":87,"slug":88,"label":89},"api/angular/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":91,"slug":92,"label":93},"api/angular/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":95,"path":-1,"submenu":96},"Transitions",[97,101,105,109],{"path":98,"slug":99,"label":100},"api/angular/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":102,"slug":103,"label":104},"api/angular/headless/services/transitions/collapse","services/transitions/collapse","collapse",{"path":106,"slug":107,"label":108},"api/angular/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":110,"slug":111,"label":112},"api/angular/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":114,"path":-1,"submenu":115},"Utils",[116,120,124,128,132,136],{"path":117,"slug":118,"label":119},"api/angular/headless/utils/coercion","utils/coercion","coercion",{"path":121,"slug":122,"label":123},"api/angular/headless/utils/directive","utils/directive","directive",{"path":125,"slug":126,"label":127},"api/angular/headless/utils/stores","utils/stores","stores",{"path":129,"slug":130,"label":131},"api/angular/headless/utils/widget","utils/widget","widget",{"path":133,"slug":134,"label":135},"api/angular/headless/utils/writables","utils/writables","writables",{"path":137,"slug":138,"label":139},"api/angular/headless/utils/zone","utils/zone","zone","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":27,"import":28},"services/navManager",[3,6,9,12,15,18,21,24],{"source":4,"name":5},"## function_createNavManager\n> **createNavManager**\\\u003C`T`\\>(): [`NavManager`](#navmanager)\\\u003C`T`\\>\n\nReturns a new instance of the navigation manager.\n\nThe navigation manager simplifies keyboard navigation for a set of DOM elements.\nIt provides a directive to use on some DOM elements, both to add the keydown event handler and to specify which elements should be managed\n(either by directly putting the directive on those elements, or by putting the directive on a parent element and\nspecifying which child elements should be included through a selector function).\n\nIt provides some utilities to move the focus between those elements (focusFirst/focusLast, focusLeft/focusRight, focusPrevious/focusNext).\n\n### Type Parameters\n\n• **T**\n\n### Returns\n\n[`NavManager`](#navmanager)\\\u003C`T`\\>\n\na new instance of the navigation manager\n","createNavManager",{"source":7,"name":8},"## type alias_FocusEnd\n> **FocusEnd**: (`arg`?) => [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\n\n### Parameters\n\n• **arg?**\n\n• **arg.event?**: [`Event`](https://developer.mozilla.org/docs/Web/API/Event)\n\n### Returns\n\n[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\n","FocusEnd",{"source":10,"name":11},"## type alias_FocusNeighbour\n> **FocusNeighbour**: (`arg`?) => [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\n\n### Parameters\n\n• **arg?**\n\n• **arg.event?**: [`Event`](https://developer.mozilla.org/docs/Web/API/Event)\n\n• **arg.referenceElement?**: [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\n\n### Returns\n\n[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\n","FocusNeighbour",{"source":13,"name":14},"## function_getKeyName\n> **getKeyName**(`event`): `string`\n\nReturns the key name given the keyboard event. The key name is built using event.key (such as ArrowLeft, PageDown...),\nprefixed with the modifiers. If present, modifiers are always in the same order: Meta+Ctrl+Alt+Shift+...\n\n### Parameters\n\n• **event**: [`KeyboardEvent`](https://developer.mozilla.org/docs/Web/API/KeyboardEvent)\n\nkeyboard event\n\n### Returns\n\n`string`\n\nthe name of the key, including modifiers\n","getKeyName",{"source":16,"name":17},"## function_isInternalInputNavigation\n> **isInternalInputNavigation**(`event`): `boolean`\n\nReturns true if the keyboard event is an ArrowLeft, ArrowRight, Home or End key press that should make the cursor move inside\nthe input and false otherwise (i.e. the key is not ArrowLeft, ArrowRight, Home or End key, or that would not make the cursor move\nbecause it is already at one end of the input)\n\n### Parameters\n\n• **event**: [`KeyboardEvent`](https://developer.mozilla.org/docs/Web/API/KeyboardEvent)\n\nkeyboard event\n\n### Returns\n\n`boolean`\n\ntrue if the keyboard event is an ArrowLeft, ArrowRight, Home or End key press that should make the cursor move inside\nthe input and false otherwise.\n","isInternalInputNavigation",{"source":19,"name":20},"## type alias_NavManager\n> **NavManager**\\\u003C`T`\\>: `object`\n\n### Type Parameters\n\n• **T**\n\n### Type declaration\n\n#### directive\n\n> **directive**: [`Directive`](../types#directive)\\\u003C[`NavManagerItemConfig`](#navmanageritemconfig)\\\u003C`T`\\>, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\nDirective to attach the nav manager\n\n#### elementsInDomOrder$\n\n> **elementsInDomOrder$**: [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)[]\\>\n\nStore containing the navigable elements in DOM order\n\n#### focusFirst\n\n> **focusFirst**: [`FocusEnd`](#focusend)\n\nFocus the first element, respecting the anscestor direction.\n\n#### focusFirstLeft\n\n> **focusFirstLeft**: [`FocusEnd`](#focusend)\n\nFocus the element at the left-end of the list.\n\n#### focusFirstRight\n\n> **focusFirstRight**: [`FocusEnd`](#focusend)\n\nFocus the element at the right-end of the list.\n\n#### focusIndex\n\n> **focusIndex**: (`index`, `moveDirection`) => [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\n\nFocus the element at the given idex.\nIf the element at the given index is not focusable, use the moveDirection to step into the next focusable element.\n\n##### Parameters\n\n• **index**: `number`\n\nthe index of the element to focus\n\n• **moveDirection**: `-1` \\| `0` \\| `1`\n\na move direction\n\n##### Returns\n\n[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\n\nthe new focusable element if found, null otherwise\n\n#### focusLast\n\n> **focusLast**: [`FocusEnd`](#focusend)\n\nFocus the last element, respecting the anscestor direction.\n\n#### focusLeft\n\n> **focusLeft**: [`FocusNeighbour`](#focusneighbour)\n\nFocus the next focusable element to the left of the currently focused element.\n\n#### focusNext\n\n> **focusNext**: [`FocusNeighbour`](#focusneighbour)\n\nFocus the next element, respecting the anscestor direction.\n\n#### focusPrevious\n\n> **focusPrevious**: [`FocusNeighbour`](#focusneighbour)\n\nFocus the previous element, respecting the anscestor direction.\n\n#### focusRight\n\n> **focusRight**: [`FocusNeighbour`](#focusneighbour)\n\nFocus the next focusable element to the right of the currently focused element.\n\n#### refreshElements\n\n> **refreshElements**: (`now`?) => `void`\n\nRefresh the elements list.\n\n##### Parameters\n\n• **now?**: `boolean`\n\nforce the instant refresh of the elements\n\n##### Returns\n\n`void`\n","NavManager",{"source":22,"name":23},"## interface_NavManagerItemConfig\nType of the parameter of the navigation manager directive.\n\n### Type Parameters\n\n• **T** = `any`\n\n### Properties\n\n#### context?\n\n> `optional` **context**: `T`\n\n***\n\n#### keys?\n\n> `optional` **keys**: [`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C`string`, [`NavManagerKeyHandler`](#navmanagerkeyhandler)\\\u003C`T`\\>\\>\n\nMap of key handlers.\nThe key in the map should match the result of calling [getKeyName](#getkeyname) on the key event (for example \"ArrowLeft\" or \"Ctrl+PageDown\").\nThe value in the map is the corresponding key handler.\n\n***\n\n#### selector()?\n\n> `optional` **selector**: (`directiveElement`) => [`Iterable`](https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterable-interface)\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\\>\n\nFunction returning DOM elements to include in the navigation manager.\nIt receives as a parameter the DOM element on which the navigation manager directive is used.\nIf not specified, the default selector function only returns the element on which the navigation manager directive is used.\n\n##### Parameters\n\n• **directiveElement**: [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\n##### Returns\n\n[`Iterable`](https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterable-interface)\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\\>\n","NavManagerItemConfig",{"source":25,"name":26},"## type alias_NavManagerKeyHandler\n> **NavManagerKeyHandler**\\\u003C`T`\\>: (`info`) => `void`\n\nType of a key handler of the navigation manager.\nA key handler receives an object as its parameter, with the following properties:\n- event: key event\n- directiveElement: DOM element which has the navigation manager directive\n- navManager: navigation manager instance\n\n### Type Parameters\n\n• **T** = `any`\n\n### Parameters\n\n• **info**\n\n• **info.context?**: `T`\n\n• **info.directiveElement**: [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\n• **info.event**: [`Event`](https://developer.mozilla.org/docs/Web/API/Event)\n\n• **info.navManager**: [`NavManager`](#navmanager)\\\u003C`T`\\>\n\n### Returns\n\n`void`\n","NavManagerKeyHandler","API navManager","@agnos-ui/angular-headless"],"uses":{"params":["framework","type","slug"]}}]}
