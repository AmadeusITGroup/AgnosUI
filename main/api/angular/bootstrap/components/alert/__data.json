{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":152},true,[3,6,9,12,59,102,125],{"title":4,"path":5,"submenu":-1},"Types","api/angular/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/angular/bootstrap/config",{"title":10,"path":11,"submenu":-1},"Slot","api/angular/bootstrap/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51,55],{"path":16,"slug":17,"label":18},"api/angular/bootstrap/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/angular/bootstrap/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/angular/bootstrap/components/collapse","components/collapse","Collapse",{"path":28,"slug":29,"label":30},"api/angular/bootstrap/components/modal","components/modal","Modal",{"path":32,"slug":33,"label":34},"api/angular/bootstrap/components/pagination","components/pagination","Pagination",{"path":36,"slug":37,"label":38},"api/angular/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":40,"slug":41,"label":42},"api/angular/bootstrap/components/rating","components/rating","Rating",{"path":44,"slug":45,"label":46},"api/angular/bootstrap/components/select","components/select","Select",{"path":48,"slug":49,"label":50},"api/angular/bootstrap/components/slider","components/slider","Slider",{"path":52,"slug":53,"label":54},"api/angular/bootstrap/components/toast","components/toast","Toast",{"path":56,"slug":57,"label":58},"api/angular/bootstrap/components/tree","components/tree","Tree",{"title":60,"path":-1,"submenu":61},"Services",[62,66,70,74,78,82,86,90,94,98],{"path":63,"slug":64,"label":65},"api/angular/bootstrap/services/extendWidget","services/extendWidget","extendWidget",{"path":67,"slug":68,"label":69},"api/angular/bootstrap/services/floatingUI","services/floatingUI","floatingUI",{"path":71,"slug":72,"label":73},"api/angular/bootstrap/services/focustrack","services/focustrack","focustrack",{"path":75,"slug":76,"label":77},"api/angular/bootstrap/services/hash","services/hash","hash",{"path":79,"slug":80,"label":81},"api/angular/bootstrap/services/intersection","services/intersection","intersection",{"path":83,"slug":84,"label":85},"api/angular/bootstrap/services/matchMedia","services/matchMedia","matchMedia",{"path":87,"slug":88,"label":89},"api/angular/bootstrap/services/navManager","services/navManager","navManager",{"path":91,"slug":92,"label":93},"api/angular/bootstrap/services/portal","services/portal","portal",{"path":95,"slug":96,"label":97},"api/angular/bootstrap/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":99,"slug":100,"label":101},"api/angular/bootstrap/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":103,"path":-1,"submenu":104},"Transitions",[105,109,113,117,121],{"path":106,"slug":107,"label":108},"api/angular/bootstrap/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":110,"slug":111,"label":112},"api/angular/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":114,"slug":115,"label":116},"api/angular/bootstrap/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":118,"slug":119,"label":120},"api/angular/bootstrap/services/transitions/fade","services/transitions/fade","fade",{"path":122,"slug":123,"label":124},"api/angular/bootstrap/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":126,"path":-1,"submenu":127},"Utils",[128,132,136,140,144,148],{"path":129,"slug":130,"label":131},"api/angular/bootstrap/utils/coercion","utils/coercion","coercion",{"path":133,"slug":134,"label":135},"api/angular/bootstrap/utils/directive","utils/directive","directive",{"path":137,"slug":138,"label":139},"api/angular/bootstrap/utils/stores","utils/stores","stores",{"path":141,"slug":142,"label":143},"api/angular/bootstrap/utils/widget","utils/widget","widget",{"path":145,"slug":146,"label":147},"api/angular/bootstrap/utils/writables","utils/writables","writables",{"path":149,"slug":150,"label":151},"api/angular/bootstrap/utils/zone","utils/zone","zone","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":39,"import":40},"components/alert",[3,6,9,12,15,18,21,24,27,30,33,36],{"source":4,"name":5},"## interface_AlertApi\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:214\n\nRepresents the API for an alert component.\n\n### Methods\n\n#### close\n\n> **close**(): `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:219\n\nTriggers alert closing programmatically (same as clicking on the close button (×)).\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:225\n\nTriggers the alert to be displayed for the user.\n\n##### Returns\n\n`void`\n","AlertApi",{"source":7,"name":8},"## class_AlertBodyDirective\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:15](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L15)\n\nDirective to be used as a structural directive for the body of an alert component.\n\nThis directive allows the use of a template reference for the alert body content, with type [AlertContext](#alertcontext).\n","AlertBodyDirective",{"source":10,"name":11},"## class_AlertComponent\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:82](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L82)\n\nAlertComponent is a UI component that extends BaseWidgetDirective to provide\nan alert box with various customizable properties and behaviors.\n\n### Remarks\n\nThis component is designed to be used with Bootstrap styles and supports\nvarious Bootstrap contextual classes for different alert types.\n\n### Properties\n\n#### animated\n\n> `readonly` **animated**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:132](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L132)\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> `readonly` **animatedOnInit**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:122](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L122)\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> `readonly` **ariaCloseButtonLabel**: `InputSignal`\\\u003C`undefined` \\| `string`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:139](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L139)\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> `readonly` **children**: `InputSignal`\\\u003C[`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:144](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L144)\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> `readonly` **className**: `InputSignal`\\\u003C`undefined` \\| `string`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:188](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L188)\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> `readonly` **dismissible**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:96](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L96)\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> `readonly` **hidden**: `OutputEmitterRef`\\\u003C`void`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:171](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L171)\n\nCallback called when the alert is hidden.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### shown\n\n> `readonly` **shown**: `OutputEmitterRef`\\\u003C`void`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:181](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L181)\n\nCallback called when the alert is shown.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> `readonly` **structure**: `InputSignal`\\\u003C[`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:150](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L150)\n\nGlobal template for the alert component\n\n***\n\n#### transition\n\n> `readonly` **transition**: `InputSignal`\\\u003C`undefined` \\| [`TransitionFn`](../services/transitions/baseTransitions#transitionfn)\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:105](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L105)\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### type\n\n> `readonly` **type**: `InputSignal`\\\u003C`undefined` \\| [`BSContextualClass`](../types#bscontextualclass)\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L88)\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> `readonly` **visible**: `InputSignalWithTransform`\\\u003C`undefined` \\| `boolean`, `unknown`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:112](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L112)\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n\n***\n\n#### visibleChange\n\n> `readonly` **visibleChange**: `OutputEmitterRef`\\\u003C`boolean`\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:161](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L161)\n\nCallback called when the alert visibility changed.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n### Accessors\n\n#### api\n\n##### Get Signature\n\n> **get** **api**(): `W`\\[`\"api\"`\\]\n\nDefined in: [angular/headless/src/utils/widget.ts:140](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/headless/src/utils/widget.ts#L140)\n\nRetrieves the widget api\n\n###### Returns\n\n`W`\\[`\"api\"`\\]\n\nthe widget api\n\n***\n\n#### directives\n\n##### Get Signature\n\n> **get** **directives**(): `W`\\[`\"directives\"`\\]\n\nDefined in: [angular/headless/src/utils/widget.ts:156](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/headless/src/utils/widget.ts#L156)\n\nRetrieves the widget directives\n\n###### Returns\n\n`W`\\[`\"directives\"`\\]\n\nthe widget directives\n\n***\n\n#### state\n\n##### Get Signature\n\n> **get** **state**(): [`AngularState`](../types#angularstate)\\\u003C`W`\\>\n\nDefined in: [angular/headless/src/utils/widget.ts:148](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/headless/src/utils/widget.ts#L148)\n\nRetrieves the widget state. Each property of the state is exposed through an Angular [Signal](https://angular.dev/api/core/Signal)\n\n###### Returns\n\n[`AngularState`](../types#angularstate)\\\u003C`W`\\>\n\nthe widget state\n","AlertComponent",{"source":13,"name":14},"## interface_AlertContext\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:19\n\nRepresents the context for an Alert component.\n\n### Properties\n\n#### api\n\n> **api**: [`AlertApi`](#alertapi)\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`AlertDirectives`](#alertdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`AngularState`](../types#angularstate)\\\u003C[`AlertWidget`](#alertwidget)\\>\n\nDefined in: [angular/headless/src/types.ts:119](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/headless/src/types.ts#L119)\n\nThe state of the widget. Each property of the state is exposed through an Angular [Signal](https://angular.dev/api/core/Signal)\n","AlertContext",{"source":16,"name":17},"## constant_alertDefaultSlotStructure\n> `const` **alertDefaultSlotStructure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:54](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L54)\n\nRepresents the default slot structure for the alert component.\n","alertDefaultSlotStructure",{"source":19,"name":20},"## interface_AlertDirectives\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:231\n\nRepresents the directives for an alert component.\n\n### Properties\n\n#### transitionDirective\n\n> **transitionDirective**: [`Directive`](../types#directive)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:236\n\nthe transition directive, piloting what is the visual effect of going from hidden to visible\n","AlertDirectives",{"source":22,"name":23},"## interface_AlertProps\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:82\n\nRepresents the properties for the Alert component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:144\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:134\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:167\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:184\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:174\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:152\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:112\n\nCallback called when the alert is hidden.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:123\n\nCallback called when the alert is shown.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:101\n\nCallback called when the alert visibility changed.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:179\n\nGlobal template for the alert component\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](../services/transitions/baseTransitions#transitionfn)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:91\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### type\n\n> **type**: [`BSContextualClass`](../types#bscontextualclass)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:191\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:159\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertProps",{"source":25,"name":26},"## interface_AlertState\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:24\n\nRepresents the state of an alert component.\n\n### Properties\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:52\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:69\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:59\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:37\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:29\n\nIs `true` when the alert is hidden. Compared to `visible`, this is updated after the transition is executed.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:64\n\nGlobal template for the alert component\n\n***\n\n#### type\n\n> **type**: [`BSContextualClass`](../types#bscontextualclass)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:76\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:44\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertState",{"source":28,"name":29},"## class_AlertStructureDirective\nDefined in: [angular/bootstrap/src/components/alert/alert.component.ts:28](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/angular/bootstrap/src/components/alert/alert.component.ts#L28)\n\nDirective to define the structure of an alert component.\n\nThis directive uses a `TemplateRef` to inject the template reference of the [AlertContext](#alertcontext).\n","AlertStructureDirective",{"source":31,"name":32},"## type alias_AlertWidget\n> **AlertWidget**: [`Widget`](../types#widget)\\\u003C[`AlertProps`](#alertprops), [`AlertState`](#alertstate), [`AlertApi`](#alertapi), [`AlertDirectives`](#alertdirectives)\\>\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:199\n\nRepresents an alert widget component.\n","AlertWidget",{"source":34,"name":35},"## function_createAlert\n> **createAlert**(`props`?): [`AlertWidget`](#alertwidget)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:208\n\nCreate an AlertWidget with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../types#propsconfig)\\\u003C[`AlertProps`](#alertprops)\\>\n\n### Returns\n\n[`AlertWidget`](#alertwidget)\n\nan AlertWidget\n","createAlert",{"source":37,"name":38},"## function_getAlertDefaultConfig\n> **getAlertDefaultConfig**(): [`AlertProps`](#alertprops)\n\nDefined in: angular/bootstrap/src/components/alert/alert.gen.ts:11\n\nRetrieve a shallow copy of the default Alert config\n\n### Returns\n\n[`AlertProps`](#alertprops)\n\nthe default Alert config\n","getAlertDefaultConfig","API alert","@agnos-ui/angular-bootstrap"],"uses":{"params":["framework","type","slug"]}}]}
