{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":144},true,[3,6,9,12,51,94,117],{"title":4,"path":5,"submenu":-1},"Types","api/angular/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/angular/bootstrap/config",{"title":10,"path":11,"submenu":-1},"Slot","api/angular/bootstrap/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47],{"path":16,"slug":17,"label":18},"api/angular/bootstrap/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/angular/bootstrap/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/angular/bootstrap/components/modal","components/modal","Modal",{"path":28,"slug":29,"label":30},"api/angular/bootstrap/components/pagination","components/pagination","Pagination",{"path":32,"slug":33,"label":34},"api/angular/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":36,"slug":37,"label":38},"api/angular/bootstrap/components/rating","components/rating","Rating",{"path":40,"slug":41,"label":42},"api/angular/bootstrap/components/select","components/select","Select",{"path":44,"slug":45,"label":46},"api/angular/bootstrap/components/slider","components/slider","Slider",{"path":48,"slug":49,"label":50},"api/angular/bootstrap/components/toast","components/toast","Toast",{"title":52,"path":-1,"submenu":53},"Services",[54,58,62,66,70,74,78,82,86,90],{"path":55,"slug":56,"label":57},"api/angular/bootstrap/services/extendWidget","services/extendWidget","extendWidget",{"path":59,"slug":60,"label":61},"api/angular/bootstrap/services/floatingUI","services/floatingUI","floatingUI",{"path":63,"slug":64,"label":65},"api/angular/bootstrap/services/focustrack","services/focustrack","focustrack",{"path":67,"slug":68,"label":69},"api/angular/bootstrap/services/hash","services/hash","hash",{"path":71,"slug":72,"label":73},"api/angular/bootstrap/services/intersection","services/intersection","intersection",{"path":75,"slug":76,"label":77},"api/angular/bootstrap/services/matchMedia","services/matchMedia","matchMedia",{"path":79,"slug":80,"label":81},"api/angular/bootstrap/services/navManager","services/navManager","navManager",{"path":83,"slug":84,"label":85},"api/angular/bootstrap/services/portal","services/portal","portal",{"path":87,"slug":88,"label":89},"api/angular/bootstrap/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":91,"slug":92,"label":93},"api/angular/bootstrap/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":95,"path":-1,"submenu":96},"Transitions",[97,101,105,109,113],{"path":98,"slug":99,"label":100},"api/angular/bootstrap/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":102,"slug":103,"label":104},"api/angular/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":106,"slug":107,"label":108},"api/angular/bootstrap/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":110,"slug":111,"label":112},"api/angular/bootstrap/services/transitions/fade","services/transitions/fade","fade",{"path":114,"slug":115,"label":116},"api/angular/bootstrap/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":118,"path":-1,"submenu":119},"Utils",[120,124,128,132,136,140],{"path":121,"slug":122,"label":123},"api/angular/bootstrap/utils/coercion","utils/coercion","coercion",{"path":125,"slug":126,"label":127},"api/angular/bootstrap/utils/directive","utils/directive","directive",{"path":129,"slug":130,"label":131},"api/angular/bootstrap/utils/stores","utils/stores","stores",{"path":133,"slug":134,"label":135},"api/angular/bootstrap/utils/widget","utils/widget","widget",{"path":137,"slug":138,"label":139},"api/angular/bootstrap/utils/writables","utils/writables","writables",{"path":141,"slug":142,"label":143},"api/angular/bootstrap/utils/zone","utils/zone","zone","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":45,"import":46,"pageMeta":47},"components/alert",[3,6,9,12,15,18,21,24,27,30,33,36,39,42],{"source":4,"name":5},"## interface_AlertApi\n### Methods\n\n#### close\n\n> **close**(): `void`\n\nTriggers alert closing programmatically (same as clicking on the close button (×)).\n\n##### Returns\n\n`void`\n\n***\n\n#### open\n\n> **open**(): `void`\n\nTriggers the alert to be displayed for the user.\n\n##### Returns\n\n`void`\n","AlertApi",{"source":7,"name":8},"## class_AlertBodyDirective\n### Constructors\n\n#### new AlertBodyDirective\n\n> **new AlertBodyDirective**(): [`AlertBodyDirective`](#alertbodydirective)\n\n##### Returns\n\n[`AlertBodyDirective`](#alertbodydirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is AlertContext`\n\n##### Parameters\n\n• **\\_dir**: [`AlertBodyDirective`](#alertbodydirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is AlertContext`\n","AlertBodyDirective",{"source":10,"name":11},"## class_AlertComponent\n### Implements\n\n- [`AfterContentChecked`](https://angular.dev/api/core/AfterContentChecked)\n\n### Constructors\n\n#### new AlertComponent\n\n> **new AlertComponent**(): [`AlertComponent`](#alertcomponent)\n\n##### Returns\n\n[`AlertComponent`](#alertcomponent)\n\n### Properties\n\n#### _widget\n\n> `readonly` **\\_widget**: [`AngularWidget`](../types#angularwidget)\\\u003C[`AlertWidget`](#alertwidget)\\>\n\n***\n\n#### animated\n\n> **animated**: `undefined` \\| `boolean`\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `undefined` \\| `boolean`\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `undefined` \\| `string`\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `undefined` \\| `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### defaultSlots\n\n> `readonly` **defaultSlots**: [`WritableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/WritableSignal.html)\\\u003C[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`AlertProps`](#alertprops)\\>, [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`AlertProps`](#alertprops)\\>\\>\n\n***\n\n#### dismissible\n\n> **dismissible**: `undefined` \\| `boolean`\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> **hidden**: `EventEmitter`\\\u003C`void`\\>\n\nCallback called when the alert is hidden.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### shown\n\n> **shown**: `EventEmitter`\\\u003C`void`\\>\n\nCallback called when the alert is shown.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### slotDefaultFromContent\n\n> **slotDefaultFromContent**: `undefined` \\| [`AlertBodyDirective`](#alertbodydirective)\n\n***\n\n#### slotStructureFromContent\n\n> **slotStructureFromContent**: `undefined` \\| [`AlertStructureDirective`](#alertstructuredirective)\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nGlobal template for the alert component\n\n***\n\n#### transition\n\n> **transition**: `undefined` \\| [`TransitionFn`](../services/transitions/baseTransitions#transitionfn)\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### type\n\n> **type**: `undefined` \\| [`BSContextualClass`](../types#bscontextualclass)\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `undefined` \\| `boolean`\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n\n***\n\n#### visibleChange\n\n> **visibleChange**: `EventEmitter`\\\u003C`boolean`\\>\n\nCallback called when the alert visibility changed.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n### Accessors\n\n#### api\n\n> `get` **api**(): `W`\\[`\"api\"`\\]\n\n##### Returns\n\n`W`\\[`\"api\"`\\]\n\n***\n\n#### state\n\n> `get` **state**(): [`Signal`](https://angular.dev/api/core/Signal)\\\u003C[`WidgetState`](../types#widgetstate)\\\u003C`W`\\>\\>\n\n##### Returns\n\n[`Signal`](https://angular.dev/api/core/Signal)\\\u003C[`WidgetState`](../types#widgetstate)\\\u003C`W`\\>\\>\n\n***\n\n#### widget\n\n> `get` **widget**(): [`ContextWidget`](../types#contextwidget)\\\u003C`W`\\>\n\n##### Returns\n\n[`ContextWidget`](../types#contextwidget)\\\u003C`W`\\>\n\n### Methods\n\n#### ngAfterContentChecked\n\n> **ngAfterContentChecked**(): `void`\n\nA callback method that is invoked immediately after the\ndefault change detector has completed checking all of the directive's\ncontent.\n\n##### Returns\n\n`void`\n\n##### Implementation of\n\n`AfterContentChecked.ngAfterContentChecked`\n\n***\n\n#### ngOnChanges\n\n> **ngOnChanges**(`changes`): `void`\n\n##### Parameters\n\n• **changes**: `SimpleChanges`\n\n##### Returns\n\n`void`\n\n##### Inherit Doc\n\n***\n\n#### ngOnInit\n\n> **ngOnInit**(): `void`\n\n##### Returns\n\n`void`\n\n##### Inherit Doc\n","AlertComponent",{"source":13,"name":14},"## type alias_AlertContext\n> **AlertContext**: [`WidgetSlotContext`](../types#widgetslotcontext)\\\u003C[`AlertWidget`](#alertwidget)\\>\n","AlertContext",{"source":16,"name":17},"## class_AlertDefaultSlotsComponent\n### Constructors\n\n#### new AlertDefaultSlotsComponent\n\n> **new AlertDefaultSlotsComponent**(): [`AlertDefaultSlotsComponent`](#alertdefaultslotscomponent)\n\n##### Returns\n\n[`AlertDefaultSlotsComponent`](#alertdefaultslotscomponent)\n\n### Properties\n\n#### structure\n\n> **structure**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C[`AlertContext`](#alertcontext)\\>\n","AlertDefaultSlotsComponent",{"source":19,"name":20},"## constant_alertDefaultSlotStructure\n> `const` **alertDefaultSlotStructure**: [`ComponentTemplate`](../types#componenttemplate)\\\u003C`unknown`, `\"structure\"`, [`AlertDefaultSlotsComponent`](#alertdefaultslotscomponent)\\>\n","alertDefaultSlotStructure",{"source":22,"name":23},"## interface_AlertDirectives\n### Properties\n\n#### transitionDirective\n\n> **transitionDirective**: [`Directive`](../types#directive)\n\nthe transition directive, piloting what is the visual effect of going from hidden to visible\n","AlertDirectives",{"source":25,"name":26},"## interface_AlertProps\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nIf `true`, alert closing will be animated.\n\nAnimation is triggered  when clicked on the close button (×),\nvia the `.close()` function or the visible prop is changed\n\n##### Default Value\n\n`true`\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\nIf `true`, alert opening will be animated.\n\nAnimation is triggered  when the `.open()` function is called\nor the visible prop is changed\n\n##### Default Value\n\n`false`\n\n***\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nCallback called when the alert is hidden.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nCallback called when the alert is shown.\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nCallback called when the alert visibility changed.\n\n##### Parameters\n\n• **visible**: `boolean`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nGlobal template for the alert component\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](../services/transitions/baseTransitions#transitionfn)\n\nThe transition function will be executed when the alert is displayed or hidden.\n\nDepending on the value of `animatedOnInit`, the animation can be optionally skipped during the showing process.\n\n##### Default Value\n\n`fadeTransition`\n\n***\n\n#### type\n\n> **type**: [`BSContextualClass`](../types#bscontextualclass)\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertProps",{"source":28,"name":29},"## interface_AlertState\n### Properties\n\n#### ariaCloseButtonLabel\n\n> **ariaCloseButtonLabel**: `string`\n\nAccessibility close button label\n\n##### Default Value\n\n`'Close'`\n\n***\n\n#### children\n\n> **children**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nTemplate for the alert content\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### dismissible\n\n> **dismissible**: `boolean`\n\nIf `true`, alert can be dismissed by the user.\nThe close button (×) will be displayed and you can be notified of the event with the (close) output.\n\n##### Default Value\n\n`true`\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\nIs `true` when the alert is hidden. Compared to `visible`, this is updated after the transition is executed.\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`AlertContext`](#alertcontext)\\>\n\nGlobal template for the alert component\n\n***\n\n#### type\n\n> **type**: [`BSContextualClass`](../types#bscontextualclass)\n\nType of the alert, following bootstrap types.\n\n##### Default Value\n\n`'primary'`\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nIf `true` the alert is visible to the user\n\n##### Default Value\n\n`true`\n","AlertState",{"source":31,"name":32},"## class_AlertStructureDirective\n### Constructors\n\n#### new AlertStructureDirective\n\n> **new AlertStructureDirective**(): [`AlertStructureDirective`](#alertstructuredirective)\n\n##### Returns\n\n[`AlertStructureDirective`](#alertstructuredirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is AlertContext`\n\n##### Parameters\n\n• **\\_dir**: [`AlertStructureDirective`](#alertstructuredirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is AlertContext`\n","AlertStructureDirective",{"source":34,"name":35},"## type alias_AlertWidget\n> **AlertWidget**: [`Widget`](../types#widget)\\\u003C[`AlertProps`](#alertprops), [`AlertState`](#alertstate), [`AlertApi`](#alertapi), `object`, [`AlertDirectives`](#alertdirectives)\\>\n","AlertWidget",{"source":37,"name":38},"## function_createAlert\n> **createAlert**(`props`?): [`AlertWidget`](#alertwidget)\n\nCreate an AlertWidget with given config props\n\n### Parameters\n\n• **props?**: [`PropsConfig`](../types#propsconfig)\\\u003C[`AlertProps`](#alertprops)\\>\n\n### Returns\n\n[`AlertWidget`](#alertwidget)\n\nan AlertWidget\n","createAlert",{"source":40,"name":41},"## function_getAlertDefaultConfig\n> **getAlertDefaultConfig**(): [`AlertProps`](#alertprops)\n\nRetrieve a shallow copy of the default Alert config\n\n### Returns\n\n[`AlertProps`](#alertprops)\n\nthe default Alert config\n","getAlertDefaultConfig",{"source":43,"name":44},"## type alias_PartialAlertProps\n> **PartialAlertProps**: [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`AlertProps`](#alertprops)\\>\n","PartialAlertProps","API alert","@agnos-ui/angular-bootstrap",{"description":48},"API Documentation for components alert"],"uses":{"params":["framework","type","slug"]}}]}
