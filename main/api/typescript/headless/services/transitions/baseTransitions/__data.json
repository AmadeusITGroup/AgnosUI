{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":121},true,[3,6,9,48,91,106],{"title":4,"path":5,"submenu":-1},"Types","api/typescript/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/typescript/headless/config",{"title":10,"path":-1,"submenu":11},"Components",[12,16,20,24,28,32,36,40,44],{"path":13,"slug":14,"label":15},"api/typescript/headless/components/accordion","components/accordion","Accordion",{"path":17,"slug":18,"label":19},"api/typescript/headless/components/alert","components/alert","Alert",{"path":21,"slug":22,"label":23},"api/typescript/headless/components/modal","components/modal","Modal",{"path":25,"slug":26,"label":27},"api/typescript/headless/components/pagination","components/pagination","Pagination",{"path":29,"slug":30,"label":31},"api/typescript/headless/components/progressbar","components/progressbar","Progressbar",{"path":33,"slug":34,"label":35},"api/typescript/headless/components/rating","components/rating","Rating",{"path":37,"slug":38,"label":39},"api/typescript/headless/components/select","components/select","Select",{"path":41,"slug":42,"label":43},"api/typescript/headless/components/slider","components/slider","Slider",{"path":45,"slug":46,"label":47},"api/typescript/headless/components/toast","components/toast","Toast",{"title":49,"path":-1,"submenu":50},"Services",[51,55,59,63,67,71,75,79,83,87],{"path":52,"slug":53,"label":54},"api/typescript/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":56,"slug":57,"label":58},"api/typescript/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":60,"slug":61,"label":62},"api/typescript/headless/services/focustrack","services/focustrack","focustrack",{"path":64,"slug":65,"label":66},"api/typescript/headless/services/hash","services/hash","hash",{"path":68,"slug":69,"label":70},"api/typescript/headless/services/intersection","services/intersection","intersection",{"path":72,"slug":73,"label":74},"api/typescript/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":76,"slug":77,"label":78},"api/typescript/headless/services/navManager","services/navManager","navManager",{"path":80,"slug":81,"label":82},"api/typescript/headless/services/portal","services/portal","portal",{"path":84,"slug":85,"label":86},"api/typescript/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":88,"slug":89,"label":90},"api/typescript/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":92,"path":-1,"submenu":93},"Transitions",[94,98,102],{"path":95,"slug":96,"label":97},"api/typescript/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":99,"slug":100,"label":101},"api/typescript/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":103,"slug":104,"label":105},"api/typescript/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":107,"path":-1,"submenu":108},"Utils",[109,113,117],{"path":110,"slug":111,"label":112},"api/typescript/headless/utils/directive","utils/directive","directive",{"path":114,"slug":115,"label":116},"api/typescript/headless/utils/stores","utils/stores","stores",{"path":118,"slug":119,"label":120},"api/typescript/headless/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":27,"import":28},"services/transitions/baseTransitions",[3,6,9,12,15,18,21,24],{"source":4,"name":5},"## function_createTransition\n> **createTransition**(`config`?): [`TransitionWidget`](#transitionwidget)\n\nCreate a transition widget.\n\nThe widget will include a patch function, stores to track the animation states and a directive to apply the animation to an element.\n\n### Parameters\n\n• **config?**: [`PropsConfig`](../../types#propsconfig)\\\u003C[`TransitionProps`](#transitionprops)\\>\n\nthe props config of the transition\n\n### Returns\n\n[`TransitionWidget`](#transitionwidget)\n\nthe transition widget\n","createTransition",{"source":7,"name":8},"## function_noAnimation\n> **noAnimation**(`element`, `direction`, `animated`, `signal`, `context`): `void` \\| [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nA transition to show / hide an element without any animated. It uses the HTML `display` attribute.\n\n### Parameters\n\n• **element**: [`SSRHTMLElement`](../../types#ssrhtmlelement)\n\nthe element to animate\n\n• **direction**: `\"show\"` \\| `\"hide\"`\n\nthe direction\n\n• **animated**: `boolean`\n\nWhether the transition should be animated.\n\n• **signal**: [`AbortSignal`](https://developer.mozilla.org/docs/Web/API/AbortSignal)\n\nSignal allowing to stop the transition while running.\n\n• **context**: `object`\n\nContext of the current transition. It is reused between calls if the previous transition was stopped while running on the same element.\n\n### Returns\n\n`void` \\| [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n","noAnimation",{"source":10,"name":11},"## interface_TransitionApi\n### Properties\n\n#### hide\n\n> **hide**: (`animated`?) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nRuns the transition to hide the element. It is equivalent to [toggle](#transitionapi-toggle) with false as the first parameter.\n\n##### Parameters\n\n• **animated?**: `boolean`\n\nwhether the transition should be animated. If the parameter is not defined, the [animated](#transitionprops-animated) property is used.\n\n##### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nA promise that is fulfilled when the transition is completed. If the transition is canceled, or if the same transition was\nalready running, the promise never completes.\n\n***\n\n#### show\n\n> **show**: (`animated`?) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nRuns the transition to show the element. It is equivalent to [toggle](#transitionapi-toggle) with true as the first parameter.\n\n##### Parameters\n\n• **animated?**: `boolean`\n\nwhether the transition should be animated. If the parameter is not defined, the [animated](#transitionprops-animated) property is used.\n\n##### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nA promise that is fulfilled when the transition is completed. If the transition is canceled, or if the same transition was\nalready running, the promise never completes.\n\n***\n\n#### toggle\n\n> **toggle**: (`visible`?, `animated`?) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nRuns the transition to show or hide the element depending on the first parameter.\n\n##### Parameters\n\n• **visible?**: `boolean`\n\nwhether the element should be made visible or not. If the parameter is not defined, the opposite of the current [visible](#transitionprops-visible) property is used.\n\n• **animated?**: `boolean`\n\nwhether the transition should be animated. If the parameter is not defined, the [animated](#transitionprops-animated) property is used.\n\n##### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nA promise that is fulfilled when the transition is completed. If the transition is canceled, or if the same transition was\nalready running, the promise never completes.\n","TransitionApi",{"source":13,"name":14},"## interface_TransitionDirectives\n### Properties\n\n#### directive\n\n> **directive**: [`Directive`](../../types#directive)\n\nthe transition directive\n","TransitionDirectives",{"source":16,"name":17},"## type alias_TransitionFn\n> **TransitionFn**: (`element`, `direction`, `animated`, `signal`, `context`) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\> \\| `void`\n\nFunction that implements a transition.\n\n### Parameters\n\n• **element**: [`SSRHTMLElement`](../../types#ssrhtmlelement)\n\n• **direction**: `\"show\"` \\| `\"hide\"`\n\n• **animated**: `boolean`\n\n• **signal**: [`AbortSignal`](https://developer.mozilla.org/docs/Web/API/AbortSignal)\n\n• **context**: `object`\n\n### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\> \\| `void`\n","TransitionFn",{"source":19,"name":20},"## interface_TransitionProps\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nWhether the transition should be animated.\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\nIf the element is initially visible, whether the element should be animated when first displayed.\n\n***\n\n#### initDone\n\n> **initDone**: `null` \\| `boolean`\n\nWhether initialization is finished. It determines which setting between [TransitionProps.animated](#transitionprops-animated)\nand [TransitionProps.animatedOnInit](#transitionprops-animatedoninit) is used to enable or disable animations.\n\n##### Remarks\n\nIf it is `true`, initialization is considered finished, and [TransitionProps.animatedOnInit](#transitionprops-animatedoninit) is no longer used.\nOtherwise, initialization is considered unfinished and [TransitionProps.animatedOnInit](#transitionprops-animatedoninit) is used instead of [TransitionProps.animated](#transitionprops-animated).\nIf it is `null`, it will be set to `true` automatically when the directive is called with a DOM element.\nIf it is `false`, it will not be updated automatically.\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nFunction to be called when the transition is completed and the element is not visible.\n\n##### Returns\n\n`void`\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nFunction to be called when the transition is completed and the element is visible.\n\n##### Returns\n\n`void`\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nFunction to be called when the visible property changes.\n\n##### Parameters\n\n• **visible**: `boolean`\n\nnew value of the visible property\n\n##### Returns\n\n`void`\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](#transitionfn)\n\nTransition to be called.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nWhether the element should be visible when the transition is completed.\n","TransitionProps",{"source":22,"name":23},"## interface_TransitionState\nTransition state.\n\n### Properties\n\n#### element\n\n> **element**: `null` \\| [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\nReference to the DOM element.\n\n***\n\n#### elementPresent\n\n> **elementPresent**: `boolean`\n\nWhether the element to be animated is present in the DOM.\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\nEquals: ! [visible](#transitionstate-visible) && ! [transitioning](#transitionstate-transitioning)\n\n***\n\n#### shown\n\n> **shown**: `boolean`\n\nEquals: [visible](#transitionstate-visible) && ! [transitioning](#transitionstate-transitioning)\n\n***\n\n#### transitioning\n\n> **transitioning**: `boolean`\n\nWhether a transition is currently running.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nWhether the element is visible or will be visible when the transition is completed.\n","TransitionState",{"source":25,"name":26},"## type alias_TransitionWidget\n> **TransitionWidget**: [`Widget`](../../types#widget)\\\u003C[`TransitionProps`](#transitionprops), [`TransitionState`](#transitionstate), [`TransitionApi`](#transitionapi), [`TransitionDirectives`](#transitiondirectives)\\>\n","TransitionWidget","API baseTransitions","@agnos-ui/core/services/transitions/baseTransitions"],"uses":{"params":["framework","type","slug"]}}]}
