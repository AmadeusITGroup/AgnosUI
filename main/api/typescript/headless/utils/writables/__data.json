{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":125},true,[3,6,9,52,95,110],{"title":4,"path":5,"submenu":-1},"Types","api/typescript/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/typescript/headless/config",{"title":10,"path":-1,"submenu":11},"Components",[12,16,20,24,28,32,36,40,44,48],{"path":13,"slug":14,"label":15},"api/typescript/headless/components/accordion","components/accordion","Accordion",{"path":17,"slug":18,"label":19},"api/typescript/headless/components/alert","components/alert","Alert",{"path":21,"slug":22,"label":23},"api/typescript/headless/components/modal","components/modal","Modal",{"path":25,"slug":26,"label":27},"api/typescript/headless/components/pagination","components/pagination","Pagination",{"path":29,"slug":30,"label":31},"api/typescript/headless/components/progressbar","components/progressbar","Progressbar",{"path":33,"slug":34,"label":35},"api/typescript/headless/components/rating","components/rating","Rating",{"path":37,"slug":38,"label":39},"api/typescript/headless/components/select","components/select","Select",{"path":41,"slug":42,"label":43},"api/typescript/headless/components/slider","components/slider","Slider",{"path":45,"slug":46,"label":47},"api/typescript/headless/components/toast","components/toast","Toast",{"path":49,"slug":50,"label":51},"api/typescript/headless/components/tree","components/tree","Tree",{"title":53,"path":-1,"submenu":54},"Services",[55,59,63,67,71,75,79,83,87,91],{"path":56,"slug":57,"label":58},"api/typescript/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":60,"slug":61,"label":62},"api/typescript/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":64,"slug":65,"label":66},"api/typescript/headless/services/focustrack","services/focustrack","focustrack",{"path":68,"slug":69,"label":70},"api/typescript/headless/services/hash","services/hash","hash",{"path":72,"slug":73,"label":74},"api/typescript/headless/services/intersection","services/intersection","intersection",{"path":76,"slug":77,"label":78},"api/typescript/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":80,"slug":81,"label":82},"api/typescript/headless/services/navManager","services/navManager","navManager",{"path":84,"slug":85,"label":86},"api/typescript/headless/services/portal","services/portal","portal",{"path":88,"slug":89,"label":90},"api/typescript/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":92,"slug":93,"label":94},"api/typescript/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":96,"path":-1,"submenu":97},"Transitions",[98,102,106],{"path":99,"slug":100,"label":101},"api/typescript/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":103,"slug":104,"label":105},"api/typescript/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":107,"slug":108,"label":109},"api/typescript/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":111,"path":-1,"submenu":112},"Utils",[113,117,121],{"path":114,"slug":115,"label":116},"api/typescript/headless/utils/directive","utils/directive","directive",{"path":118,"slug":119,"label":120},"api/typescript/headless/utils/stores","utils/stores","stores",{"path":122,"slug":123,"label":124},"api/typescript/headless/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":36,"import":37},"utils/writables",[3,6,9,12,15,18,21,24,27,30,33],{"source":4,"name":5},"## function_createTypeEnum\n> **createTypeEnum**\\\u003C`T`\\>(`enumList`): [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`T`\\>\n\nDefined in: [core/src/utils/writables.ts:143](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L143)\n\nBuild an enum normalizer\n\n### Type Parameters\n\n• **T**\n\nthe enum type\n\n### Parameters\n\n#### enumList\n\n`T`[]\n\nlist of enum values to check\n\n### Returns\n\n[`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`T`\\>\n\nthe enum normalizer\n","createTypeEnum",{"source":7,"name":8},"## function_testToNormalizeValue\n> **testToNormalizeValue**\\\u003C`T`\\>(`filter`): (`value`) => *typeof* [`INVALID_VALUE`](../types#invalid_value) \\| `T`\n\nDefined in: [core/src/utils/writables.ts:15](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L15)\n\nCheck if a value respects a provided type guard.\n\n### Type Parameters\n\n• **T**\n\nThe type that the filter function validates.\n\n### Parameters\n\n#### filter\n\n(`value`) => `value is T`\n\nA function that takes a value and returns a boolean indicating\n                whether the value is of type T.\n\n### Returns\n\n`Function`\n\nA function that takes a value and returns the value if it passes the filter,\n         otherwise returns `INVALID_VALUE`.\n\n#### Parameters\n\n##### value\n\n`any`\n\n#### Returns\n\n*typeof* [`INVALID_VALUE`](../types#invalid_value) \\| `T`\n","testToNormalizeValue",{"source":10,"name":11},"## constant_typeArray\n> `const` **typeArray**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`any`[]\\>\n\nDefined in: [core/src/utils/writables.ts:123](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L123)\n\nA writable object with default options for handling arrays.\n","typeArray",{"source":13,"name":14},"## constant_typeBoolean\n> `const` **typeBoolean**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`boolean`\\>\n\nDefined in: [core/src/utils/writables.ts:76](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L76)\n\nA writable object with default options for boolean values.\n\nThis object provides a normalized way to handle boolean values\nusing the `WritableWithDefaultOptions` interface. The `normalizeValue`\nfunction ensures that the value is properly validated and normalized\nas a boolean.\n","typeBoolean",{"source":16,"name":17},"## constant_typeBooleanOrNull\n> `const` **typeBooleanOrNull**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`boolean` \\| `null`\\>\n\nDefined in: [core/src/utils/writables.ts:86](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L86)\n\nA writable with default options that normalizes its value to a boolean or null.\n\nThis writable uses a normalization function that allows null values and ensures\nthe value is a boolean.\n","typeBooleanOrNull",{"source":19,"name":20},"## constant_typeFunction\n> `const` **typeFunction**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C(...`args`) => `any`\\>\n\nDefined in: [core/src/utils/writables.ts:103](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L103)\n\nA writable object that holds a function type with default options.\n","typeFunction",{"source":22,"name":23},"## constant_typeHTMLElementOrNull\n> `const` **typeHTMLElementOrNull**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement) \\| `null`\\>\n\nDefined in: [core/src/utils/writables.ts:115](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L115)\n\nA writable object with default options for handling values of type `HTMLElement` or `null`.\n\nThis object provides:\n- `normalizeValue`: A function to normalize the value, ensuring it is either an `HTMLElement` or `null`.\n- `equal`: A function to compare two values for equality using `Object.is`.\n","typeHTMLElementOrNull",{"source":25,"name":26},"## constant_typeNumber\n> `const` **typeNumber**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`number`\\>\n\nDefined in: [core/src/utils/writables.ts:24](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L24)\n\nA writable object with default options for handling numbers.\n","typeNumber",{"source":28,"name":29},"## function_typeNumberInRangeFactory\n> **typeNumberInRangeFactory**(`min`, `max`, `options`): [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`number`\\>\n\nDefined in: [core/src/utils/writables.ts:48](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L48)\n\nFactory function for creating a type constraint for numbers within a specified range.\n\n### Parameters\n\n#### min\n\n`number`\n\nThe minimum value.\n\n#### max\n\n`number`\n\nThe maximum value.\n\n#### options\n\n[`TypeNumberInRangeOptions`](#typenumberinrangeoptions) = `{}`\n\nAdditional options to customize the behavior.\n\n### Returns\n\n[`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`number`\\>\n\nA type guard function that returns the clamp value or INVALID_VALUE depending on the provided options.\n","typeNumberInRangeFactory",{"source":31,"name":32},"## interface_TypeNumberInRangeOptions\nDefined in: [core/src/utils/writables.ts:31](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L31)\n\nOptions for specifying the behavior of number range validation.\n\n### Properties\n\n#### strict?\n\n> `optional` **strict**: `boolean`\n\nDefined in: [core/src/utils/writables.ts:33](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L33)\n\nIf `true`, the range checking will be strict, excluding the minimum and maximum values. Default is `false`.\n\n***\n\n#### useClamp?\n\n> `optional` **useClamp**: `boolean`\n\nDefined in: [core/src/utils/writables.ts:36](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L36)\n\nIf `true`, values outside the range will be clamped to the minimum or maximum. Default is `true`.\n","TypeNumberInRangeOptions",{"source":34,"name":35},"## constant_typeString\n> `const` **typeString**: [`WritableWithDefaultOptions`](../types#writablewithdefaultoptions)\\\u003C`string`\\>\n\nDefined in: [core/src/utils/writables.ts:96](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/utils/writables.ts#L96)\n\nA writable object with default options for string values.\n\nThis object provides a normalized value for strings using the `testToNormalizeValue` function\nwith the `isString` validator.\n","typeString","API writables","@agnos-ui/core/utils/writables"],"uses":{"params":["framework","type","slug"]}}]}
