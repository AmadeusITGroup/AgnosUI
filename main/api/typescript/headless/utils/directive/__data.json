{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":121},true,[3,6,9,48,91,106],{"title":4,"path":5,"submenu":-1},"Types","api/typescript/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/typescript/headless/config",{"title":10,"path":-1,"submenu":11},"Components",[12,16,20,24,28,32,36,40,44],{"path":13,"slug":14,"label":15},"api/typescript/headless/components/accordion","components/accordion","Accordion",{"path":17,"slug":18,"label":19},"api/typescript/headless/components/alert","components/alert","Alert",{"path":21,"slug":22,"label":23},"api/typescript/headless/components/modal","components/modal","Modal",{"path":25,"slug":26,"label":27},"api/typescript/headless/components/pagination","components/pagination","Pagination",{"path":29,"slug":30,"label":31},"api/typescript/headless/components/progressbar","components/progressbar","Progressbar",{"path":33,"slug":34,"label":35},"api/typescript/headless/components/rating","components/rating","Rating",{"path":37,"slug":38,"label":39},"api/typescript/headless/components/select","components/select","Select",{"path":41,"slug":42,"label":43},"api/typescript/headless/components/slider","components/slider","Slider",{"path":45,"slug":46,"label":47},"api/typescript/headless/components/toast","components/toast","Toast",{"title":49,"path":-1,"submenu":50},"Services",[51,55,59,63,67,71,75,79,83,87],{"path":52,"slug":53,"label":54},"api/typescript/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":56,"slug":57,"label":58},"api/typescript/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":60,"slug":61,"label":62},"api/typescript/headless/services/focustrack","services/focustrack","focustrack",{"path":64,"slug":65,"label":66},"api/typescript/headless/services/hash","services/hash","hash",{"path":68,"slug":69,"label":70},"api/typescript/headless/services/intersection","services/intersection","intersection",{"path":72,"slug":73,"label":74},"api/typescript/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":76,"slug":77,"label":78},"api/typescript/headless/services/navManager","services/navManager","navManager",{"path":80,"slug":81,"label":82},"api/typescript/headless/services/portal","services/portal","portal",{"path":84,"slug":85,"label":86},"api/typescript/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":88,"slug":89,"label":90},"api/typescript/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":92,"path":-1,"submenu":93},"Transitions",[94,98,102],{"path":95,"slug":96,"label":97},"api/typescript/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":99,"slug":100,"label":101},"api/typescript/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":103,"slug":104,"label":105},"api/typescript/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":107,"path":-1,"submenu":108},"Utils",[109,113,117],{"path":110,"slug":111,"label":112},"api/typescript/headless/utils/directive","utils/directive","directive",{"path":114,"slug":115,"label":116},"api/typescript/headless/utils/stores","utils/stores","stores",{"path":118,"slug":119,"label":120},"api/typescript/headless/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":63,"import":64},"utils/directive",[3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60],{"source":4,"name":5},"## function_attributesData\n> **attributesData**\\\u003C`T`\\>(...`directives`): `object`\n\n### Type Parameters\n\n• **T** *extends* `any`[]\n\n### Parameters\n\n• ...**directives**: [`DirectivesAndOptParam`](../types#directivesandoptparam)\\\u003C`T`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\nList of directives to generate attributes from. Each parameter can be the directive or an array with the directive and its parameter\n\n### Returns\n\n`object`\n\nJSON object with the `attributes`, `class` and `style` keys.\n\n#### attributes\n\n> **attributes**: [`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C`string`, `string`\\>\n\n#### classNames\n\n> **classNames**: `string`[]\n\n#### style\n\n> **style**: [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C[`StyleKey`](../types#stylekey), [`StyleValue`](../types#stylevalue)\\>\\>\n","attributesData",{"source":7,"name":8},"## interface_AttributesDirectiveProps\nProperties for configuring server-side rendering directives.\n\n### Properties\n\n#### attributes?\n\n> `optional` **attributes**: [`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C`string`, [`AttributeValue`](../types#attributevalue) \\| [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C[`AttributeValue`](../types#attributevalue)\\>\\>\n\nAttributes to be added to the provided node.\n\n##### Remarks\n\nThe `style` attribute must be added separately.\n\n***\n\n#### classNames?\n\n> `optional` **classNames**: [`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C`string`, `boolean` \\| [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`boolean`\\>\\>\n\nClass names to be added to an HTML element.\n\n##### Remarks\n\nKey-value pairs where keys are class names and values indicate whether the class should be added (true) or removed (false).\n\n***\n\n#### events?\n\n> `optional` **events**: [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C`object`\\>\n\nEvents to be attached to an HTML element.\n\n##### Type declaration\n\n###### abort\n\n> **abort**: `object` \\| (`this`, `event`) => `void`\n\n###### animationcancel\n\n> **animationcancel**: `object` \\| (`this`, `event`) => `void`\n\n###### animationend\n\n> **animationend**: `object` \\| (`this`, `event`) => `void`\n\n###### animationiteration\n\n> **animationiteration**: `object` \\| (`this`, `event`) => `void`\n\n###### animationstart\n\n> **animationstart**: `object` \\| (`this`, `event`) => `void`\n\n###### auxclick\n\n> **auxclick**: `object` \\| (`this`, `event`) => `void`\n\n###### beforeinput\n\n> **beforeinput**: `object` \\| (`this`, `event`) => `void`\n\n###### beforetoggle\n\n> **beforetoggle**: `object` \\| (`this`, `event`) => `void`\n\n###### blur\n\n> **blur**: `object` \\| (`this`, `event`) => `void`\n\n###### cancel\n\n> **cancel**: `object` \\| (`this`, `event`) => `void`\n\n###### canplay\n\n> **canplay**: `object` \\| (`this`, `event`) => `void`\n\n###### canplaythrough\n\n> **canplaythrough**: `object` \\| (`this`, `event`) => `void`\n\n###### change\n\n> **change**: `object` \\| (`this`, `event`) => `void`\n\n###### click\n\n> **click**: `object` \\| (`this`, `event`) => `void`\n\n###### close\n\n> **close**: `object` \\| (`this`, `event`) => `void`\n\n###### compositionend\n\n> **compositionend**: `object` \\| (`this`, `event`) => `void`\n\n###### compositionstart\n\n> **compositionstart**: `object` \\| (`this`, `event`) => `void`\n\n###### compositionupdate\n\n> **compositionupdate**: `object` \\| (`this`, `event`) => `void`\n\n###### contextmenu\n\n> **contextmenu**: `object` \\| (`this`, `event`) => `void`\n\n###### copy\n\n> **copy**: `object` \\| (`this`, `event`) => `void`\n\n###### cuechange\n\n> **cuechange**: `object` \\| (`this`, `event`) => `void`\n\n###### cut\n\n> **cut**: `object` \\| (`this`, `event`) => `void`\n\n###### dblclick\n\n> **dblclick**: `object` \\| (`this`, `event`) => `void`\n\n###### drag\n\n> **drag**: `object` \\| (`this`, `event`) => `void`\n\n###### dragend\n\n> **dragend**: `object` \\| (`this`, `event`) => `void`\n\n###### dragenter\n\n> **dragenter**: `object` \\| (`this`, `event`) => `void`\n\n###### dragleave\n\n> **dragleave**: `object` \\| (`this`, `event`) => `void`\n\n###### dragover\n\n> **dragover**: `object` \\| (`this`, `event`) => `void`\n\n###### dragstart\n\n> **dragstart**: `object` \\| (`this`, `event`) => `void`\n\n###### drop\n\n> **drop**: `object` \\| (`this`, `event`) => `void`\n\n###### durationchange\n\n> **durationchange**: `object` \\| (`this`, `event`) => `void`\n\n###### emptied\n\n> **emptied**: `object` \\| (`this`, `event`) => `void`\n\n###### ended\n\n> **ended**: `object` \\| (`this`, `event`) => `void`\n\n###### error\n\n> **error**: `object` \\| (`this`, `event`) => `void`\n\n###### focus\n\n> **focus**: `object` \\| (`this`, `event`) => `void`\n\n###### focusin\n\n> **focusin**: `object` \\| (`this`, `event`) => `void`\n\n###### focusout\n\n> **focusout**: `object` \\| (`this`, `event`) => `void`\n\n###### formdata\n\n> **formdata**: `object` \\| (`this`, `event`) => `void`\n\n###### fullscreenchange\n\n> **fullscreenchange**: `object` \\| (`this`, `event`) => `void`\n\n###### fullscreenerror\n\n> **fullscreenerror**: `object` \\| (`this`, `event`) => `void`\n\n###### gotpointercapture\n\n> **gotpointercapture**: `object` \\| (`this`, `event`) => `void`\n\n###### input\n\n> **input**: `object` \\| (`this`, `event`) => `void`\n\n###### invalid\n\n> **invalid**: `object` \\| (`this`, `event`) => `void`\n\n###### keydown\n\n> **keydown**: `object` \\| (`this`, `event`) => `void`\n\n###### keypress\n\n> **keypress**: `object` \\| (`this`, `event`) => `void`\n\n###### keyup\n\n> **keyup**: `object` \\| (`this`, `event`) => `void`\n\n###### load\n\n> **load**: `object` \\| (`this`, `event`) => `void`\n\n###### loadeddata\n\n> **loadeddata**: `object` \\| (`this`, `event`) => `void`\n\n###### loadedmetadata\n\n> **loadedmetadata**: `object` \\| (`this`, `event`) => `void`\n\n###### loadstart\n\n> **loadstart**: `object` \\| (`this`, `event`) => `void`\n\n###### lostpointercapture\n\n> **lostpointercapture**: `object` \\| (`this`, `event`) => `void`\n\n###### mousedown\n\n> **mousedown**: `object` \\| (`this`, `event`) => `void`\n\n###### mouseenter\n\n> **mouseenter**: `object` \\| (`this`, `event`) => `void`\n\n###### mouseleave\n\n> **mouseleave**: `object` \\| (`this`, `event`) => `void`\n\n###### mousemove\n\n> **mousemove**: `object` \\| (`this`, `event`) => `void`\n\n###### mouseout\n\n> **mouseout**: `object` \\| (`this`, `event`) => `void`\n\n###### mouseover\n\n> **mouseover**: `object` \\| (`this`, `event`) => `void`\n\n###### mouseup\n\n> **mouseup**: `object` \\| (`this`, `event`) => `void`\n\n###### paste\n\n> **paste**: `object` \\| (`this`, `event`) => `void`\n\n###### pause\n\n> **pause**: `object` \\| (`this`, `event`) => `void`\n\n###### play\n\n> **play**: `object` \\| (`this`, `event`) => `void`\n\n###### playing\n\n> **playing**: `object` \\| (`this`, `event`) => `void`\n\n###### pointercancel\n\n> **pointercancel**: `object` \\| (`this`, `event`) => `void`\n\n###### pointerdown\n\n> **pointerdown**: `object` \\| (`this`, `event`) => `void`\n\n###### pointerenter\n\n> **pointerenter**: `object` \\| (`this`, `event`) => `void`\n\n###### pointerleave\n\n> **pointerleave**: `object` \\| (`this`, `event`) => `void`\n\n###### pointermove\n\n> **pointermove**: `object` \\| (`this`, `event`) => `void`\n\n###### pointerout\n\n> **pointerout**: `object` \\| (`this`, `event`) => `void`\n\n###### pointerover\n\n> **pointerover**: `object` \\| (`this`, `event`) => `void`\n\n###### pointerup\n\n> **pointerup**: `object` \\| (`this`, `event`) => `void`\n\n###### progress\n\n> **progress**: `object` \\| (`this`, `event`) => `void`\n\n###### ratechange\n\n> **ratechange**: `object` \\| (`this`, `event`) => `void`\n\n###### reset\n\n> **reset**: `object` \\| (`this`, `event`) => `void`\n\n###### resize\n\n> **resize**: `object` \\| (`this`, `event`) => `void`\n\n###### scroll\n\n> **scroll**: `object` \\| (`this`, `event`) => `void`\n\n###### scrollend\n\n> **scrollend**: `object` \\| (`this`, `event`) => `void`\n\n###### securitypolicyviolation\n\n> **securitypolicyviolation**: `object` \\| (`this`, `event`) => `void`\n\n###### seeked\n\n> **seeked**: `object` \\| (`this`, `event`) => `void`\n\n###### seeking\n\n> **seeking**: `object` \\| (`this`, `event`) => `void`\n\n###### select\n\n> **select**: `object` \\| (`this`, `event`) => `void`\n\n###### selectionchange\n\n> **selectionchange**: `object` \\| (`this`, `event`) => `void`\n\n###### selectstart\n\n> **selectstart**: `object` \\| (`this`, `event`) => `void`\n\n###### slotchange\n\n> **slotchange**: `object` \\| (`this`, `event`) => `void`\n\n###### stalled\n\n> **stalled**: `object` \\| (`this`, `event`) => `void`\n\n###### submit\n\n> **submit**: `object` \\| (`this`, `event`) => `void`\n\n###### suspend\n\n> **suspend**: `object` \\| (`this`, `event`) => `void`\n\n###### timeupdate\n\n> **timeupdate**: `object` \\| (`this`, `event`) => `void`\n\n###### toggle\n\n> **toggle**: `object` \\| (`this`, `event`) => `void`\n\n###### touchcancel\n\n> **touchcancel**: `object` \\| (`this`, `event`) => `void`\n\n###### touchend\n\n> **touchend**: `object` \\| (`this`, `event`) => `void`\n\n###### touchmove\n\n> **touchmove**: `object` \\| (`this`, `event`) => `void`\n\n###### touchstart\n\n> **touchstart**: `object` \\| (`this`, `event`) => `void`\n\n###### transitioncancel\n\n> **transitioncancel**: `object` \\| (`this`, `event`) => `void`\n\n###### transitionend\n\n> **transitionend**: `object` \\| (`this`, `event`) => `void`\n\n###### transitionrun\n\n> **transitionrun**: `object` \\| (`this`, `event`) => `void`\n\n###### transitionstart\n\n> **transitionstart**: `object` \\| (`this`, `event`) => `void`\n\n###### volumechange\n\n> **volumechange**: `object` \\| (`this`, `event`) => `void`\n\n###### waiting\n\n> **waiting**: `object` \\| (`this`, `event`) => `void`\n\n###### webkitanimationend\n\n> **webkitanimationend**: `object` \\| (`this`, `event`) => `void`\n\n###### webkitanimationiteration\n\n> **webkitanimationiteration**: `object` \\| (`this`, `event`) => `void`\n\n###### webkitanimationstart\n\n> **webkitanimationstart**: `object` \\| (`this`, `event`) => `void`\n\n###### webkittransitionend\n\n> **webkittransitionend**: `object` \\| (`this`, `event`) => `void`\n\n###### wheel\n\n> **wheel**: `object` \\| (`this`, `event`) => `void`\n\n##### Remarks\n\nKey-value pairs where keys are event types and values are event handlers.\n\n***\n\n#### styles?\n\n> `optional` **styles**: [`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C[`StyleKey`](../types#stylekey), [`StyleValue`](../types#stylevalue) \\| [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C[`StyleValue`](../types#stylevalue)\\>\\>\\>\n\nStyles to be added to an HTML element.\n\n##### Remarks\n\nKey-value pairs where keys are CSS style properties and values are style values.\n","AttributesDirectiveProps",{"source":10,"name":11},"## function_bindDirective\n> **bindDirective**\\\u003C`T`, `U`\\>(`directive`, `directiveArg$`): [`Directive`](../types#directive)\\\u003C`void`, `U`\\>\n\n### Type Parameters\n\n• **T**\n\n• **U** *extends* [`SSRHTMLElement`](../types#ssrhtmlelement) = [`SSRHTMLElement`](../types#ssrhtmlelement)\n\n### Parameters\n\n• **directive**: [`Directive`](../types#directive)\\\u003C`T`, `U`\\>\n\ndirective to bind\n\n• **directiveArg$**: [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`T`\\>\n\nstore containing the argument of the directive\n\n### Returns\n\n[`Directive`](../types#directive)\\\u003C`void`, `U`\\>\n\nThe bound directive that can be used with no argument.\n","bindDirective",{"source":13,"name":14},"## function_bindDirectiveNoArg\n> **bindDirectiveNoArg**\\\u003C`T`, `U`\\>(`directive`): [`Directive`](../types#directive)\\\u003C`void`, `U`\\>\n\n### Type Parameters\n\n• **T**\n\n• **U** *extends* [`SSRHTMLElement`](../types#ssrhtmlelement) = [`SSRHTMLElement`](../types#ssrhtmlelement)\n\n### Parameters\n\n• **directive**: [`Directive`](../types#directive)\\\u003C`void` \\| `T`, `U`\\>\n\ndirective to wrap\n\n### Returns\n\n[`Directive`](../types#directive)\\\u003C`void`, `U`\\>\n\nThe resulting directive.\n","bindDirectiveNoArg",{"source":16,"name":17},"## function_browserDirective\n> **browserDirective**\\\u003C`T`, `U`\\>(`directive`): [`Directive`](../types#directive)\\\u003C`T`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\n### Type Parameters\n\n• **T**\n\n• **U** *extends* [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\n### Parameters\n\n• **directive**: [`Directive`](../types#directive)\\\u003C`T`, `U`\\>\n\nThe directive to run only in a browser.\n\n### Returns\n\n[`Directive`](../types#directive)\\\u003C`T`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\nThe wrapped directive.\n","browserDirective",{"source":19,"name":20},"## function_classDirective\n> **classDirective**(`node`, `args`): `void` \\| `object`\n\nDirective that takes as an argument a string containing CSS classes to be put on the HTML element.\n\n### Parameters\n\n• **node**: [`SSRHTMLElement`](../types#ssrhtmlelement)\n\n• **args**: `string`\n\n### Returns\n\n`void` \\| `object`\n","classDirective",{"source":22,"name":23},"## function_createAttributesDirective\n> **createAttributesDirective**\\\u003C`T`\\>(`propsFn`): [`Directive`](../types#directive)\\\u003C`T`\\>\n\n### Type Parameters\n\n• **T** = `void`\n\n### Parameters\n\n• **propsFn**\n\nA function that returns the AttributesDirectiveProps with the data to bind.\nThis function can take an optional parameter that corrspond to the second parameter of the created directive.\n\n### Returns\n\n[`Directive`](../types#directive)\\\u003C`T`\\>\n\nA directive object with bound events, attributes, styles, and classNames.\n","createAttributesDirective",{"source":25,"name":26},"## function_createBrowserStoreArrayDirective\n> **createBrowserStoreArrayDirective**(): `object`\n\n### Returns\n\n`object`\n\nAn object with two properties: the `directive` property that is the directive to use on some DOM elements,\nand the `elements$` property that is the store containing an array of all the elements on which the directive is currently\nused.\n\n#### directive\n\n> **directive**: [`Directive`](../types#directive)\\\u003C`void`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\n#### elements$\n\n> **elements$**: [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C[`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)[]\\>\n","createBrowserStoreArrayDirective",{"source":28,"name":29},"## function_createBrowserStoreDirective\n> **createBrowserStoreDirective**(): `object`\n\n### Returns\n\n`object`\n\nAn object with two properties: the `directive` property that is the directive to use on one DOM element,\nand the `element$` property that is the store containing the element on which the directive is currently used (or null\nif the store is not currently used).\n\n#### directive\n\n> **directive**: [`Directive`](../types#directive)\\\u003C`void`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\n#### element$\n\n> **element$**: [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`null` \\| [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\\>\n","createBrowserStoreDirective",{"source":31,"name":32},"## function_createStoreArrayDirective\n> **createStoreArrayDirective**(): `object`\n\n### Returns\n\n`object`\n\nAn object with two properties: the `directive` property that is the directive to use on some DOM elements,\nand the `elements$` property that is the store containing an array of all the elements on which the directive is currently\nused.\n\n#### directive\n\n> **directive**: [`Directive`](../types#directive)\n\n#### elements$\n\n> **elements$**: [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C[`SSRHTMLElement`](../types#ssrhtmlelement)[]\\>\n","createStoreArrayDirective",{"source":34,"name":35},"## function_createStoreDirective\n> **createStoreDirective**(): `object`\n\n### Returns\n\n`object`\n\nAn object with two properties: the `directive` property that is the directive to use on one DOM element,\nand the `element$` property that is the store containing the element on which the directive is currently used (or null\nif the store is not currently used).\n\n#### directive\n\n> **directive**: [`Directive`](../types#directive)\n\n#### element$\n\n> **element$**: [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`null` \\| [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n","createStoreDirective",{"source":37,"name":38},"## function_directiveAttributes\n> **directiveAttributes**\\\u003C`T`\\>(...`directives`): [`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C`string`, `string`\\>\n\nReturns JSON representation of the attributes to be applied derived from a list of directives.\n\n### Type Parameters\n\n• **T** *extends* `any`[]\n\n### Parameters\n\n• ...**directives**: [`DirectivesAndOptParam`](../types#directivesandoptparam)\\\u003C`T`, [`SSRHTMLElement`](../types#ssrhtmlelement)\\>\n\nList of directives to generate attributes from. Each parameter can be the directive or an array with the directive and its parameter\n\n### Returns\n\n[`Record`](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type)\\\u003C`string`, `string`\\>\n\nJSON object with name/value for the attributes\n","directiveAttributes",{"source":40,"name":41},"## function_directiveSubscribe\n> **directiveSubscribe**(`store`, `asyncUnsubscribe`): [`Directive`](../types#directive)\n\n### Parameters\n\n• **store**: [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`any`\\>\n\nstore on which there will be an active subscription while the returned directive is used.\n\n• **asyncUnsubscribe**: `boolean` = `true`\n\ntrue if unsubscribing from the store should be done asynchronously (which is the default), and\nfalse if it should be done synchronously when the directive is destroyed\n\n### Returns\n\n[`Directive`](../types#directive)\n\nThe resulting directive.\n","directiveSubscribe",{"source":43,"name":44},"## function_directiveUpdate\n> **directiveUpdate**\\\u003C`T`\\>(`update`): [`Directive`](../types#directive)\\\u003C`T`\\>\n\n### Type Parameters\n\n• **T**\n\n### Parameters\n\n• **update**\n\nFunction called with the directive argument when the directive is initialized and when its argument is updated.\n\n### Returns\n\n[`Directive`](../types#directive)\\\u003C`T`\\>\n\nThe resulting directive.\n","directiveUpdate",{"source":46,"name":47},"## function_isBrowserHTMLElement\n> **isBrowserHTMLElement**(`element`): `element is HTMLElement`\n\n### Parameters\n\n• **element**: [`SSRHTMLElement`](../types#ssrhtmlelement)\n\nThe element to check.\n\n### Returns\n\n`element is HTMLElement`\n\ntrue in a browser environment if the given element is an HTMLElement, otherwise false.\n","isBrowserHTMLElement",{"source":49,"name":50},"## function_mapDirectiveArg\n> **mapDirectiveArg**\\\u003C`T`, `U`, `V`\\>(`directive`, `fn`): [`Directive`](../types#directive)\\\u003C`T`, `V`\\>\n\n### Type Parameters\n\n• **T**\n\n• **U**\n\n• **V** *extends* [`SSRHTMLElement`](../types#ssrhtmlelement) = [`SSRHTMLElement`](../types#ssrhtmlelement)\n\n### Parameters\n\n• **directive**: [`Directive`](../types#directive)\\\u003C`U`, `V`\\>\n\nThe directive to be applied.\n\n• **fn**\n\nThe function to map the argument.\n\n### Returns\n\n[`Directive`](../types#directive)\\\u003C`T`, `V`\\>\n\nA new directive that applies the mapping function to the argument.\n","mapDirectiveArg",{"source":52,"name":53},"## function_mergeDirectives\n> **mergeDirectives**\\\u003C`T`, `U`\\>(...`args`): [`Directive`](../types#directive)\\\u003C`T`, `U`\\>\n\n### Type Parameters\n\n• **T**\n\n• **U** *extends* [`SSRHTMLElement`](../types#ssrhtmlelement) = [`SSRHTMLElement`](../types#ssrhtmlelement)\n\n### Parameters\n\n• ...**args**: ([`Directive`](../types#directive)\\\u003C`T`, `U`\\> \\| [`Directive`](../types#directive)\\\u003C`void`, `U`\\>)[]\n\ndirectives to merge into a single directive.\n\n### Returns\n\n[`Directive`](../types#directive)\\\u003C`T`, `U`\\>\n\nThe resulting merged directive.\n","mergeDirectives",{"source":55,"name":56},"## function_multiDirective\n> **multiDirective**\\\u003C`T`, `U`\\>(`element`, `directives`): `object`\n\n### Type Parameters\n\n• **T** *extends* `any`[]\n\n• **U** *extends* [`SSRHTMLElement`](../types#ssrhtmlelement) = [`SSRHTMLElement`](../types#ssrhtmlelement)\n\n### Parameters\n\n• **element**: `U`\n\nthe element to apply the directives to\n\n• **directives**: [`DirectivesAndOptParam`](../types#directivesandoptparam)\\\u003C`T`, `U`\\>\n\nthe directives to apply\n\n### Returns\n\n`object`\n\nThe directive instance.\n\n#### destroy\n\n> **destroy**: () => `void`\n\n##### Returns\n\n`void`\n\n#### update\n\n> **update**: (`directives`) => `void`\n\n##### Parameters\n\n• **directives**: ([`Directive`](../types#directive)\\\u003C`void`, `U`\\> \\| [`DirectiveAndParam`](../types#directiveandparam)\\\u003C`any`, `U`\\>)[]\n\n##### Returns\n\n`void`\n","multiDirective",{"source":58,"name":59},"## function_registrationArray\n> **registrationArray**\\\u003C`T`\\>(): [`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`T`[]\\> & `object`\n\n### Type Parameters\n\n• **T**\n\n### Returns\n\n[`ReadableSignal`](https://amadeusitgroup.github.io/tansu/interfaces/ReadableSignal.html)\\\u003C`T`[]\\> & `object`\n\na store containing an array of items.\n","registrationArray",{"source":61,"name":62},"## function_ssrAttributes\n> **ssrAttributes**\\\u003C`T`\\>(...`directives`): `object`\n\n### Type Parameters\n\n• **T** *extends* `any`[]\n\n### Parameters\n\n• ...**directives**: `any`\n\n### Returns\n\n`object`\n\nJSON object with name/value for the attributes\n","ssrAttributes","API directive","@agnos-ui/core/utils/directive"],"uses":{"params":["framework","type","slug"]}}]}
