{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":67},true,[3,6,9,56],{"title":4,"path":5,"submenu":-1},"Types","api/typescript/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/typescript/bootstrap/config",{"title":10,"path":-1,"submenu":11},"Components",[12,16,20,24,28,32,36,40,44,48,52],{"path":13,"slug":14,"label":15},"api/typescript/bootstrap/components/accordion","components/accordion","Accordion",{"path":17,"slug":18,"label":19},"api/typescript/bootstrap/components/alert","components/alert","Alert",{"path":21,"slug":22,"label":23},"api/typescript/bootstrap/components/collapse","components/collapse","Collapse",{"path":25,"slug":26,"label":27},"api/typescript/bootstrap/components/modal","components/modal","Modal",{"path":29,"slug":30,"label":31},"api/typescript/bootstrap/components/pagination","components/pagination","Pagination",{"path":33,"slug":34,"label":35},"api/typescript/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":37,"slug":38,"label":39},"api/typescript/bootstrap/components/rating","components/rating","Rating",{"path":41,"slug":42,"label":43},"api/typescript/bootstrap/components/select","components/select","Select",{"path":45,"slug":46,"label":47},"api/typescript/bootstrap/components/slider","components/slider","Slider",{"path":49,"slug":50,"label":51},"api/typescript/bootstrap/components/toast","components/toast","Toast",{"path":53,"slug":54,"label":55},"api/typescript/bootstrap/components/tree","components/tree","Tree",{"title":57,"path":-1,"submenu":58},"Transitions",[59,63],{"path":60,"slug":61,"label":62},"api/typescript/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":64,"slug":65,"label":66},"api/typescript/bootstrap/services/transitions/fade","services/transitions/fade","fade","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":48,"import":49},"components/accordion",[3,6,9,12,15,18,21,24,27,30,33,36,39,42,45],{"source":4,"name":5},"## interface_AccordionApi\nDefined in: [core/src/components/accordion/accordion.ts:158](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L158)\n\nInterface representing the API for an accordion component.\n\n### Methods\n\n#### collapse\n\n> **collapse**(`itemId`): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:170](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L170)\n\nGiven the itemId, will collapse the corresponding accordion-item.\n\nIf the itemId is not valid, nothing will happen.\n\n##### Parameters\n\n###### itemId\n\n`string`\n\n##### Returns\n\n`void`\n\n***\n\n#### collapseAll\n\n> **collapseAll**(): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:186](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L186)\n\nIt will collapse all the accordion-items in the accordion.\n\n##### Returns\n\n`void`\n\n***\n\n#### expand\n\n> **expand**(`itemId`): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:164](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L164)\n\nGiven the itemId, will expand the corresponding accordion-item.\n\nIf the itemId is not valid, nothing will happen.\n\n##### Parameters\n\n###### itemId\n\n`string`\n\n##### Returns\n\n`void`\n\n***\n\n#### expandAll\n\n> **expandAll**(): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:182](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L182)\n\nIt will expand all the items in the accordion.\n\nIf `closeOthers` is `true` it will expand only the last accordion-item.\n\n##### Returns\n\n`void`\n\n***\n\n#### registerItem\n\n> **registerItem**(`itemConfig`?): `AccordionItemWidget`\n\nDefined in: [core/src/components/accordion/accordion.ts:190](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L190)\n\nCreates a new accordionItem.\n\n##### Parameters\n\n###### itemConfig?\n\n`PropsConfig`\\\u003C`AccordionItemProps`\\>\n\n##### Returns\n\n`AccordionItemWidget`\n\n***\n\n#### toggle\n\n> **toggle**(`itemId`): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:176](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L176)\n\nGiven the itemId, will toggle the corresponding accordion-item.\n\nIf the itemId is not valid, nothing will happen.\n\n##### Parameters\n\n###### itemId\n\n`string`\n\n##### Returns\n\n`void`\n","AccordionApi",{"source":7,"name":8},"## interface_AccordionDirectives\nDefined in: [core/src/components/accordion/accordion.ts:196](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L196)\n\nInterface representing the directives used in the Accordion component.\n\n### Properties\n\n#### accordionDirective\n\n> **accordionDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:200](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L200)\n\nDirective to put on the accordion DOM element\n","AccordionDirectives",{"source":10,"name":11},"## interface_AccordionItemApi\nDefined in: [core/src/components/accordion/accordion.ts:211](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L211)\n\nInterface representing the API for an accordion item.\n\n### Methods\n\n#### collapse\n\n> **collapse**(): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:215](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L215)\n\nIt will collapse the accordion-item.\n\n##### Returns\n\n`void`\n\n***\n\n#### expand\n\n> **expand**(): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:220](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L220)\n\nIt will expand the accordion-item.\n\n##### Returns\n\n`void`\n\n***\n\n#### initDone\n\n> **initDone**(): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:228](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L228)\n\nMethod to be called after the initialization to allow animations.\n\n##### Returns\n\n`void`\n\n***\n\n#### toggle\n\n> **toggle**(): `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:224](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L224)\n\nIt will toggle the accordion-item.\n\n##### Returns\n\n`void`\n","AccordionItemApi",{"source":13,"name":14},"## interface_AccordionItemContext\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:26](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L26)\n\nRepresents the context for an accordion item within the accordion component.\n\n### Properties\n\n#### api\n\n> **api**: [`AccordionItemApi`](#accordionitemapi)\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`AccordionItemDirectives`](#accordionitemdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`AccordionItemState`](#accordionitemstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/types.ts#L88)\n\nthe state of the widget\n","AccordionItemContext",{"source":16,"name":17},"## interface_AccordionItemDirectives\nDefined in: [core/src/components/accordion/accordion.ts:234](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L234)\n\nInterface representing the directives used in an accordion item.\n\n### Properties\n\n#### bodyContainerAttrsDirective\n\n> **bodyContainerAttrsDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:261](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L261)\n\nDirective to apply aria attributes to the expanded body panel\n\n***\n\n#### bodyContainerDirective\n\n> **bodyContainerDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:265](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L265)\n\nDirective to be put on the accordion-item body container. It will handle the animation.\n\n***\n\n#### bodyDirective\n\n> **bodyDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:253](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L253)\n\nDirective to put on the accordion-item body.\n\n***\n\n#### buttonDirective\n\n> **buttonDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:243](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L243)\n\nDirective to put on the button element that will control the collapsing of the accordion-item.\n\n***\n\n#### headerDirective\n\n> **headerDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:248](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L248)\n\nDirective to put on the accordion-item header that will contain the button element.\n\n***\n\n#### itemDirective\n\n> **itemDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:269](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L269)\n\nDirective to be put on the accordion-item. It will handle adding the accordion-item to the accordion.\n\n***\n\n#### toggleDirective\n\n> **toggleDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:238](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L238)\n\nDirective to use in special cases, if the accordion header does not use a button element to control the collapsing.\n\n***\n\n#### transitionDirective\n\n> **transitionDirective**: `Directive`\n\nDefined in: [core/src/components/accordion/accordion.ts:257](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L257)\n\nDirective to apply the itemTransition\n","AccordionItemDirectives",{"source":19,"name":20},"## interface_AccordionItemProps\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:94](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L94)\n\nRepresents the properties for an Accordion item component.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:319](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L319)\n\nIf `true`, accordion-item will be animated.\n\n***\n\n#### bodyClassName\n\n> **bodyClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:305](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L305)\n\nCSS classes to add on the accordion-item body DOM element.\n\n***\n\n#### bodyContainerClassName\n\n> **bodyContainerClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:301](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L301)\n\nCSS classes to add on the accordion-item body container DOM element.\nThe accordion-item body container is the DOM element on what the itemTransition is applied.\n\n***\n\n#### buttonClassName\n\n> **buttonClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:296](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L296)\n\nCSS classes to add on the accordion-item collapse DOM element.\n\n***\n\n#### children\n\n> **children**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:54](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L54)\n\nContent present in the accordion body.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: [core/src/components/commonProps.ts:10](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/commonProps.ts#L10)\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### destroyOnHide\n\n> **destroyOnHide**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:327](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L327)\n\nIf `true`, the accordion-item body container will be removed from the DOM when the accordion-item is collapsed. It will be just hidden otherwise.\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:284](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L284)\n\nIf `true`, the accordion-item will be disabled.\nIt will not react to user's clicks, but still will be possible to toggle programmatically.\n\n***\n\n#### header\n\n> **header**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:60](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L60)\n\nContent present in the accordion button inside the accordion header.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### headerClassName\n\n> **headerClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:292](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L292)\n\nCSS classes to add on the accordion-item header DOM element.\n\n***\n\n#### headingTag\n\n> **headingTag**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:309](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L309)\n\nThe html tag to use for the accordion-item-header.\n\n***\n\n#### id\n\n> **id**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:288](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L288)\n\nThe id of the accordion-item. It can be used for controlling the accordion-item via the accordion api.\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:335](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L335)\n\nAn event fired when an item is hidden.\n\n##### Returns\n\n`void`\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:331](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L331)\n\nAn event fired when an item is shown.\n\n##### Returns\n\n`void`\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:341](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L341)\n\nAn event fired when the `visible` value changes.\n\nEvent payload is the new value of visible.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\n##### Returns\n\n`void`\n\n***\n\n#### structure\n\n> **structure**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:48](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L48)\n\nStructure of the accordion-item. The default item structure is: accordion-item\ncontains accordion header and accordion-item body container; the accordion header contains the accordion button\n(that contains `header`), while the accordion-item body container contains the accordion body (that contains `children`).\nThe itemTransition is applied on this element.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### transition\n\n> **transition**: `TransitionFn`\n\nDefined in: [core/src/components/accordion/accordion.ts:323](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L323)\n\nThe transition to use for the accordion-item body-container when the accordion-item is toggled.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:279](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L279)\n\nIf `true`, the accordion-item will be visible (expanded). Otherwise, it will be hidden (collapsed).\n","AccordionItemProps",{"source":22,"name":23},"## interface_AccordionItemState\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:90](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L90)\n\nRepresents the state of an accordion item, extending the core item state and additional properties specific to the accordion item.\n\n### Properties\n\n#### bodyClassName\n\n> **bodyClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:305](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L305)\n\nCSS classes to add on the accordion-item body DOM element.\n\n***\n\n#### bodyContainerClassName\n\n> **bodyContainerClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:301](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L301)\n\nCSS classes to add on the accordion-item body container DOM element.\nThe accordion-item body container is the DOM element on what the itemTransition is applied.\n\n***\n\n#### buttonClassName\n\n> **buttonClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:296](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L296)\n\nCSS classes to add on the accordion-item collapse DOM element.\n\n***\n\n#### children\n\n> **children**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:54](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L54)\n\nContent present in the accordion body.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: [core/src/components/commonProps.ts:10](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/commonProps.ts#L10)\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:284](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L284)\n\nIf `true`, the accordion-item will be disabled.\nIt will not react to user's clicks, but still will be possible to toggle programmatically.\n\n***\n\n#### header\n\n> **header**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:60](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L60)\n\nContent present in the accordion button inside the accordion header.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### headerClassName\n\n> **headerClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:292](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L292)\n\nCSS classes to add on the accordion-item header DOM element.\n\n***\n\n#### headingTag\n\n> **headingTag**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:309](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L309)\n\nThe html tag to use for the accordion-item-header.\n\n***\n\n#### id\n\n> **id**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:288](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L288)\n\nThe id of the accordion-item. It can be used for controlling the accordion-item via the accordion api.\n\n***\n\n#### shouldBeInDOM\n\n> **shouldBeInDOM**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:352](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L352)\n\nIf `true` the content of the accordion-item collapse should be in DOM. Its value depends on the\nvalue of the `visible` and `destroyOnHide`.\n\n***\n\n#### structure\n\n> **structure**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:48](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L48)\n\nStructure of the accordion-item. The default item structure is: accordion-item\ncontains accordion header and accordion-item body container; the accordion header contains the accordion button\n(that contains `header`), while the accordion-item body container contains the accordion body (that contains `children`).\nThe itemTransition is applied on this element.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:279](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L279)\n\nIf `true`, the accordion-item will be visible (expanded). Otherwise, it will be hidden (collapsed).\n","AccordionItemState",{"source":25,"name":26},"## type alias_AccordionItemWidget\n> **AccordionItemWidget**: `Widget`\\\u003C[`AccordionItemProps`](#accordionitemprops), [`AccordionItemState`](#accordionitemstate), [`AccordionItemApi`](#accordionitemapi), [`AccordionItemDirectives`](#accordionitemdirectives)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:99](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L99)\n\nRepresents a widget for an accordion item.\n","AccordionItemWidget",{"source":28,"name":29},"## interface_AccordionProps\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:70](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L70)\n\nRepresents the state of an AccordionItem component.\n\n### Properties\n\n#### className\n\n> **className**: `string`\n\nDefined in: [core/src/components/commonProps.ts:10](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/commonProps.ts#L10)\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### closeOthers\n\n> **closeOthers**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:62](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L62)\n\nIf `true`, only one accordion-item at the time can stay open.\n\n##### Default Value\n\n`false`\n\n***\n\n#### itemAnimated\n\n> **itemAnimated**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:96](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L96)\n\nIf `true`, accordion-item will be animated.\n\n##### Default Value\n\n`true`\n\n***\n\n#### itemBodyClassName\n\n> **itemBodyClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:136](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L136)\n\nCSS classes to add on the accordion-item body DOM element.\n\n##### Default Value\n\n`''`\n\n***\n\n#### itemBodyContainerClassName\n\n> **itemBodyContainerClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:130](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L130)\n\nCSS classes to add on the accordion-item body container DOM element.\nThe accordion-item body container is the DOM element on what the itemTransition is applied.\n\n##### Default Value\n\n`''`\n\n***\n\n#### itemButtonClassName\n\n> **itemButtonClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:123](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L123)\n\nCSS classes to add on the accordion-item toggle button DOM element.\n\n##### Default Value\n\n`''`\n\n***\n\n#### itemClassName\n\n> **itemClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:111](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L111)\n\nCSS classes to add on the accordion-item DOM element.\n\n##### Default Value\n\n`''`\n\n***\n\n#### itemDestroyOnHide\n\n> **itemDestroyOnHide**: `boolean`\n\nDefined in: [core/src/components/accordion/accordion.ts:90](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L90)\n\nIf `true`, the accordion-item body container will be removed from the DOM when the accordion-item is collapsed. It will be just hidden otherwise.\n\n##### Default Value\n\n`true`\n\n***\n\n#### itemHeaderClassName\n\n> **itemHeaderClassName**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:117](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L117)\n\nCSS classes to add on the accordion-item header DOM element.\n\n##### Default Value\n\n`''`\n\n***\n\n#### itemHeadingTag\n\n> **itemHeadingTag**: `string`\n\nDefined in: [core/src/components/accordion/accordion.ts:142](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L142)\n\nThe html tag to use for the accordion-item-header.\n\n##### Default Value\n\n`''`\n\n***\n\n#### itemStructure\n\n> **itemStructure**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:37](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L37)\n\nStructure of the accordion-item. The default item structure is: accordion-item\ncontains accordion header and accordion-item body container; the accordion header contains the accordion button\n(that contains `header`), while the accordion-item body container contains the accordion body (that contains `children`).\nThe itemTransition is applied on this element.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### itemTransition\n\n> **itemTransition**: `TransitionFn`\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:79](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L79)\n\nThe transition to use for the accordion-item body-container when the accordion-item is toggled.\n\n##### Default Value\n\n```ts\ncollapseVerticalTransition\n```\n\n***\n\n#### onItemHidden\n\n> **onItemHidden**: (`itemId`) => `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:84](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L84)\n\nAn event fired when an item is hidden.\n\nEvent payload is the id of the item.\n\n##### Parameters\n\n###### itemId\n\n`string`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### onItemShown\n\n> **onItemShown**: (`itemId`) => `void`\n\nDefined in: [core/src/components/accordion/accordion.ts:73](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L73)\n\nAn event fired when an item is shown.\n\nEvent payload is the id of the item.\n\n##### Parameters\n\n###### itemId\n\n`string`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n","AccordionProps",{"source":31,"name":32},"## interface_AccordionState\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:66](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L66)\n\nRepresents the state of an Accordion component.\n\n### Properties\n\n#### className\n\n> **className**: `string`\n\nDefined in: [core/src/components/commonProps.ts:10](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/commonProps.ts#L10)\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### itemStructure\n\n> **itemStructure**: `SlotContent`\\\u003C[`AccordionItemContext`](#accordionitemcontext)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:37](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L37)\n\nStructure of the accordion-item. The default item structure is: accordion-item\ncontains accordion header and accordion-item body container; the accordion header contains the accordion button\n(that contains `header`), while the accordion-item body container contains the accordion body (that contains `children`).\nThe itemTransition is applied on this element.\n\nIt is a prop of the accordion-item.\n\n***\n\n#### itemWidgets\n\n> **itemWidgets**: `AccordionItemWidget`[]\n\nDefined in: [core/src/components/accordion/accordion.ts:152](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L152)\n\nArray containing all the accordion-items contained in the accordion.\n","AccordionState",{"source":34,"name":35},"## type alias_AccordionWidget\n> **AccordionWidget**: `Widget`\\\u003C[`AccordionProps`](#accordionprops), [`AccordionState`](#accordionstate), [`AccordionApi`](#accordionapi), [`AccordionDirectives`](#accordiondirectives)\\>\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:85](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L85)\n\nRepresents an Accordion widget type.\n","AccordionWidget",{"source":37,"name":38},"## function_createAccordion\n> **createAccordion**(`props`?): [`AccordionWidget`](#accordionwidget)\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:160](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L160)\n\nCreate an AccordionWidget with given config props\n\n### Parameters\n\n#### props?\n\n`PropsConfig`\\\u003C[`AccordionProps`](#accordionprops)\\>\n\n### Returns\n\n[`AccordionWidget`](#accordionwidget)\n\nan AccordionWidget\n","createAccordion",{"source":40,"name":41},"## function_createAccordionItem\n> **createAccordionItem**(`props`?): [`AccordionItemWidget`](#accordionitemwidget)\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:141](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L141)\n\nCreate an AccordionItemWidget with given config props\n\n### Parameters\n\n#### props?\n\n`PropsConfig`\\\u003C[`AccordionItemProps`](#accordionitemprops)\\>\n\n### Returns\n\n[`AccordionItemWidget`](#accordionitemwidget)\n\nan AccordionItemWidget\n","createAccordionItem",{"source":43,"name":44},"## function_factoryCreateAccordion\n> **factoryCreateAccordion**(`itemFactory`, `accordionItemProps`, `accordionConfig`, `accordionValidator`): `WidgetFactory`\\\u003C`AccordionWidget`\\>\n\nDefined in: [core/src/components/accordion/accordion.ts:566](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core/src/components/accordion/accordion.ts#L566)\n\nCreate an accordion WidgetFactory based on a item factory and the list of item props that should inherit from the parent accordion\n\n### Parameters\n\n#### itemFactory\n\n`WidgetFactory`\\\u003C`AccordionItemWidget`\\> = `createAccordionItem`\n\nthe item factory\n\n#### accordionItemProps\n\n`string`[] = `coreAccordionItemProps`\n\nthe list of item props\n\n#### accordionConfig\n\n`AccordionProps` = `defaultAccordionConfig`\n\nthe default accordion config\n\n#### accordionValidator\n\n`ConfigValidator`\\\u003C`AccordionProps`\\> = `configAccordionValidator`\n\nthe validator of props\n\n### Returns\n\n`WidgetFactory`\\\u003C`AccordionWidget`\\>\n\nthe accordion widget factory\n","factoryCreateAccordion",{"source":46,"name":47},"## function_getAccordionDefaultConfig\n> **getAccordionDefaultConfig**(): [`AccordionProps`](#accordionprops)\n\nDefined in: [core-bootstrap/src/components/accordion/accordion.ts:151](https://github.com/AmadeusITGroup/AgnosUI/blob/863721bb9c0a8edf231e6372cee0ac10a1361a9b/core-bootstrap/src/components/accordion/accordion.ts#L151)\n\nRetrieve a shallow copy of the default accordion config\n\n### Returns\n\n[`AccordionProps`](#accordionprops)\n\nthe default accordion config\n","getAccordionDefaultConfig","API accordion","@agnos-ui/core-bootstrap/components/accordion"],"uses":{"params":["framework","type","slug"]}}]}
