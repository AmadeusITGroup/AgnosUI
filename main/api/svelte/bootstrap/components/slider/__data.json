{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":141},true,[3,6,9,56,99,122],{"title":4,"path":5,"submenu":-1},"Types","api/svelte/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/svelte/bootstrap/config",{"title":10,"path":-1,"submenu":11},"Components",[12,16,20,24,28,32,36,40,44,48,52],{"path":13,"slug":14,"label":15},"api/svelte/bootstrap/components/accordion","components/accordion","Accordion",{"path":17,"slug":18,"label":19},"api/svelte/bootstrap/components/alert","components/alert","Alert",{"path":21,"slug":22,"label":23},"api/svelte/bootstrap/components/collapse","components/collapse","Collapse",{"path":25,"slug":26,"label":27},"api/svelte/bootstrap/components/modal","components/modal","Modal",{"path":29,"slug":30,"label":31},"api/svelte/bootstrap/components/pagination","components/pagination","Pagination",{"path":33,"slug":34,"label":35},"api/svelte/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":37,"slug":38,"label":39},"api/svelte/bootstrap/components/rating","components/rating","Rating",{"path":41,"slug":42,"label":43},"api/svelte/bootstrap/components/select","components/select","Select",{"path":45,"slug":46,"label":47},"api/svelte/bootstrap/components/slider","components/slider","Slider",{"path":49,"slug":50,"label":51},"api/svelte/bootstrap/components/toast","components/toast","Toast",{"path":53,"slug":54,"label":55},"api/svelte/bootstrap/components/tree","components/tree","Tree",{"title":57,"path":-1,"submenu":58},"Services",[59,63,67,71,75,79,83,87,91,95],{"path":60,"slug":61,"label":62},"api/svelte/bootstrap/services/extendWidget","services/extendWidget","extendWidget",{"path":64,"slug":65,"label":66},"api/svelte/bootstrap/services/floatingUI","services/floatingUI","floatingUI",{"path":68,"slug":69,"label":70},"api/svelte/bootstrap/services/focustrack","services/focustrack","focustrack",{"path":72,"slug":73,"label":74},"api/svelte/bootstrap/services/hash","services/hash","hash",{"path":76,"slug":77,"label":78},"api/svelte/bootstrap/services/intersection","services/intersection","intersection",{"path":80,"slug":81,"label":82},"api/svelte/bootstrap/services/matchMedia","services/matchMedia","matchMedia",{"path":84,"slug":85,"label":86},"api/svelte/bootstrap/services/navManager","services/navManager","navManager",{"path":88,"slug":89,"label":90},"api/svelte/bootstrap/services/portal","services/portal","portal",{"path":92,"slug":93,"label":94},"api/svelte/bootstrap/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":96,"slug":97,"label":98},"api/svelte/bootstrap/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":100,"path":-1,"submenu":101},"Transitions",[102,106,110,114,118],{"path":103,"slug":104,"label":105},"api/svelte/bootstrap/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":107,"slug":108,"label":109},"api/svelte/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":111,"slug":112,"label":113},"api/svelte/bootstrap/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":115,"slug":116,"label":117},"api/svelte/bootstrap/services/transitions/fade","services/transitions/fade","fade",{"path":119,"slug":120,"label":121},"api/svelte/bootstrap/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":123,"path":-1,"submenu":124},"Utils",[125,129,133,137],{"path":126,"slug":127,"label":128},"api/svelte/bootstrap/utils/directive","utils/directive","directive",{"path":130,"slug":131,"label":132},"api/svelte/bootstrap/utils/stores","utils/stores","stores",{"path":134,"slug":135,"label":136},"api/svelte/bootstrap/utils/widget","utils/widget","widget",{"path":138,"slug":139,"label":140},"api/svelte/bootstrap/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":39,"import":40},"components/slider",[3,6,9,12,15,18,21,24,27,30,33,36],{"source":4,"name":5},"## function_createSlider\n> **createSlider**(`props`?): [`SliderWidget`](#sliderwidget)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:387\n\nCreate a Slider with given config props\n\n### Parameters\n\n#### props?\n\n[`PropsConfig`](../types#propsconfig)\\\u003C[`SliderProps`](#sliderprops)\\>\n\n### Returns\n\n[`SliderWidget`](#sliderwidget)\n\na SliderWidget\n","createSlider",{"source":7,"name":8},"## function_getSliderDefaultConfig\n> **getSliderDefaultConfig**(): [`SliderProps`](#sliderprops)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:10\n\nRetrieve a shallow copy of the default Slider config\n\n### Returns\n\n[`SliderProps`](#sliderprops)\n\nthe default Slider config\n","getSliderDefaultConfig",{"source":10,"name":11},"## interface_HandleDisplayOptions\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:434\n\nOptions for displaying a handle in a slider component.\n\n### Properties\n\n#### left\n\n> **left**: `null` \\| `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:439\n\nLeft offset of the handle in %\n\n***\n\n#### top\n\n> **top**: `null` \\| `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:444\n\nTop offset of the handle in %\n","HandleDisplayOptions",{"source":13,"name":14},"## interface_ProgressDisplayOptions\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:393\n\nOptions for displaying progress in a slider component.\n\n### Properties\n\n#### bottom\n\n> **bottom**: `null` \\| `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:413\n\nBottom offset of the progress in %\n\n***\n\n#### height\n\n> **height**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:423\n\nHeight of the progress in %\n\n***\n\n#### id\n\n> **id**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:428\n\nId of the progress\n\n***\n\n#### left\n\n> **left**: `null` \\| `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:398\n\nRight offset of the progress in %\n\n***\n\n#### right\n\n> **right**: `null` \\| `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:403\n\nLeft offset of the progress in %\n\n***\n\n#### top\n\n> **top**: `null` \\| `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:408\n\nTop offset of the progress in %\n\n***\n\n#### width\n\n> **width**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:418\n\nWidth of the progress in %\n","ProgressDisplayOptions",{"source":16,"name":17},"## interface_SliderContext\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:19\n\nRepresents the context for a Slider component.\nThis type is an alias for `WidgetSlotContext\u003CSliderWidget>`.\n\n### Extended by\n\n- [`SliderSlotLabelContext`](#sliderslotlabelcontext)\n- [`SliderSlotHandleContext`](#sliderslothandlecontext)\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SliderDirectives`](#sliderdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`SliderState`](#sliderstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L88)\n\nthe state of the widget\n","SliderContext",{"source":19,"name":20},"## interface_SliderDirectives\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:476\n\nInterface representing various directives used in the slider component.\n\n### Properties\n\n#### clickableAreaDirective\n\n> **clickableAreaDirective**: [`Directive`](../types#directive)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:493\n\nDirective to apply to the slider clickable area, to directly move the handle to a given specific position\n\n***\n\n#### combinedHandleLabelDisplayDirective\n\n> **combinedHandleLabelDisplayDirective**: [`Directive`](../types#directive)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:522\n\nDirective to apply to the handle when combined label display is active\n\n***\n\n#### handleDirective\n\n> **handleDirective**: [`Directive`](../types#directive)\\\u003C\\{ `item`: [`SliderHandle`](#sliderhandle); \\}\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:504\n\nDirective to apply to the slider handle if any\n\n***\n\n#### handleEventsDirective\n\n> **handleEventsDirective**: [`Directive`](../types#directive)\\\u003C\\{ `item`: \\{ `id`: `number`; \\}; \\}\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:499\n\nDirective to apply handle events handlers\n\n***\n\n#### handleLabelDisplayDirective\n\n> **handleLabelDisplayDirective**: [`Directive`](../types#directive)\\\u003C\\{ `index`: `number`; \\}\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:528\n\nDirective to apply to the handle when combined label display is not active\n\n***\n\n#### maxLabelDirective\n\n> **maxLabelDirective**: [`Directive`](../types#directive)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:516\n\nDirective to get the maxLabel elementRef\n\n***\n\n#### minLabelDirective\n\n> **minLabelDirective**: [`Directive`](../types#directive)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:510\n\nDirective to get the minLabel elementRef\n\n***\n\n#### progressDisplayDirective\n\n> **progressDisplayDirective**: [`Directive`](../types#directive)\\\u003C\\{ `option`: [`ProgressDisplayOptions`](#progressdisplayoptions); \\}\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:487\n\nDirective used to style the progress display for each handle\n\n***\n\n#### sliderDirective\n\n> **sliderDirective**: [`Directive`](../types#directive)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:481\n\nDirective to get the slider component elementRef\n","SliderDirectives",{"source":22,"name":23},"## interface_SliderHandle\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:450\n\nRepresents a handle in a slider component.\n\n### Properties\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:465\n\nariaLabel of the handle\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: `string`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:470\n\nariaValueText of the handle\n\n***\n\n#### id\n\n> **id**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:460\n\nHandle id\n\n***\n\n#### value\n\n> **value**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:455\n\nValue of the handle\n","SliderHandle",{"source":25,"name":26},"## interface_SliderProps\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:221\n\nRepresents the properties for the Slider component.\n\n### Properties\n\n#### ariaLabelHandle\n\n> **ariaLabelHandle**: (`value`, `sortedIndex`, `index`) => `string`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:234\n\nReturn the value for the 'aria-label' attribute for the handle\n\n##### Parameters\n\n###### value\n\n`number`\n\nvalue of the handle\n\n###### sortedIndex\n\n`number`\n\nindex of the handle in the sorted list\n\n###### index\n\n`number`\n\nindex of the handle in the original list\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(value: number) => '' + value\n```\n\n***\n\n#### ariaValueText\n\n> **ariaValueText**: (`value`, `sortedIndex`, `index`) => `string`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:248\n\nReturn the value for the 'aria-valuetext' attribute for the handle\n\n##### Parameters\n\n###### value\n\n`number`\n\nvalue of the handle\n\n###### sortedIndex\n\n`number`\n\nindex of the handle in the sorted list\n\n###### index\n\n`number`\n\nindex of the handle in the original list\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(value: number) => '' + value\n```\n\n***\n\n#### className\n\n> **className**: `string`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:347\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:300\n\nIf `true` slider value cannot be changed and the slider cannot be focused\n\n##### Default Value\n\n`false`\n\n***\n\n#### handle\n\n> **handle**: [`SlotContent`](../types#slotcontent)\\\u003C[`SliderSlotHandleContext`](#sliderslothandlecontext)\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:369\n\nSlot to change the handlers\n\n***\n\n#### label\n\n> **label**: [`SlotContent`](../types#slotcontent)\\\u003C[`SliderSlotLabelContext`](#sliderslotlabelcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:363\n\nSlot to change the default labels of the slider\n\n##### Default Value\n\n```ts\n({value}: SliderSlotLabelContext) => '' + value\n```\n\n***\n\n#### max\n\n> **max**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:276\n\nMaximum value that can be assigned to the slider\n\n##### Default Value\n\n`100`\n\n***\n\n#### min\n\n> **min**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:268\n\nMinimum value that can be assigned to the slider\n\n##### Default Value\n\n`0`\n\n***\n\n#### onValuesChange\n\n> **onValuesChange**: (`values`) => `void`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:261\n\nAn event emitted when slider values are changed\n\nEvent payload equals to the updated slider values\n\n##### Parameters\n\n###### values\n\n`number`[]\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:292\n\nIf `true` slider value cannot be changed but the slider is still focusable\n\n##### Default Value\n\n`false`\n\n***\n\n#### rtl\n\n> **rtl**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:340\n\nIt `true` slider display is inversed\n\n##### Default Value\n\n`false`\n\n***\n\n#### showMinMaxLabels\n\n> **showMinMaxLabels**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:332\n\nIf `true` the min and max labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### showValueLabels\n\n> **showValueLabels**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:324\n\nIf `true` the value labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### stepSize\n\n> **stepSize**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:284\n\nUnit value between slider steps\n\n##### Default Value\n\n`1`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`SliderContext`](#slidercontext)\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:352\n\nSlot to change the default display of the slider\n\n***\n\n#### values\n\n> **values**: `number`[]\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:316\n\nCurrent slider values\n\n##### Default Value\n\n`[0]`\n\n***\n\n#### vertical\n\n> **vertical**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:308\n\nIf `true` is vertically positioned otherwise it is horizontal\n\n##### Default Value\n\n`false`\n","SliderProps",{"source":28,"name":29},"## interface_SliderSlotHandleContext\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:38\n\nRepresents the context for a slider slot handle.\nThis type extends the `SliderContext` and includes an additional `item` property of type `SliderHandle`.\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SliderDirectives`](#sliderdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### item\n\n> **item**: [`SliderHandle`](#sliderhandle)\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:42\n\nthe handle context\n\n***\n\n#### state\n\n> **state**: [`SliderState`](#sliderstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L88)\n\nthe state of the widget\n","SliderSlotHandleContext",{"source":31,"name":32},"## interface_SliderSlotLabelContext\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:26\n\nRepresents the context for a slider slot label, extending the base `SliderContext`\nwith an additional `value` property.\n\n### Properties\n\n#### api\n\n> **api**: `object`\n\nDefined in: [core/src/types.ts:75](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L75)\n\nall the api functions to interact with the widget\n\n***\n\n#### directives\n\n> **directives**: [`SliderDirectives`](#sliderdirectives)\n\nDefined in: [core/src/types.ts:71](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L71)\n\ndirectives to be used on html elements in the template of the widget or in the slots\n\n***\n\n#### state\n\n> **state**: [`SliderState`](#sliderstate)\n\nDefined in: [core/src/types.ts:88](https://github.com/AmadeusITGroup/AgnosUI/blob/ad84dee0db69751bb15f98666ddd98ea065c3f05/core/src/types.ts#L88)\n\nthe state of the widget\n\n***\n\n#### value\n\n> **value**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:30\n\nthe value of the handle the label is attached to\n","SliderSlotLabelContext",{"source":34,"name":35},"## interface_SliderState\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:48\n\nRepresents the state of a slider component.\n\n### Properties\n\n#### className\n\n> **className**: `string`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:193\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### combinedLabelDisplay\n\n> **combinedLabelDisplay**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:83\n\nIf true, the label when the handles are close is visible\n\n***\n\n#### combinedLabelPositionLeft\n\n> **combinedLabelPositionLeft**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:59\n\nCombined label left offset in %\n\n***\n\n#### combinedLabelPositionTop\n\n> **combinedLabelPositionTop**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:65\n\nCombined label top offset in %\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:146\n\nIf `true` slider value cannot be changed and the slider cannot be focused\n\n##### Default Value\n\n`false`\n\n***\n\n#### handle\n\n> **handle**: [`SlotContent`](../types#slotcontent)\\\u003C[`SliderSlotHandleContext`](#sliderslothandlecontext)\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:215\n\nSlot to change the handlers\n\n***\n\n#### handleDisplayOptions\n\n> **handleDisplayOptions**: [`HandleDisplayOptions`](#handledisplayoptions)[]\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:101\n\nArray of objects representing handle display options\n\n***\n\n#### interactive\n\n> **interactive**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:107\n\nCheck if the slider is interactive, meaning it is not disabled or readonly\n\n***\n\n#### label\n\n> **label**: [`SlotContent`](../types#slotcontent)\\\u003C[`SliderSlotLabelContext`](#sliderslotlabelcontext)\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:209\n\nSlot to change the default labels of the slider\n\n##### Default Value\n\n```ts\n({value}: SliderSlotLabelContext) => '' + value\n```\n\n***\n\n#### max\n\n> **max**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:122\n\nMaximum value that can be assigned to the slider\n\n##### Default Value\n\n`100`\n\n***\n\n#### maxValueLabelDisplay\n\n> **maxValueLabelDisplay**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:77\n\nIf true, the maximum label will be visible\n\n***\n\n#### min\n\n> **min**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:114\n\nMinimum value that can be assigned to the slider\n\n##### Default Value\n\n`0`\n\n***\n\n#### minValueLabelDisplay\n\n> **minValueLabelDisplay**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:71\n\nIf true, the minimum label will be visible\n\n***\n\n#### progressDisplayOptions\n\n> **progressDisplayOptions**: [`ProgressDisplayOptions`](#progressdisplayoptions)[]\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:95\n\nArray of objects representing progress display options\n\n***\n\n#### readonly\n\n> **readonly**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:138\n\nIf `true` slider value cannot be changed but the slider is still focusable\n\n##### Default Value\n\n`false`\n\n***\n\n#### rtl\n\n> **rtl**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:186\n\nIt `true` slider display is inversed\n\n##### Default Value\n\n`false`\n\n***\n\n#### showMinMaxLabels\n\n> **showMinMaxLabels**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:178\n\nIf `true` the min and max labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### showValueLabels\n\n> **showValueLabels**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:170\n\nIf `true` the value labels are displayed on the slider\n\n##### Default Value\n\n`true`\n\n***\n\n#### sortedHandles\n\n> **sortedHandles**: [`SliderHandle`](#sliderhandle)[]\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:89\n\nArray of the sorted handles to display\n\n***\n\n#### sortedValues\n\n> **sortedValues**: `number`[]\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:53\n\nSorted slider values\n\n***\n\n#### stepSize\n\n> **stepSize**: `number`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:130\n\nUnit value between slider steps\n\n##### Default Value\n\n`1`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`SliderContext`](#slidercontext)\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:198\n\nSlot to change the default display of the slider\n\n***\n\n#### values\n\n> **values**: `number`[]\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:162\n\nCurrent slider values\n\n##### Default Value\n\n`[0]`\n\n***\n\n#### vertical\n\n> **vertical**: `boolean`\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:154\n\nIf `true` is vertically positioned otherwise it is horizontal\n\n##### Default Value\n\n`false`\n","SliderState",{"source":37,"name":38},"## type alias_SliderWidget\n> **SliderWidget**: [`Widget`](../types#widget)\\\u003C[`SliderProps`](#sliderprops), [`SliderState`](#sliderstate), `object`, [`SliderDirectives`](#sliderdirectives)\\>\n\nDefined in: svelte/bootstrap/src/components/slider/slider.gen.ts:377\n\nRepresents a slider widget component.\n","SliderWidget","API slider","@agnos-ui/svelte-bootstrap/components/slider"],"uses":{"params":["framework","type","slug"]}}]}
