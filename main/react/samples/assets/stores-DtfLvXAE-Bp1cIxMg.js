import{h as l,f as b,B as h,A as p}from"./stores-DX-ADOKq-MSAn3urh.js";import{r as u}from"./App-AO0jOhRY.js";let c;const S=()=>{if(c)try{for(let s=0;s<c.length;s++){const{rerender:t,state:e,obj:r}=c[s];e.notified===r&&e.hasEffect&&t(r)}}finally{c=void 0}},d=(s,t)=>()=>{if(t.changed&&!t.notified){const e={};t.notified=e,c||(queueMicrotask(S),c=[]),c.push({rerender:s,state:t,obj:e})}};function x(s){const[,t]=u.useState({}),e=u.useMemo(()=>{const o={hasEffect:!1,changed:!1,notified:!1,store$:l(()=>(o.changed=!0,s()))};return o},[s]);u.useEffect(()=>{e.hasEffect=!0;const o=e.store$.subscribe(d(t,e));return()=>{e.hasEffect=!1,o()}},[e]);const r=e.store$();return e.changed=!1,e.notified=!1,r}const g=(s,t)=>{let e=!0;return l(()=>(e?e=!1:t.changed=!0,s()))};function I(s){const[,t]=u.useState({}),e=u.useMemo(()=>{const r={hasEffect:!1,notified:!1,changed:!1,storeInfo:{},checkStoreSubscribed:a=>{const f=s[`${a}$`];if(f){let n=r.storeInfo[a];if(!n||n.store!==f){const i=n==null?void 0:n.unsubscribe;n={store:f,computedStore:g(f,r),unsubscribe:null},r.storeInfo[a]=n,i==null||i()}return r.hasEffect&&!n.unsubscribe&&(n.unsubscribe=n.computedStore.subscribe(o)),n.computedStore}},proxy:new Proxy({},{get(a,f){const n=typeof f=="string"?r.checkStoreSubscribed(f):null;return n==null?void 0:n()}})},o=d(t,r);return r},[]);return e.notified=!1,e.changed=!1,u.useEffect(()=>{e.hasEffect=!0;for(const r of Object.keys(e.storeInfo))e.checkStoreSubscribed(r);return()=>{e.hasEffect=!1;for(const r of Object.values(e.storeInfo)){const o=r.unsubscribe;r.unsubscribe=null,o==null||o()}}},[s]),e.proxy}const m=(s,t)=>!p(s,t),C=s=>{const t=u.useRef(void 0);return t.current?t.current.set({...s}):t.current=b({...s},{equal:m}),u.useMemo(()=>h(t.current),[t.current])};export{C as a,I as b,x as u};
