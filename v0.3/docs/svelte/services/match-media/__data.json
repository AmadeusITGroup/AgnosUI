{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,16,33,58,86],{"title":4,"submenu":5},"Getting started",[6,10,13],{"label":7,"status":8,"path":9,"subpath":8},"Introduction","","docs/svelte/getting-started/introduction",{"label":11,"status":8,"path":12,"subpath":8},"Features","docs/svelte/getting-started/features",{"label":14,"status":8,"path":15,"subpath":8},"Installation","docs/svelte/getting-started/installation",{"title":17,"submenu":18},"Headless",[19,21,24,27,30],{"label":7,"status":8,"path":20,"subpath":8},"docs/svelte/headless/introduction",{"label":22,"status":8,"path":23,"subpath":8},"Configuration","docs/svelte/headless/configuration",{"label":25,"status":8,"path":26,"subpath":8},"Slots","docs/svelte/headless/slots",{"label":28,"status":8,"path":29,"subpath":8},"Directives","docs/svelte/headless/directives",{"label":31,"status":8,"path":32,"subpath":8},"Implementation","docs/svelte/headless/implementation",{"title":34,"submenu":35},"Headless Components",[36,38,43,46,49,52,55],{"label":7,"status":8,"path":37,"subpath":8},"docs/svelte/headless-components/introduction",{"label":39,"status":40,"path":41,"subpath":42},"Alert","stable","docs/svelte/daisyUI/alert/","headless",{"label":44,"status":40,"path":45,"subpath":42},"Pagination","docs/svelte/daisyUI/pagination/",{"label":47,"status":40,"path":48,"subpath":42},"Progressbar","docs/svelte/daisyUI/progressbar/",{"label":50,"status":40,"path":51,"subpath":42},"Rating","docs/svelte/daisyUI/rating/",{"label":53,"status":40,"path":54,"subpath":42},"Slider","docs/svelte/daisyUI/slider/",{"label":56,"status":40,"path":57,"subpath":42},"Toast","docs/svelte/daisyUI/toast/",{"title":59,"submenu":60},"Bootstrap Components",[61,63,67,69,72,74,76,78,82,84],{"label":7,"status":8,"path":62,"subpath":8},"docs/svelte/bootstrap-components/introduction",{"label":64,"status":40,"path":65,"subpath":66},"Accordion","docs/svelte/components/accordion/","examples",{"label":39,"status":40,"path":68,"subpath":66},"docs/svelte/components/alert/",{"label":70,"status":40,"path":71,"subpath":66},"Modal","docs/svelte/components/modal/",{"label":44,"status":40,"path":73,"subpath":66},"docs/svelte/components/pagination/",{"label":47,"status":40,"path":75,"subpath":66},"docs/svelte/components/progressbar/",{"label":50,"status":40,"path":77,"subpath":66},"docs/svelte/components/rating/",{"label":79,"status":80,"path":81,"subpath":66},"Select","inprogress","docs/svelte/components/select/",{"label":53,"status":40,"path":83,"subpath":66},"docs/svelte/components/slider/",{"label":56,"status":40,"path":85,"subpath":66},"docs/svelte/components/toast/",{"title":87,"submenu":88},"Services",[89,91,94,97,100,103],{"label":7,"status":8,"path":90,"subpath":8},"docs/svelte/services/introduction",{"label":92,"status":8,"path":93,"subpath":8},"Focustrack","docs/svelte/services/focustrack",{"label":95,"status":8,"path":96,"subpath":8},"Floating UI","docs/svelte/services/floating-ui",{"label":98,"status":8,"path":99,"subpath":8},"Resize Observer","docs/svelte/services/resize-observer",{"label":101,"status":8,"path":102,"subpath":8},"Transition","docs/svelte/services/transition",{"label":104,"status":8,"path":105,"subpath":8},"Match Media","docs/svelte/services/match-media"],"uses":{"params":["framework"]}},{"type":"data","data":[{"slug":1,"prev":2,"next":-1,"content":9,"since":10},"services/match-media",{"slug":3,"content":4,"title":5,"subpath":6,"status":6,"attributes":7},"services/transition","# Transition\n\n## Service Overview\n\nThe Transition service allows to display or hide content smoothly through an animation. At its heart, a transition is a [Directive](../01-Headless/03-Directives.md) managing the visibility of inner content by attaching / detaching classes.\n\n## In action\n\nCreating and attaching a transition is straighforward! Simply create a transition service using the factory `createTransition` and attach the provided directive to a dom element.  \nLet's see this in action by implementing a **Collapse** component:\n\n```sample\n{Collapse example:transition/collapse:129}\n```\n\nAgnosUI provides several transition functions to use (collapse vertical or horizontal, fade in/out) but you may create your own using the `createSimpleClassTransition` utility and a bit of css. Here is another example with a flip animation:\n\n```sample\n{Flip in example:transition/flip:93}\n```\n\n\u003Cp>\n    When creating your own, remember to respect the user preferences and the media query \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\" target=\"_blank\">prefers-reduced-motion\u003C/a>.\n\u003C/p>\n\n## Properties and stores\n\nYou can configure a transition using the following properties:\n\n- **transition** `TransitionFn` : the transition function that will be run\n- **visible** `boolean` : whether the element should be visible when the transition is completed\n- **animation** `boolean` : whether the transition should be animated\n- **animationOnInit** `boolean` : if the element is initially visible, whether the element should be animated when first displayed\n- **onShown** `() => void` : function to be called when the transition is completed and the element is visible\n- **onHidden** `() => void` : function to be called when the transition is completed and the element is not visible\n- **onVisibleChange** `(visible: boolean) => void` : function to be called when the visible property changes\n\nThe state of the transition will include the stores:\n\n- **visible** `boolean` : whether the element is visible or will be visible when the transition is completed\n- **elementPresent** `boolean` : whether the element to be animated is present in the DOM\n- **element** `HTMLElement | null` : reference to the DOM element\n- **transitioning** `boolean` : whether a transition is currently running\n- **shown** `boolean` : whether the element is visible and not transitioning\n- **hidden** `boolean` : whether the element is not visible and not transitioning\n\nYou may play around the properties and see the stores updated with the following example:\n\n```sample\n{Transition properties and stores:transition/transition:585:noCode:noResize}\n```\n","Transition","",{"since":8},"0.2.0","# Match Media\n\n## Service Overview\n\n\u003Cp>\nThe match media service is a simple factory that wraps the \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\" target=\"_blank\">Window: matchMedia()\u003C/a> method into a Tansu readable store.\n\u003C/p>\n\n```typescript\ntype createMatchMedia = (query: string) => Readable\u003Cboolean>;\n```\n\n## In action\n\n```sample\n{MatchMedia:matchMedia/matchMedia:138}\n```\n","0.3.0"],"uses":{"params":["slug","framework"]}}]}
