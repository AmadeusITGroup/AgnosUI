{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,19,41,81,117],{"title":4,"submenu":5},"Getting started",[6,11,15],{"label":7,"status":8,"path":9,"subpath":-1,"slug":10},"Introduction","","docs/angular/getting-started/introduction","getting-started/introduction",{"label":12,"status":8,"path":13,"subpath":-1,"slug":14},"Features","docs/angular/getting-started/features","getting-started/features",{"label":16,"status":8,"path":17,"subpath":-1,"slug":18},"Installation","docs/angular/getting-started/installation","getting-started/installation",{"title":20,"submenu":21},"Headless",[22,25,29,33,37],{"label":7,"status":8,"path":23,"subpath":-1,"slug":24},"docs/angular/headless/introduction","headless/introduction",{"label":26,"status":8,"path":27,"subpath":-1,"slug":28},"Configuration","docs/angular/headless/configuration","headless/configuration",{"label":30,"status":8,"path":31,"subpath":-1,"slug":32},"Slots","docs/angular/headless/slots","headless/slots",{"label":34,"status":8,"path":35,"subpath":-1,"slug":36},"Directives","docs/angular/headless/directives","headless/directives",{"label":38,"status":8,"path":39,"subpath":-1,"slug":40},"Implementation","docs/angular/headless/implementation","headless/implementation",{"title":42,"submenu":43},"Headless Components",[44,47,53,57,61,65,69,73,77],{"label":7,"status":8,"path":45,"subpath":-1,"slug":46},"docs/angular/headless-components/introduction","headless-components/introduction",{"label":48,"status":49,"path":50,"subpath":51,"slug":52},"Accordion","stable","docs/angular/daisyUI/accordion/","headless","daisyUI/accordion/",{"label":54,"status":49,"path":55,"subpath":51,"slug":56},"Alert","docs/angular/daisyUI/alert/","daisyUI/alert/",{"label":58,"status":49,"path":59,"subpath":51,"slug":60},"Modal","docs/angular/daisyUI/modal/","daisyUI/modal/",{"label":62,"status":49,"path":63,"subpath":51,"slug":64},"Pagination","docs/angular/daisyUI/pagination/","daisyUI/pagination/",{"label":66,"status":49,"path":67,"subpath":51,"slug":68},"Progressbar","docs/angular/daisyUI/progressbar/","daisyUI/progressbar/",{"label":70,"status":49,"path":71,"subpath":51,"slug":72},"Rating","docs/angular/daisyUI/rating/","daisyUI/rating/",{"label":74,"status":49,"path":75,"subpath":51,"slug":76},"Slider","docs/angular/daisyUI/slider/","daisyUI/slider/",{"label":78,"status":49,"path":79,"subpath":51,"slug":80},"Toast","docs/angular/daisyUI/toast/","daisyUI/toast/",{"title":82,"submenu":83},"Bootstrap Components",[84,87,91,94,97,100,103,106,111,114],{"label":7,"status":8,"path":85,"subpath":-1,"slug":86},"docs/angular/bootstrap-components/introduction","bootstrap-components/introduction",{"label":48,"status":49,"path":88,"subpath":89,"slug":90},"docs/angular/components/accordion/","examples","components/accordion/",{"label":54,"status":49,"path":92,"subpath":89,"slug":93},"docs/angular/components/alert/","components/alert/",{"label":58,"status":49,"path":95,"subpath":89,"slug":96},"docs/angular/components/modal/","components/modal/",{"label":62,"status":49,"path":98,"subpath":89,"slug":99},"docs/angular/components/pagination/","components/pagination/",{"label":66,"status":49,"path":101,"subpath":89,"slug":102},"docs/angular/components/progressbar/","components/progressbar/",{"label":70,"status":49,"path":104,"subpath":89,"slug":105},"docs/angular/components/rating/","components/rating/",{"label":107,"status":108,"path":109,"subpath":89,"slug":110},"Select","inprogress","docs/angular/components/select/","components/select/",{"label":74,"status":49,"path":112,"subpath":89,"slug":113},"docs/angular/components/slider/","components/slider/",{"label":78,"status":49,"path":115,"subpath":89,"slug":116},"docs/angular/components/toast/","components/toast/",{"title":118,"submenu":119},"Services",[120,123,127,131,135,139],{"label":7,"status":8,"path":121,"subpath":-1,"slug":122},"docs/angular/services/introduction","services/introduction",{"label":124,"status":8,"path":125,"subpath":-1,"slug":126},"Focustrack","docs/angular/services/focustrack","services/focustrack",{"label":128,"status":8,"path":129,"subpath":-1,"slug":130},"Floating UI","docs/angular/services/floating-ui","services/floating-ui",{"label":132,"status":8,"path":133,"subpath":-1,"slug":134},"Resize Observer","docs/angular/services/resize-observer","services/resize-observer",{"label":136,"status":8,"path":137,"subpath":-1,"slug":138},"Transition","docs/angular/services/transition","services/transition",{"label":140,"status":8,"path":141,"subpath":-1,"slug":142},"Match Media","docs/angular/services/match-media","services/match-media"],"uses":{"params":["framework"]}},null,{"type":"data","data":[{"title":1,"status":2,"since":3,"type":4,"tabs":5,"prev":18,"next":21},"Pagination","stable","v0.1.1","bootstrap",[6,10,14],{"title":7,"key":8,"path":9},"Examples","examples","/components/pagination/examples",{"title":11,"key":12,"path":13},"Api","api","/components/pagination/api",{"title":15,"key":16,"path":17},"Playground","playground","/components/pagination/playground#",{"title":19,"slug":20,"subpath":8},"Modal","components/modal/",{"title":22,"slug":23,"subpath":8},"Progressbar","components/progressbar/"],"uses":{"params":["component"]}},{"type":"data","data":[{"component":1,"content":2,"title":72,"import":73,"pageMeta":74},"pagination",[3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69],{"source":4,"name":5},"## function_createPagination\n> **createPagination**(`props`?): [`PaginationWidget`](#paginationwidget)\n\nCreate a PaginationWidget with given config props\n\n### Parameters\n\n• **props?**: [`PropsConfig`](../../../../api/angular/bootstrap/components/pagination/../../types#propsconfig)\\\u003C[`PaginationProps`](#paginationprops)\\>\n\n### Returns\n\n[`PaginationWidget`](#paginationwidget)\n\na PaginationWidget\n","createPagination",{"source":7,"name":8},"## interface_DirectionsHrefs\n### Properties\n\n#### next\n\n> **next**: `string`\n\nThe href for the 'Next' direction link\n\n***\n\n#### previous\n\n> **previous**: `string`\n\nThe href for the 'Previous' navigation link\n","DirectionsHrefs",{"source":10,"name":11},"## function_getPaginationDefaultConfig\n> **getPaginationDefaultConfig**(): [`PaginationProps`](#paginationprops)\n\nRetrieve a shallow copy of the default Pagination config\n\n### Returns\n\n[`PaginationProps`](#paginationprops)\n\nthe default Pagination config\n","getPaginationDefaultConfig",{"source":13,"name":14},"## interface_PaginationActions\n### Methods\n\n#### first\n\n> **first**(`event`?): `void`\n\nTo \"go\" to the first page\n\n##### Parameters\n\n• **event?**: [`MouseEvent`](https://developer.mozilla.org/docs/Web/API/MouseEvent)\n\n##### Returns\n\n`void`\n\n***\n\n#### last\n\n> **last**(`event`?): `void`\n\nTo \"go\" to the last page\n\n##### Parameters\n\n• **event?**: [`MouseEvent`](https://developer.mozilla.org/docs/Web/API/MouseEvent)\n\n##### Returns\n\n`void`\n\n***\n\n#### next\n\n> **next**(`event`?): `void`\n\nTo \"go\" to the next page\n\n##### Parameters\n\n• **event?**: [`MouseEvent`](https://developer.mozilla.org/docs/Web/API/MouseEvent)\n\n##### Returns\n\n`void`\n\n***\n\n#### previous\n\n> **previous**(`event`?): `void`\n\nTo \"go\" to the previous page\n\n##### Parameters\n\n• **event?**: [`MouseEvent`](https://developer.mozilla.org/docs/Web/API/MouseEvent)\n\n##### Returns\n\n`void`\n\n***\n\n#### select\n\n> **select**(`page`, `event`?): `void`\n\nTo \"go\" to a specific page\n\n##### Parameters\n\n• **page**: `number`\n\nThe page number to select\n\n• **event?**: [`MouseEvent`](https://developer.mozilla.org/docs/Web/API/MouseEvent)\n\n##### Returns\n\n`void`\n","PaginationActions",{"source":16,"name":17},"## interface_PaginationApi\n\n","PaginationApi",{"source":19,"name":20},"## class_PaginationComponent\n### Implements\n\n- [`AfterContentChecked`](https://angular.dev/api/core/AfterContentChecked)\n\n### Constructors\n\n#### new PaginationComponent\n\n> **new PaginationComponent**(): [`PaginationComponent`](#paginationcomponent)\n\n##### Returns\n\n[`PaginationComponent`](#paginationcomponent)\n\n### Properties\n\n#### _widget\n\n> `readonly` **\\_widget**: [`AngularWidget`](../../../../api/angular/bootstrap/components/pagination/../../types#angularwidget)\\\u003C[`PaginationWidget`](#paginationwidget)\\>\n\n***\n\n#### activeLabel\n\n> **activeLabel**: `undefined` \\| `string`\n\nThe label for the \"active\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'(current)'\n```\n\n***\n\n#### ariaEllipsisLabel\n\n> **ariaEllipsisLabel**: `undefined` \\| `string`\n\nThe label for the \"Ellipsis\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Ellipsis page element'`\n\n***\n\n#### ariaFirstLabel\n\n> **ariaFirstLabel**: `undefined` \\| `string`\n\nThe label for the \"First\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for first page'\n```\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `undefined` \\| `string`\n\nThe label for the nav element.\n\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Page navigation'`\n\n***\n\n#### ariaLastLabel\n\n> **ariaLastLabel**: `undefined` \\| `string`\n\nThe label for the \"Last\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for last page'\n```\n\n***\n\n#### ariaLiveLabel\n\n> **ariaLiveLabel**: `undefined` \\| (`currentPage`, `pageCount`) => `string`\n\nProvide the label for the aria-live element\nThis is used for accessibility purposes.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Param\n\nThe current page number\n\n##### Param\n\nThe total number of pages\n\n##### Default Value\n\n```ts\n(currentPage: number, pageCount: number) => `Current page is ${currentPage}`\n```\n\n***\n\n#### ariaNextLabel\n\n> **ariaNextLabel**: `undefined` \\| `string`\n\nThe label for the \"Next\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for next page'\n```\n\n***\n\n#### ariaPageLabel\n\n> **ariaPageLabel**: `undefined` \\| (`processPage`, `pageCount`) => `string`\n\nProvide the label for each \"Page\" page button.\nThis is used for accessibility purposes.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Param\n\nThe current page number\n\n##### Param\n\nThe total number of pages\n\n##### Default Value\n\n```ts\n(processPage: number, pageCount: number) => `Page ${processPage} of ${pageCount}`\n```\n\n***\n\n#### ariaPreviousLabel\n\n> **ariaPreviousLabel**: `undefined` \\| `string`\n\nThe label for the \"Previous\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for previous page'\n```\n\n***\n\n#### boundaryLinks\n\n> **boundaryLinks**: `undefined` \\| `boolean`\n\nIf `true`, the \"First\" and \"Last\" page links are shown.\n\n##### Default Value\n\n`false`\n\n***\n\n#### className\n\n> **className**: `undefined` \\| `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### collectionSize\n\n> **collectionSize**: `undefined` \\| `number`\n\nThe number of items in your paginated collection.\n\nNote, that this is not the number of pages. Page numbers are calculated dynamically based on\n`collectionSize` and `pageSize`.\n\nEx. if you have 100 items in your collection and displaying 20 items per page, you'll end up with 5 pages.\n\nWhatever the collectionSize the page number is of minimum 1.\n\n##### Default Value\n\n`0`\n\n***\n\n#### directionLinks\n\n> **directionLinks**: `undefined` \\| `boolean`\n\nIf `true`, the \"Next\" and \"Previous\" page links are shown.\n\n##### Default Value\n\n`true`\n\n***\n\n#### disabled\n\n> **disabled**: `undefined` \\| `boolean`\n\nIf `true`, pagination links will be disabled.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ellipsisLabel\n\n> **ellipsisLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the ellipsis slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'…'`\n\n***\n\n#### firstPageLabel\n\n> **firstPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the first slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'«'`\n\n***\n\n#### lastPageLabel\n\n> **lastPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the last slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'»'`\n\n***\n\n#### nextPageLabel\n\n> **nextPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the next slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'›'`\n\n***\n\n#### numberLabel\n\n> **numberLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationNumberContext`](#paginationnumbercontext)\\>\n\nThe template to use for the number slot\noverride any configuration parameters provided for this\nfor I18n, we suggest to use the global configuration\n\n##### Param\n\nThe current page number\n\n##### Default Value\n\n```ts\n({displayedPage}: PaginationNumberContext) => `${displayedPage}`\n```\n\n***\n\n#### page\n\n> **page**: `undefined` \\| `number`\n\nThe current page.\n\nPage numbers start with `1`.\n\n##### Default Value\n\n`1`\n\n***\n\n#### pageChange\n\n> **pageChange**: `EventEmitter`\\\u003C`number`\\>\n\nAn event fired when the page is changed.\n\nEvent payload is the number of the newly selected page.\n\nPage numbers start with `1`.\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### pageLink\n\n> **pageLink**: `undefined` \\| (`pageNumber`) => `string`\n\nFactory function providing the href for a \"Page\" page anchor,\nbased on the current page number\n\n##### Param\n\nThe index to use in the link\n\n##### Default Value\n\n```ts\n(_page: number) => PAGE_LINK_DEFAULT\n```\n\n***\n\n#### pageSize\n\n> **pageSize**: `undefined` \\| `number`\n\nThe number of items per page.\n\n##### Remarks\n\nmin value is 1\n\n##### Default Value\n\n`10`\n\n***\n\n#### pagesDisplay\n\n> **pagesDisplay**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the pages slot\nTo use to customize the pages view\noverride any configuration parameters provided for this\n\n***\n\n#### pagesFactory\n\n> **pagesFactory**: `undefined` \\| (`page`, `pageCount`) => `number`[]\n\npagesFactory returns a function computing the array of pages to be displayed\nas number (-1 are treated as ellipsis).\nUse Page slot to customize the pages view and not this\n\n##### Param\n\nThe current page number\n\n##### Param\n\nThe total number of pages\n\n##### Default Value\n\n```ts\n(_page: number, pageCount: number) => {\n\t\tconst pages: number[] = [];\n\t\tfor (let i = 1; i \u003C= pageCount; i++) {\n\t\t\tpages.push(i);\n\t\t}\n\t\treturn pages;\n\t}\n```\n\n***\n\n#### previousPageLabel\n\n> **previousPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the previous slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'‹'`\n\n***\n\n#### size\n\n> **size**: `undefined` \\| `null` \\| `\"sm\"` \\| `\"lg\"`\n\nThe pagination display size.\n\nBootstrap currently supports small and large sizes.\n\n##### Default Value\n\n`null`\n\n***\n\n#### slotEllipsisFromContent\n\n> **slotEllipsisFromContent**: `undefined` \\| [`PaginationEllipsisDirective`](#paginationellipsisdirective)\n\n***\n\n#### slotFirstFromContent\n\n> **slotFirstFromContent**: `undefined` \\| [`PaginationFirstDirective`](#paginationfirstdirective)\n\n***\n\n#### slotLastFromContent\n\n> **slotLastFromContent**: `undefined` \\| [`PaginationLastDirective`](#paginationlastdirective)\n\n***\n\n#### slotNextFromContent\n\n> **slotNextFromContent**: `undefined` \\| [`PaginationNextDirective`](#paginationnextdirective)\n\n***\n\n#### slotNumberLabelFromContent\n\n> **slotNumberLabelFromContent**: `undefined` \\| [`PaginationNumberDirective`](#paginationnumberdirective)\n\n***\n\n#### slotPagesFromContent\n\n> **slotPagesFromContent**: `undefined` \\| [`PaginationPagesDirective`](#paginationpagesdirective)\n\n***\n\n#### slotPreviousFromContent\n\n> **slotPreviousFromContent**: `undefined` \\| [`PaginationPreviousDirective`](#paginationpreviousdirective)\n\n***\n\n#### slotStructureFromContent\n\n> **slotStructureFromContent**: `undefined` \\| [`PaginationStructureDirective`](#paginationstructuredirective)\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the structure of the pagination component\nThe default structure uses [ellipsisLabel](#paginationprops-ellipsislabel), [firstPageLabel](#paginationprops-firstpagelabel),\n[previousPageLabel](#paginationprops-previouspagelabel), [nextPageLabel](#paginationprops-nextpagelabel),\n[lastPageLabel](#paginationprops-lastpagelabel), [pagesDisplay](#paginationprops-pagesdisplay),\n[numberLabel](#paginationprops-numberlabel),\n\n### Accessors\n\n#### api\n\n> `get` **api**(): `W`\\[`\"api\"`\\]\n\n##### Returns\n\n`W`\\[`\"api\"`\\]\n\n***\n\n#### state\n\n> `get` **state**(): [`Signal`](https://angular.dev/api/core/Signal)\\\u003C[`WidgetState`](../../../../api/angular/bootstrap/components/pagination/../../types#widgetstate)\\\u003C`W`\\>\\>\n\n##### Returns\n\n[`Signal`](https://angular.dev/api/core/Signal)\\\u003C[`WidgetState`](../../../../api/angular/bootstrap/components/pagination/../../types#widgetstate)\\\u003C`W`\\>\\>\n\n***\n\n#### widget\n\n> `get` **widget**(): [`ContextWidget`](../../../../api/angular/bootstrap/components/pagination/../../types#contextwidget)\\\u003C`W`\\>\n\n##### Returns\n\n[`ContextWidget`](../../../../api/angular/bootstrap/components/pagination/../../types#contextwidget)\\\u003C`W`\\>\n\n### Methods\n\n#### ngAfterContentChecked\n\n> **ngAfterContentChecked**(): `void`\n\nA callback method that is invoked immediately after the\ndefault change detector has completed checking all of the directive's\ncontent.\n\n##### Returns\n\n`void`\n\n##### Implementation of\n\n`AfterContentChecked.ngAfterContentChecked`\n\n***\n\n#### ngOnChanges\n\n> **ngOnChanges**(`changes`): `void`\n\n##### Parameters\n\n• **changes**: `SimpleChanges`\n\n##### Returns\n\n`void`\n\n##### Inherit Doc\n\n***\n\n#### ngOnInit\n\n> **ngOnInit**(): `void`\n\n##### Returns\n\n`void`\n\n##### Inherit Doc\n","PaginationComponent",{"source":22,"name":23},"## type alias_PaginationContext\n> **PaginationContext**: [`WidgetSlotContext`](../../../../api/angular/bootstrap/components/pagination/../../types#widgetslotcontext)\\\u003C[`PaginationWidget`](#paginationwidget)\\>\n\nA type for the slot context of the pagination widget\n","PaginationContext",{"source":25,"name":26},"## constant_paginationDefaultSlotPages\n> `const` **paginationDefaultSlotPages**: [`ComponentTemplate`](../../../../api/angular/bootstrap/components/pagination/../../types#componenttemplate)\\\u003C`unknown`, `\"pages\"`, [`PaginationDefaultSlotsComponent`](#paginationdefaultslotscomponent)\\>\n\nThe default slot for the pages\n","paginationDefaultSlotPages",{"source":28,"name":29},"## class_PaginationDefaultSlotsComponent\n### Constructors\n\n#### new PaginationDefaultSlotsComponent\n\n> **new PaginationDefaultSlotsComponent**(): [`PaginationDefaultSlotsComponent`](#paginationdefaultslotscomponent)\n\n##### Returns\n\n[`PaginationDefaultSlotsComponent`](#paginationdefaultslotscomponent)\n\n### Properties\n\n#### pages\n\n> **pages**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\n***\n\n#### structure\n\n> **structure**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n","PaginationDefaultSlotsComponent",{"source":31,"name":32},"## constant_paginationDefaultSlotStructure\n> `const` **paginationDefaultSlotStructure**: [`ComponentTemplate`](../../../../api/angular/bootstrap/components/pagination/../../types#componenttemplate)\\\u003C`unknown`, `\"structure\"`, [`PaginationDefaultSlotsComponent`](#paginationdefaultslotscomponent)\\>\n\nThe default slot for the structure\n","paginationDefaultSlotStructure",{"source":34,"name":35},"## interface_PaginationDirectives\n### Properties\n\n#### pageFirst\n\n> **pageFirst**: [`Directive`](../../../../api/angular/bootstrap/components/pagination/../../types#directive)\n\nA directive to be applied on the first link\n\n***\n\n#### pageLast\n\n> **pageLast**: [`Directive`](../../../../api/angular/bootstrap/components/pagination/../../types#directive)\n\nA directive to be applied on the Last link\n\n***\n\n#### pageLink\n\n> **pageLink**: [`Directive`](../../../../api/angular/bootstrap/components/pagination/../../types#directive)\\\u003C`object`\\>\n\nA directive to be applied to each page link\nThis will handle the click, tabindex and aria attributes\n\n##### Type declaration\n\n###### page\n\n> **page**: `number`\n\n***\n\n#### pageNext\n\n> **pageNext**: [`Directive`](../../../../api/angular/bootstrap/components/pagination/../../types#directive)\n\nA directive to be applied on the next link\n\n***\n\n#### pagePrev\n\n> **pagePrev**: [`Directive`](../../../../api/angular/bootstrap/components/pagination/../../types#directive)\n\nA directive to be applied on the previous link\n","PaginationDirectives",{"source":37,"name":38},"## class_PaginationEllipsisDirective\nA directive to use to give the 'ellipsis' link template to the pagination component\n\n### Constructors\n\n#### new PaginationEllipsisDirective\n\n> **new PaginationEllipsisDirective**(): [`PaginationEllipsisDirective`](#paginationellipsisdirective)\n\n##### Returns\n\n[`PaginationEllipsisDirective`](#paginationellipsisdirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is PaginationContext`\n\n##### Parameters\n\n• **\\_dir**: [`PaginationEllipsisDirective`](#paginationellipsisdirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationContext`\n","PaginationEllipsisDirective",{"source":40,"name":41},"## class_PaginationFirstDirective\nA directive to use to give the 'first' link template to the pagination component\n\n### Constructors\n\n#### new PaginationFirstDirective\n\n> **new PaginationFirstDirective**(): [`PaginationFirstDirective`](#paginationfirstdirective)\n\n##### Returns\n\n[`PaginationFirstDirective`](#paginationfirstdirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is PaginationContext`\n\n##### Parameters\n\n• **\\_dir**: [`PaginationFirstDirective`](#paginationfirstdirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationContext`\n","PaginationFirstDirective",{"source":43,"name":44},"## class_PaginationLastDirective\nA directive to use to give the 'last' link template to the pagination component\n\n### Constructors\n\n#### new PaginationLastDirective\n\n> **new PaginationLastDirective**(): [`PaginationLastDirective`](#paginationlastdirective)\n\n##### Returns\n\n[`PaginationLastDirective`](#paginationlastdirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is PaginationContext`\n\n##### Parameters\n\n• **\\_dir**: [`PaginationLastDirective`](#paginationlastdirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationContext`\n","PaginationLastDirective",{"source":46,"name":47},"## class_PaginationNextDirective\nA directive to use to give the 'next' link template to the pagination component\n\n### Constructors\n\n#### new PaginationNextDirective\n\n> **new PaginationNextDirective**(): [`PaginationNextDirective`](#paginationnextdirective)\n\n##### Returns\n\n[`PaginationNextDirective`](#paginationnextdirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is PaginationContext`\n\n##### Parameters\n\n• **\\_dir**: [`PaginationNextDirective`](#paginationnextdirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationContext`\n","PaginationNextDirective",{"source":49,"name":50},"## type alias_PaginationNumberContext\n> **PaginationNumberContext**: [`PaginationContext`](#paginationcontext) & `object`\n\nA type for the slot context of the pagination widget when the slot is the number label\n\n### Type declaration\n\n#### displayedPage\n\n> **displayedPage**: `number`\n\nDisplayed page\n","PaginationNumberContext",{"source":52,"name":53},"## class_PaginationNumberDirective\nA directive to use to give the page 'number' template to the pagination component\n\n### Constructors\n\n#### new PaginationNumberDirective\n\n> **new PaginationNumberDirective**(): [`PaginationNumberDirective`](#paginationnumberdirective)\n\n##### Returns\n\n[`PaginationNumberDirective`](#paginationnumberdirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is PaginationNumberContext`\n\n##### Parameters\n\n• **\\_dir**: [`PaginationNumberDirective`](#paginationnumberdirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationNumberContext`\n","PaginationNumberDirective",{"source":55,"name":56},"## class_PaginationPagesDirective\nA directive to use to give the 'Pages' template for the Pages slot\n\n### Constructors\n\n#### new PaginationPagesDirective\n\n> **new PaginationPagesDirective**(): [`PaginationPagesDirective`](#paginationpagesdirective)\n\n##### Returns\n\n[`PaginationPagesDirective`](#paginationpagesdirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is PaginationContext`\n\n##### Parameters\n\n• **\\_dir**: [`PaginationPagesDirective`](#paginationpagesdirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationContext`\n","PaginationPagesDirective",{"source":58,"name":59},"## class_PaginationPreviousDirective\nA directive to use to give the 'previous' link template to the pagination component\n\n### Constructors\n\n#### new PaginationPreviousDirective\n\n> **new PaginationPreviousDirective**(): [`PaginationPreviousDirective`](#paginationpreviousdirective)\n\n##### Returns\n\n[`PaginationPreviousDirective`](#paginationpreviousdirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`_dir`, `context`): `context is PaginationContext`\n\n##### Parameters\n\n• **\\_dir**: [`PaginationPreviousDirective`](#paginationpreviousdirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationContext`\n","PaginationPreviousDirective",{"source":61,"name":62},"## interface_PaginationProps\n### Properties\n\n#### activeLabel\n\n> **activeLabel**: `string`\n\nThe label for the \"active\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'(current)'\n```\n\n***\n\n#### ariaEllipsisLabel\n\n> **ariaEllipsisLabel**: `string`\n\nThe label for the \"Ellipsis\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Ellipsis page element'`\n\n***\n\n#### ariaFirstLabel\n\n> **ariaFirstLabel**: `string`\n\nThe label for the \"First\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for first page'\n```\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nThe label for the nav element.\n\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Page navigation'`\n\n***\n\n#### ariaLastLabel\n\n> **ariaLastLabel**: `string`\n\nThe label for the \"Last\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for last page'\n```\n\n***\n\n#### ariaLiveLabel\n\n> **ariaLiveLabel**: (`currentPage`, `pageCount`) => `string`\n\nProvide the label for the aria-live element\nThis is used for accessibility purposes.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Parameters\n\n• **currentPage**: `number`\n\nThe current page number\n\n• **pageCount**: `number`\n\nThe total number of pages\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(currentPage: number, pageCount: number) => `Current page is ${currentPage}`\n```\n\n***\n\n#### ariaNextLabel\n\n> **ariaNextLabel**: `string`\n\nThe label for the \"Next\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for next page'\n```\n\n***\n\n#### ariaPageLabel\n\n> **ariaPageLabel**: (`processPage`, `pageCount`) => `string`\n\nProvide the label for each \"Page\" page button.\nThis is used for accessibility purposes.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Parameters\n\n• **processPage**: `number`\n\nThe current page number\n\n• **pageCount**: `number`\n\nThe total number of pages\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(processPage: number, pageCount: number) => `Page ${processPage} of ${pageCount}`\n```\n\n***\n\n#### ariaPreviousLabel\n\n> **ariaPreviousLabel**: `string`\n\nThe label for the \"Previous\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for previous page'\n```\n\n***\n\n#### boundaryLinks\n\n> **boundaryLinks**: `boolean`\n\nIf `true`, the \"First\" and \"Last\" page links are shown.\n\n##### Default Value\n\n`false`\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### collectionSize\n\n> **collectionSize**: `number`\n\nThe number of items in your paginated collection.\n\nNote, that this is not the number of pages. Page numbers are calculated dynamically based on\n`collectionSize` and `pageSize`.\n\nEx. if you have 100 items in your collection and displaying 20 items per page, you'll end up with 5 pages.\n\nWhatever the collectionSize the page number is of minimum 1.\n\n##### Default Value\n\n`0`\n\n***\n\n#### directionLinks\n\n> **directionLinks**: `boolean`\n\nIf `true`, the \"Next\" and \"Previous\" page links are shown.\n\n##### Default Value\n\n`true`\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nIf `true`, pagination links will be disabled.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ellipsisLabel\n\n> **ellipsisLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the ellipsis slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'…'`\n\n***\n\n#### firstPageLabel\n\n> **firstPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the first slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'«'`\n\n***\n\n#### lastPageLabel\n\n> **lastPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the last slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'»'`\n\n***\n\n#### nextPageLabel\n\n> **nextPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the next slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'›'`\n\n***\n\n#### numberLabel\n\n> **numberLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationNumberContext`](#paginationnumbercontext)\\>\n\nThe template to use for the number slot\noverride any configuration parameters provided for this\nfor I18n, we suggest to use the global configuration\n\n##### Param\n\nThe current page number\n\n##### Default Value\n\n```ts\n({displayedPage}: PaginationNumberContext) => `${displayedPage}`\n```\n\n***\n\n#### onPageChange\n\n> **onPageChange**: (`page`) => `void`\n\nAn event fired when the page is changed.\n\nEvent payload is the number of the newly selected page.\n\nPage numbers start with `1`.\n\n##### Parameters\n\n• **page**: `number`\n\n##### Returns\n\n`void`\n\n##### Default Value\n\n```ts\n() => {}\n```\n\n***\n\n#### page\n\n> **page**: `number`\n\nThe current page.\n\nPage numbers start with `1`.\n\n##### Default Value\n\n`1`\n\n***\n\n#### pageLink\n\n> **pageLink**: (`pageNumber`) => `string`\n\nFactory function providing the href for a \"Page\" page anchor,\nbased on the current page number\n\n##### Parameters\n\n• **pageNumber**: `number`\n\nThe index to use in the link\n\n##### Returns\n\n`string`\n\n##### Default Value\n\n```ts\n(_page: number) => PAGE_LINK_DEFAULT\n```\n\n***\n\n#### pageSize\n\n> **pageSize**: `number`\n\nThe number of items per page.\n\n##### Remarks\n\nmin value is 1\n\n##### Default Value\n\n`10`\n\n***\n\n#### pagesDisplay\n\n> **pagesDisplay**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the pages slot\nTo use to customize the pages view\noverride any configuration parameters provided for this\n\n***\n\n#### pagesFactory\n\n> **pagesFactory**: (`page`, `pageCount`) => `number`[]\n\npagesFactory returns a function computing the array of pages to be displayed\nas number (-1 are treated as ellipsis).\nUse Page slot to customize the pages view and not this\n\n##### Parameters\n\n• **page**: `number`\n\nThe current page number\n\n• **pageCount**: `number`\n\nThe total number of pages\n\n##### Returns\n\n`number`[]\n\n##### Default Value\n\n```ts\n(_page: number, pageCount: number) => {\n\t\tconst pages: number[] = [];\n\t\tfor (let i = 1; i \u003C= pageCount; i++) {\n\t\t\tpages.push(i);\n\t\t}\n\t\treturn pages;\n\t}\n```\n\n***\n\n#### previousPageLabel\n\n> **previousPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the previous slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'‹'`\n\n***\n\n#### size\n\n> **size**: `null` \\| `\"sm\"` \\| `\"lg\"`\n\nThe pagination display size.\n\nBootstrap currently supports small and large sizes.\n\n##### Default Value\n\n`null`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the structure of the pagination component\nThe default structure uses [ellipsisLabel](#paginationprops-ellipsislabel), [firstPageLabel](#paginationprops-firstpagelabel),\n[previousPageLabel](#paginationprops-previouspagelabel), [nextPageLabel](#paginationprops-nextpagelabel),\n[lastPageLabel](#paginationprops-lastpagelabel), [pagesDisplay](#paginationprops-pagesdisplay),\n[numberLabel](#paginationprops-numberlabel),\n","PaginationProps",{"source":64,"name":65},"## interface_PaginationState\n### Properties\n\n#### activeLabel\n\n> **activeLabel**: `string`\n\nThe label for the \"active\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'(current)'\n```\n\n***\n\n#### ariaEllipsisLabel\n\n> **ariaEllipsisLabel**: `string`\n\nThe label for the \"Ellipsis\" page.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Ellipsis page element'`\n\n***\n\n#### ariaFirstLabel\n\n> **ariaFirstLabel**: `string`\n\nThe label for the \"First\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for first page'\n```\n\n***\n\n#### ariaLabel\n\n> **ariaLabel**: `string`\n\nThe label for the nav element.\n\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'Page navigation'`\n\n***\n\n#### ariaLastLabel\n\n> **ariaLastLabel**: `string`\n\nThe label for the \"Last\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for last page'\n```\n\n***\n\n#### ariaLiveLabelText\n\n> **ariaLiveLabelText**: `string`\n\nThe aria-live text\n\n***\n\n#### ariaNextLabel\n\n> **ariaNextLabel**: `string`\n\nThe label for the \"Next\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for next page'\n```\n\n***\n\n#### ariaPreviousLabel\n\n> **ariaPreviousLabel**: `string`\n\nThe label for the \"Previous\" page button.\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n```ts\n'Action link for previous page'\n```\n\n***\n\n#### boundaryLinks\n\n> **boundaryLinks**: `boolean`\n\nIf `true`, the \"First\" and \"Last\" page links are shown.\n\n##### Default Value\n\n`false`\n\n***\n\n#### className\n\n> **className**: `string`\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### directionLinks\n\n> **directionLinks**: `boolean`\n\nIf `true`, the \"Next\" and \"Previous\" page links are shown.\n\n##### Default Value\n\n`true`\n\n***\n\n#### directionsHrefs\n\n> **directionsHrefs**: [`DirectionsHrefs`](#directionshrefs)\n\nThe hrefs for the direction links\n\n***\n\n#### disabled\n\n> **disabled**: `boolean`\n\nIf `true`, pagination links will be disabled.\n\n##### Default Value\n\n`false`\n\n***\n\n#### ellipsisLabel\n\n> **ellipsisLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the ellipsis slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'…'`\n\n***\n\n#### firstPageLabel\n\n> **firstPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the first slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'«'`\n\n***\n\n#### lastPageLabel\n\n> **lastPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the last slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'»'`\n\n***\n\n#### nextDisabled\n\n> **nextDisabled**: `boolean`\n\ntrue if the next link need to be disabled\n\n***\n\n#### nextPageLabel\n\n> **nextPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the next slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'›'`\n\n***\n\n#### numberLabel\n\n> **numberLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationNumberContext`](#paginationnumbercontext)\\>\n\nThe template to use for the number slot\noverride any configuration parameters provided for this\nfor I18n, we suggest to use the global configuration\n\n##### Param\n\nThe current page number\n\n##### Default Value\n\n```ts\n({displayedPage}: PaginationNumberContext) => `${displayedPage}`\n```\n\n***\n\n#### page\n\n> **page**: `number`\n\nThe current page.\n\nPage numbers start with `1`.\n\n##### Default Value\n\n`1`\n\n***\n\n#### pageCount\n\n> **pageCount**: `number`\n\nThe number of pages.\n\n***\n\n#### pages\n\n> **pages**: `number`[]\n\nThe current pages, the number in the Array is the number of the page.\n\n***\n\n#### pagesDisplay\n\n> **pagesDisplay**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the pages slot\nTo use to customize the pages view\noverride any configuration parameters provided for this\n\n***\n\n#### pagesHrefs\n\n> **pagesHrefs**: `string`[]\n\nThe hrefs for each \"Page\" page link\n\n***\n\n#### pagesLabel\n\n> **pagesLabel**: `string`[]\n\nThe label for each \"Page\" page link.\n\n***\n\n#### previousDisabled\n\n> **previousDisabled**: `boolean`\n\ntrue if the previous link need to be disabled\n\n***\n\n#### previousPageLabel\n\n> **previousPageLabel**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the previous slot\nfor I18n, we suggest to use the global configuration\noverride any configuration parameters provided for this\n\n##### Default Value\n\n`'‹'`\n\n***\n\n#### size\n\n> **size**: `null` \\| `\"sm\"` \\| `\"lg\"`\n\nThe pagination display size.\n\nBootstrap currently supports small and large sizes.\n\n##### Default Value\n\n`null`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../../../../api/angular/bootstrap/components/pagination/../../types#slotcontent)\\\u003C[`PaginationContext`](#paginationcontext)\\>\n\nThe template to use for the structure of the pagination component\nThe default structure uses [ellipsisLabel](#paginationprops-ellipsislabel), [firstPageLabel](#paginationprops-firstpagelabel),\n[previousPageLabel](#paginationprops-previouspagelabel), [nextPageLabel](#paginationprops-nextpagelabel),\n[lastPageLabel](#paginationprops-lastpagelabel), [pagesDisplay](#paginationprops-pagesdisplay),\n[numberLabel](#paginationprops-numberlabel),\n","PaginationState",{"source":67,"name":68},"## class_PaginationStructureDirective\nDirective to provide the slot structure for the pagination widget.\n\n### Constructors\n\n#### new PaginationStructureDirective\n\n> **new PaginationStructureDirective**(): [`PaginationStructureDirective`](#paginationstructuredirective)\n\n##### Returns\n\n[`PaginationStructureDirective`](#paginationstructuredirective)\n\n### Properties\n\n#### templateRef\n\n> **templateRef**: [`TemplateRef`](https://angular.dev/api/core/TemplateRef)\\\u003C`any`\\>\n\n### Methods\n\n#### ngTemplateContextGuard\n\n> `static` **ngTemplateContextGuard**(`dir`, `context`): `context is PaginationContext`\n\n##### Parameters\n\n• **dir**: [`PaginationStructureDirective`](#paginationstructuredirective)\n\n• **context**: `unknown`\n\n##### Returns\n\n`context is PaginationContext`\n","PaginationStructureDirective",{"source":70,"name":71},"## type alias_PaginationWidget\n> **PaginationWidget**: [`Widget`](../../../../api/angular/bootstrap/components/pagination/../../types#widget)\\\u003C[`PaginationProps`](#paginationprops), [`PaginationState`](#paginationstate), [`PaginationApi`](#paginationapi), [`PaginationActions`](#paginationactions), [`PaginationDirectives`](#paginationdirectives)\\>\n","PaginationWidget","Pagination","@agnos-ui/angular-bootstrap",{"description":75},"API Documentation for pagination"],"uses":{"params":["framework","component"]}}]}
