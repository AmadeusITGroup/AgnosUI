{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":141},true,[3,6,9,56,99,118],{"title":4,"path":5,"submenu":-1},"Types","api/svelte/headless/types",{"title":7,"path":8,"submenu":-1},"Config","api/svelte/headless/config",{"title":10,"path":-1,"submenu":11},"Components",[12,16,20,24,28,32,36,40,44,48,52],{"path":13,"slug":14,"label":15},"api/svelte/headless/components/accordion","components/accordion","Accordion",{"path":17,"slug":18,"label":19},"api/svelte/headless/components/alert","components/alert","Alert",{"path":21,"slug":22,"label":23},"api/svelte/headless/components/carousel","components/carousel","Carousel",{"path":25,"slug":26,"label":27},"api/svelte/headless/components/modal","components/modal","Modal",{"path":29,"slug":30,"label":31},"api/svelte/headless/components/pagination","components/pagination","Pagination",{"path":33,"slug":34,"label":35},"api/svelte/headless/components/progressbar","components/progressbar","Progressbar",{"path":37,"slug":38,"label":39},"api/svelte/headless/components/rating","components/rating","Rating",{"path":41,"slug":42,"label":43},"api/svelte/headless/components/select","components/select","Select",{"path":45,"slug":46,"label":47},"api/svelte/headless/components/slider","components/slider","Slider",{"path":49,"slug":50,"label":51},"api/svelte/headless/components/toast","components/toast","Toast",{"path":53,"slug":54,"label":55},"api/svelte/headless/components/tree","components/tree","Tree",{"title":57,"path":-1,"submenu":58},"Services",[59,63,67,71,75,79,83,87,91,95],{"path":60,"slug":61,"label":62},"api/svelte/headless/services/extendWidget","services/extendWidget","extendWidget",{"path":64,"slug":65,"label":66},"api/svelte/headless/services/floatingUI","services/floatingUI","floatingUI",{"path":68,"slug":69,"label":70},"api/svelte/headless/services/focustrack","services/focustrack","focustrack",{"path":72,"slug":73,"label":74},"api/svelte/headless/services/hash","services/hash","hash",{"path":76,"slug":77,"label":78},"api/svelte/headless/services/intersection","services/intersection","intersection",{"path":80,"slug":81,"label":82},"api/svelte/headless/services/matchMedia","services/matchMedia","matchMedia",{"path":84,"slug":85,"label":86},"api/svelte/headless/services/navManager","services/navManager","navManager",{"path":88,"slug":89,"label":90},"api/svelte/headless/services/portal","services/portal","portal",{"path":92,"slug":93,"label":94},"api/svelte/headless/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":96,"slug":97,"label":98},"api/svelte/headless/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":100,"path":-1,"submenu":101},"Transitions",[102,106,110,114],{"path":103,"slug":104,"label":105},"api/svelte/headless/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":107,"slug":108,"label":109},"api/svelte/headless/services/transitions/collapse","services/transitions/collapse","collapse",{"path":111,"slug":112,"label":113},"api/svelte/headless/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":115,"slug":116,"label":117},"api/svelte/headless/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":119,"path":-1,"submenu":120},"Utils",[121,125,129,133,137],{"path":122,"slug":123,"label":124},"api/svelte/headless/utils/directive","utils/directive","directive",{"path":126,"slug":127,"label":128},"api/svelte/headless/utils/func","utils/func","func",{"path":130,"slug":131,"label":132},"api/svelte/headless/utils/stores","utils/stores","stores",{"path":134,"slug":135,"label":136},"api/svelte/headless/utils/widget","utils/widget","widget",{"path":138,"slug":139,"label":140},"api/svelte/headless/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":27,"import":28},"services/transitions/baseTransitions",[3,6,9,12,15,18,21,24],{"source":4,"name":5},"## function_createTransition\n> **createTransition**(`config?`): [`TransitionWidget`](#transitionwidget)\n\n\nCreate a transition widget.\n\nThe widget will include a patch function, stores to track the animation states and a directive to apply the animation to an element.\n\n### Parameters\n\n#### config?\n\n[`PropsConfig`](../../types#propsconfig)\\\u003C[`TransitionProps`](#transitionprops)\\>\n\nthe props config of the transition\n\n### Returns\n\n[`TransitionWidget`](#transitionwidget)\n\nthe transition widget\n","createTransition",{"source":7,"name":8},"## constant_noAnimation\n> `const` **noAnimation**: [`TransitionFn`](#transitionfn)\n\n\nA transition to show / hide an element without any animated. It uses the HTML `display` attribute.\n\n### Param\n\nthe element to animate\n\n### Param\n\nthe direction\n","noAnimation",{"source":10,"name":11},"## interface_TransitionApi\n\nInterface representing the API for managing transitions of an element.\n\n### Properties\n\n#### hide\n\n> **hide**: (`animated?`) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\n\nRuns the transition to hide the element. It is equivalent to [toggle](#toggle) with false as the first parameter.\n\n##### Parameters\n\n###### animated?\n\n`boolean`\n\nwhether the transition should be animated. If the parameter is not defined, the [animated](#transitionprops-animated) property is used.\n\n##### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nA promise that is fulfilled when the transition is completed. If the transition is canceled, or if the same transition was\nalready running, the promise never completes.\n\n***\n\n#### show\n\n> **show**: (`animated?`) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\n\nRuns the transition to show the element. It is equivalent to [toggle](#toggle) with true as the first parameter.\n\n##### Parameters\n\n###### animated?\n\n`boolean`\n\nwhether the transition should be animated. If the parameter is not defined, the [animated](#transitionprops-animated) property is used.\n\n##### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nA promise that is fulfilled when the transition is completed. If the transition is canceled, or if the same transition was\nalready running, the promise never completes.\n\n***\n\n#### toggle\n\n> **toggle**: (`visible?`, `animated?`) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\n\nRuns the transition to show or hide the element depending on the first parameter.\n\n##### Parameters\n\n###### visible?\n\n`boolean`\n\nwhether the element should be made visible or not. If the parameter is not defined, the opposite of the current [visible](#transitionprops-visible) property is used.\n\n###### animated?\n\n`boolean`\n\nwhether the transition should be animated. If the parameter is not defined, the [animated](#transitionprops-animated) property is used.\n\n##### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\>\n\nA promise that is fulfilled when the transition is completed. If the transition is canceled, or if the same transition was\nalready running, the promise never completes.\n","TransitionApi",{"source":13,"name":14},"## interface_TransitionDirectives\n\nInterface representing transition directives.\n\n### Properties\n\n#### directive\n\n> **directive**: [`Directive`](../../types#directive)\n\n\nthe transition directive\n","TransitionDirectives",{"source":16,"name":17},"## type alias_TransitionFn\n> **TransitionFn** = (`element`, `direction`, `animated`, `signal`, `context`) => [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\> \\| `void`\n\n\nFunction that implements a transition.\n\n### Parameters\n\n#### element\n\n[`SSRHTMLElement`](../../types#ssrhtmlelement)\n\n#### direction\n\n`\"show\"` | `\"hide\"`\n\n#### animated\n\n`boolean`\n\n#### signal\n\n[`AbortSignal`](https://developer.mozilla.org/docs/Web/API/AbortSignal)\n\n#### context\n\n`object`\n\n### Returns\n\n[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\\u003C`void`\\> \\| `void`\n","TransitionFn",{"source":19,"name":20},"## interface_TransitionProps\n\nProperties for configuring a transition.\n\n### Properties\n\n#### animated\n\n> **animated**: `boolean`\n\n\nWhether the transition should be animated.\n\n***\n\n#### animatedOnInit\n\n> **animatedOnInit**: `boolean`\n\n\nIf the element is initially visible, whether the element should be animated when first displayed.\n\n***\n\n#### initDone\n\n> **initDone**: `null` \\| `boolean`\n\n\nWhether initialization is finished. It determines which setting between [TransitionProps.animated](#animated)\nand [TransitionProps.animatedOnInit](#animatedoninit) is used to enable or disable animations.\n\n##### Remarks\n\nIf it is `true`, initialization is considered finished, and [TransitionProps.animatedOnInit](#animatedoninit) is no longer used.\nOtherwise, initialization is considered unfinished and [TransitionProps.animatedOnInit](#animatedoninit) is used instead of [TransitionProps.animated](#animated).\nIf it is `null`, it will be set to `true` automatically when the directive is called with a DOM element.\nIf it is `false`, it will not be updated automatically.\n\n***\n\n#### onHidden\n\n> **onHidden**: () => `void`\n\n\nFunction to be called when the transition is completed and the element is not visible.\n\n##### Returns\n\n`void`\n\n***\n\n#### onShown\n\n> **onShown**: () => `void`\n\n\nFunction to be called when the transition is completed and the element is visible.\n\n##### Returns\n\n`void`\n\n***\n\n#### onVisibleChange\n\n> **onVisibleChange**: (`visible`) => `void`\n\n\nFunction to be called when the visible property changes.\n\n##### Parameters\n\n###### visible\n\n`boolean`\n\nnew value of the visible property\n\n##### Returns\n\n`void`\n\n***\n\n#### transition\n\n> **transition**: [`TransitionFn`](#transitionfn)\n\n\nTransition to be called.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\n\nWhether the element should be visible when the transition is completed.\n","TransitionProps",{"source":22,"name":23},"## interface_TransitionState\n\nTransition state.\n\n### Properties\n\n#### element\n\n> **element**: `null` \\| [`HTMLElement`](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n\n\nReference to the DOM element.\n\n***\n\n#### elementPresent\n\n> **elementPresent**: `boolean`\n\n\nWhether the element to be animated is present in the DOM.\n\n***\n\n#### hidden\n\n> **hidden**: `boolean`\n\n\nEquals: ! [visible](#visible) && ! [transitioning](#transitioning)\n\n***\n\n#### shown\n\n> **shown**: `boolean`\n\n\nEquals: [visible](#visible) && ! [transitioning](#transitioning)\n\n***\n\n#### transitioning\n\n> **transitioning**: `boolean`\n\n\nWhether a transition is currently running.\n\n***\n\n#### visible\n\n> **visible**: `boolean`\n\n\nWhether the element is visible or will be visible when the transition is completed.\n","TransitionState",{"source":25,"name":26},"## type alias_TransitionWidget\n> **TransitionWidget** = [`Widget`](../../types#widget)\\\u003C[`TransitionProps`](#transitionprops), [`TransitionState`](#transitionstate), [`TransitionApi`](#transitionapi), [`TransitionDirectives`](#transitiondirectives)\\>\n\n\nRepresents a widget that handles transitions.\n\n### Template\n\nThe properties required for the transition.\n\n### Template\n\nThe state management for the transition.\n\n### Template\n\nThe API interface for the transition.\n\n### Template\n\nThe directives used in the transition.\n","TransitionWidget","API baseTransitions","@agnos-ui/svelte-headless/services/transitions/baseTransitions"],"uses":{"params":["framework","type","slug"]}}]}
