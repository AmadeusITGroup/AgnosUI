{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"includesPkg":1,"menu":2,"since":155},true,[3,6,9,12,63,106,129],{"title":4,"path":5,"submenu":-1},"Types","api/react/bootstrap/types",{"title":7,"path":8,"submenu":-1},"Config","api/react/bootstrap/config",{"title":10,"path":11,"submenu":-1},"Slot","api/react/bootstrap/slot",{"title":13,"path":-1,"submenu":14},"Components",[15,19,23,27,31,35,39,43,47,51,55,59],{"path":16,"slug":17,"label":18},"api/react/bootstrap/components/accordion","components/accordion","Accordion",{"path":20,"slug":21,"label":22},"api/react/bootstrap/components/alert","components/alert","Alert",{"path":24,"slug":25,"label":26},"api/react/bootstrap/components/carousel","components/carousel","Carousel",{"path":28,"slug":29,"label":30},"api/react/bootstrap/components/collapse","components/collapse","Collapse",{"path":32,"slug":33,"label":34},"api/react/bootstrap/components/modal","components/modal","Modal",{"path":36,"slug":37,"label":38},"api/react/bootstrap/components/pagination","components/pagination","Pagination",{"path":40,"slug":41,"label":42},"api/react/bootstrap/components/progressbar","components/progressbar","Progressbar",{"path":44,"slug":45,"label":46},"api/react/bootstrap/components/rating","components/rating","Rating",{"path":48,"slug":49,"label":50},"api/react/bootstrap/components/select","components/select","Select",{"path":52,"slug":53,"label":54},"api/react/bootstrap/components/slider","components/slider","Slider",{"path":56,"slug":57,"label":58},"api/react/bootstrap/components/toast","components/toast","Toast",{"path":60,"slug":61,"label":62},"api/react/bootstrap/components/tree","components/tree","Tree",{"title":64,"path":-1,"submenu":65},"Services",[66,70,74,78,82,86,90,94,98,102],{"path":67,"slug":68,"label":69},"api/react/bootstrap/services/extendWidget","services/extendWidget","extendWidget",{"path":71,"slug":72,"label":73},"api/react/bootstrap/services/floatingUI","services/floatingUI","floatingUI",{"path":75,"slug":76,"label":77},"api/react/bootstrap/services/focustrack","services/focustrack","focustrack",{"path":79,"slug":80,"label":81},"api/react/bootstrap/services/hash","services/hash","hash",{"path":83,"slug":84,"label":85},"api/react/bootstrap/services/intersection","services/intersection","intersection",{"path":87,"slug":88,"label":89},"api/react/bootstrap/services/matchMedia","services/matchMedia","matchMedia",{"path":91,"slug":92,"label":93},"api/react/bootstrap/services/navManager","services/navManager","navManager",{"path":95,"slug":96,"label":97},"api/react/bootstrap/services/portal","services/portal","portal",{"path":99,"slug":100,"label":101},"api/react/bootstrap/services/resizeObserver","services/resizeObserver","resizeObserver",{"path":103,"slug":104,"label":105},"api/react/bootstrap/services/siblingsInert","services/siblingsInert","siblingsInert",{"title":107,"path":-1,"submenu":108},"Transitions",[109,113,117,121,125],{"path":110,"slug":111,"label":112},"api/react/bootstrap/services/transitions/baseTransitions","services/transitions/baseTransitions","baseTransitions",{"path":114,"slug":115,"label":116},"api/react/bootstrap/services/transitions/collapse","services/transitions/collapse","collapse",{"path":118,"slug":119,"label":120},"api/react/bootstrap/services/transitions/cssTransitions","services/transitions/cssTransitions","cssTransitions",{"path":122,"slug":123,"label":124},"api/react/bootstrap/services/transitions/fade","services/transitions/fade","fade",{"path":126,"slug":127,"label":128},"api/react/bootstrap/services/transitions/simpleClassTransition","services/transitions/simpleClassTransition","simpleClassTransition",{"title":130,"path":-1,"submenu":131},"Utils",[132,136,140,143,147,151],{"path":133,"slug":134,"label":135},"api/react/bootstrap/utils/directive","utils/directive","directive",{"path":137,"slug":138,"label":139},"api/react/bootstrap/utils/func","utils/func","func",{"path":141,"slug":142,"label":97},"api/react/bootstrap/utils/portal","utils/portal",{"path":144,"slug":145,"label":146},"api/react/bootstrap/utils/stores","utils/stores","stores",{"path":148,"slug":149,"label":150},"api/react/bootstrap/utils/widget","utils/widget","widget",{"path":152,"slug":153,"label":154},"api/react/bootstrap/utils/writables","utils/writables","writables","v0.4.0"],"uses":{"params":["framework","type"]}},{"type":"data","data":[{"slug":1,"content":2,"title":39,"import":40},"components/carousel",[3,6,9,12,15,18,21,24,27,30,33,36],{"source":4,"name":5},"## function_Carousel\n> **Carousel**\\\u003C`SlideData`\\>(`props`): `Element`\n\n\nCarousel component that uses a forward ref to expose an API.\n\nThis component utilizes the [useWidget](../config#usewidget) hook to create a carousel widget\nand the [useImperativeHandle](https://react.dev/reference/react/useImperativeHandle) hook to expose the widget's API via the ref.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n\n### Parameters\n\n#### props\n\n[`Partial`](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\\\u003C[`CarouselProps`](#carouselprops)\\\u003C`SlideData`\\>\\> & `object`\n\npartial properties of the CarouselProps interface.\n\n### Returns\n\n`Element`\n\na JSX element that renders the Carousel component with navigation arrows and indicators.\n","Carousel",{"source":7,"name":8},"## interface_CarouselApi\n\nRepresents the API for a carousel component.\n\n### Properties\n\n#### emblaApi\n\n> **emblaApi**: () => `undefined` \\| [`EmblaCarouselType`](https://www.embla-carousel.com/api/)\n\n\nRetrieve the inner EmblaApi object\n\n##### Returns\n\n`undefined` \\| [`EmblaCarouselType`](https://www.embla-carousel.com/api/)\n\n***\n\n#### plugins\n\n> **plugins**: () => `undefined` \\| [`EmblaPluginsType`](https://www.embla-carousel.com/plugins/)\n\n\nRetrieve the enabled plugins\n\n##### Returns\n\n`undefined` \\| [`EmblaPluginsType`](https://www.embla-carousel.com/plugins/)\n\n***\n\n#### scrollNext\n\n> **scrollNext**: (`jump?`) => `void`\n\n\nScroll to the next snap point if possible.\n\n##### Parameters\n\n###### jump?\n\n`boolean`\n\nscroll instantly\n\n##### Returns\n\n`void`\n\n***\n\n#### scrollPrev\n\n> **scrollPrev**: (`jump?`) => `void`\n\n\nScroll to the previous snap point if possible.\n\n##### Parameters\n\n###### jump?\n\n`boolean`\n\nscroll instantly\n\n##### Returns\n\n`void`\n\n***\n\n#### scrollTo\n\n> **scrollTo**: (`index`, `jump?`) => `void`\n\n\nScroll to a snap point by index\n\n##### Parameters\n\n###### index\n\n`number`\n\nthe snap point index\n\n###### jump?\n\n`boolean`\n\nscroll instantly\n\n##### Returns\n\n`void`\n","CarouselApi",{"source":10,"name":11},"## type alias_CarouselContext\n> **CarouselContext**\\\u003C`SlideData`\\> = [`WidgetSlotContext`](../types#widgetslotcontext)\\\u003C[`CarouselWidget`](#carouselwidget)\\\u003C`SlideData`\\>\\>\n\n\nRepresents the context for a carousel.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n","CarouselContext",{"source":13,"name":14},"## function_CarouselDefaultNavigation\n> **CarouselDefaultNavigation**\\\u003C`SlideData`\\>(`widget`): `Element`\n\n\nRenders the default slot navigation for the carousel component.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\n### Parameters\n\n#### widget\n\n[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\n\nThe widget context containing the state, api and directives for carousel.\n\n### Returns\n\n`Element`\n\nThe rendered carousel navigation.\n","CarouselDefaultNavigation",{"source":16,"name":17},"## function_CarouselDefaultStructure\n> **CarouselDefaultStructure**\\\u003C`SlideData`\\>(`widget`): `Element`\n\n\nRenders the default slot structure for the carousel component.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\n### Parameters\n\n#### widget\n\n[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\n\nThe widget context containing the state, api and directives for carousel.\n\n### Returns\n\n`Element`\n\nThe rendered carousel structure.\n","CarouselDefaultStructure",{"source":19,"name":20},"## interface_CarouselDirectives\n\nRepresents the directives for a carousel component.\n\n### Properties\n\n#### container\n\n> **container**: [`Directive`](../types#directive)\n\n\nA directive to be applied to container of the carousel.\n\n***\n\n#### root\n\n> **root**: [`Directive`](../types#directive)\n\n\nthe root directive\n\n***\n\n#### scrollNext\n\n> **scrollNext**: [`Directive`](../types#directive)\n\n\nA directive to be applied to a navigation button allowing to scroll to the next slide.\n\n***\n\n#### scrollPrev\n\n> **scrollPrev**: [`Directive`](../types#directive)\n\n\nA directive to be applied to a navigation button allowing to scroll to the previous slide.\n\n***\n\n#### slide\n\n> **slide**: [`Directive`](../types#directive)\\\u003C\\{ `id`: `string`; `index`: `number`; \\}\\>\n\n\nA directive to be applied to each slide in the carousel.\n\n***\n\n#### tabIndicator\n\n> **tabIndicator**: [`Directive`](../types#directive)\\\u003C\\{ `id`: `string`; `index`: `number`; `jump?`: `boolean`; \\}\\>\n\n\nA directive to be applied to a navigation indicator allowing to scroll to the corresponding slide.\nAs this directive adds the role `tab` to the element, it is recommended to use it on a button or a link and the parent element should have the [tabList](#tablist) directive attached.\n\n***\n\n#### tabList\n\n> **tabList**: [`Directive`](../types#directive)\n\n\nA directive to be applied to a tab list allowing to navigate to the corresponding slide.\nThis directive adds the role `tablist` and is recommended to be used together with [tabIndicator](#tabindicator).\n","CarouselDirectives",{"source":22,"name":23},"## interface_CarouselProps\n\nInterface representing the properties for a carousel component.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n\n### Properties\n\n#### align\n\n> **align**: `\"start\"` \\| `\"end\"` \\| `\"center\"`\n\n\nAlign the slides relative to the carousel viewport\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#align](https://www.embla-carousel.com/api/options/#align)\n\n##### Default Value\n\n`'center'`\n\n***\n\n#### ariaIndicatorLabel\n\n> **ariaIndicatorLabel**: (`index`) => `string`\n\n\nAria label for navigation indicators\n\n##### Parameters\n\n###### index\n\n`number`\n\n##### Returns\n\n`string`\n\n***\n\n#### ariaLive\n\n> **ariaLive**: `string`\n\n\nThe aria-live attribute value for the carousel container.\n\n##### Default Value\n\n`'polite'`\n\n***\n\n#### ariaNextLabel\n\n> **ariaNextLabel**: `string`\n\n\nAria label for next button\n\n***\n\n#### ariaPrevLabel\n\n> **ariaPrevLabel**: `string`\n\n\nAria label for previous button\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### container\n\n> **container**: `null` \\| `string`\n\n\nEnables choosing a custom container element which holds the slides. By default, Embla will choose the first direct child element of the root element. Provide a valid CSS selector string.\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#container](https://www.embla-carousel.com/api/options/#container)\n\n***\n\n#### containerClass\n\n> **containerClass**: `string`\n\n\nClass name to apply to the container of the carousel.\n\n##### Default Value\n\n`''`\n\n***\n\n#### containScroll\n\n> **containScroll**: `false` \\| `\"trimSnaps\"` \\| `\"keepSnaps\"`\n\n\nClear leading and trailing empty space that causes excessive scrolling\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#containScroll](https://www.embla-carousel.com/api/options/#containScroll)\n\n##### Default Value\n\n`'trimSnaps'`\n\n***\n\n#### direction\n\n> **direction**: `\"ltr\"` \\| `\"rtl\"`\n\n\nChoose content direction between `ltr` and `rtl`\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#direction](https://www.embla-carousel.com/api/options/#direction)\n\n##### Default Value\n\n`'ltr'`\n\n***\n\n#### dragFree\n\n> **dragFree**: `boolean`\n\n\nEnables momentum scrolling\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#dragFree](https://www.embla-carousel.com/api/options/#dragFree)\n\n##### Default Value\n\n`false`\n\n***\n\n#### dragThreshold\n\n> **dragThreshold**: `number`\n\n\nDrag threshold in pixels\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#dragThreshold](https://www.embla-carousel.com/api/options/#dragThreshold)\n\n##### Default Value\n\n`10`\n\n***\n\n#### duration\n\n> **duration**: `number`\n\n\nSet scroll duration when triggered by any of the API methods\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#duration](https://www.embla-carousel.com/api/options/#duration)\n\n##### Default Value\n\n`25`\n\n***\n\n#### loop\n\n> **loop**: `boolean`\n\n\nEnables infinite looping\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#loop](https://www.embla-carousel.com/api/options/#loop)\n\n##### Default Value\n\n`false`\n\n***\n\n#### navigation\n\n> **navigation**: [`SlotContent`](../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe navigation layer of the carousel.\n\n##### Default Value\n\n`undefined`\n\n***\n\n#### plugins\n\n> **plugins**: `CreatePluginType`\\\u003C`LoosePluginType`, \\{ \\}\\>[]\n\n\nPlugins to extend the carousel with additional features\n\n##### Default Value\n\n`[]`\n\n***\n\n#### showNavigationArrows\n\n> **showNavigationArrows**: `boolean`\n\n\nIf `true`, 'previous' and 'next' navigation arrows will be visible.\n\n***\n\n#### showNavigationIndicators\n\n> **showNavigationIndicators**: `boolean`\n\n\nIf `true`, navigation indicators at the bottom of the slide will be visible.\n\n***\n\n#### skipSnaps\n\n> **skipSnaps**: `boolean`\n\n\nAllow the carousel to skip scroll snaps if it's dragged vigorously\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#skipsnaps](https://www.embla-carousel.com/api/options/#skipsnaps)\n\n##### Default Value\n\n`false`\n\n***\n\n#### slide\n\n> **slide**: [`SlotContent`](../types#slotcontent)\\\u003C[`CarouselSlideContext`](#carouselslidecontext)\\\u003C`SlideData`\\>\\>\n\n\nThe content of each slide in the carousel.\n\n##### Default Value\n\n`undefined`\n\n***\n\n#### slideClass\n\n> **slideClass**: `string` \\| (`slideContext`) => `string`\n\n\nClass name to apply to each slide in the carousel.\n\n##### Default Value\n\n`''`\n\n***\n\n#### slidesData\n\n> **slidesData**: `SlideData`[]\n\n\nThe data for each slide in the carousel.\n\n##### Default Value\n\n`[]`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe structure of the carousel.\n\n##### Default Value\n\n`undefined`\n","CarouselProps",{"source":25,"name":26},"## type alias_CarouselSlideContext\n> **CarouselSlideContext**\\\u003C`SlideData`\\> = [`WidgetSlotContext`](../types#widgetslotcontext)\\\u003C[`CarouselWidget`](#carouselwidget)\\\u003C`SlideData`\\>\\> & `SlideData`\n\n\nRepresents the context for a carousel slide.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n","CarouselSlideContext",{"source":28,"name":29},"## interface_CarouselState\n\nRepresents the state of a carousel component.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of data used by each slide in the carousel.\n\n### Properties\n\n#### ariaLive\n\n> **ariaLive**: `string`\n\n\nThe aria-live attribute value for the carousel container.\n\n##### Default Value\n\n`'polite'`\n\n***\n\n#### canScrollNext\n\n> **canScrollNext**: `boolean`\n\n\ncan carousel scroll to next slide\n\n***\n\n#### canScrollPrev\n\n> **canScrollPrev**: `boolean`\n\n\ncan carousel scroll to previous slide\n\n***\n\n#### className\n\n> **className**: `string`\n\n\nCSS classes to be applied on the widget main container\n\n##### Default Value\n\n`''`\n\n***\n\n#### containerClass\n\n> **containerClass**: `string`\n\n\nClass name to apply to the container of the carousel.\n\n##### Default Value\n\n`''`\n\n***\n\n#### direction\n\n> **direction**: `\"ltr\"` \\| `\"rtl\"`\n\n\nChoose content direction between `ltr` and `rtl`\n\n##### See\n\n[https://www.embla-carousel.com/api/options/#direction](https://www.embla-carousel.com/api/options/#direction)\n\n##### Default Value\n\n`'ltr'`\n\n***\n\n#### initialized\n\n> **initialized**: `boolean`\n\n\nis the carousel initialized\n\n***\n\n#### navigation\n\n> **navigation**: [`SlotContent`](../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe navigation layer of the carousel.\n\n##### Default Value\n\n`undefined`\n\n***\n\n#### scrolling\n\n> **scrolling**: `boolean`\n\n\nis the carousel currently scrolling\n\n***\n\n#### selectedScrollSnap\n\n> **selectedScrollSnap**: `number`\n\n\nselected scroll snap\n\n***\n\n#### showNavigationArrows\n\n> **showNavigationArrows**: `boolean`\n\n\nIf `true`, 'previous' and 'next' navigation arrows will be visible.\n\n***\n\n#### showNavigationIndicators\n\n> **showNavigationIndicators**: `boolean`\n\n\nIf `true`, navigation indicators at the bottom of the slide will be visible.\n\n***\n\n#### slide\n\n> **slide**: [`SlotContent`](../types#slotcontent)\\\u003C[`CarouselSlideContext`](#carouselslidecontext)\\\u003C`SlideData`\\>\\>\n\n\nThe content of each slide in the carousel.\n\n##### Default Value\n\n`undefined`\n\n***\n\n#### slideClass\n\n> **slideClass**: `string` \\| (`slideContext`) => `string`\n\n\nClass name to apply to each slide in the carousel.\n\n##### Default Value\n\n`''`\n\n***\n\n#### slidesData\n\n> **slidesData**: `SlideData`[]\n\n\nThe data for each slide in the carousel.\n\n##### Default Value\n\n`[]`\n\n***\n\n#### structure\n\n> **structure**: [`SlotContent`](../types#slotcontent)\\\u003C[`CarouselContext`](#carouselcontext)\\\u003C`SlideData`\\>\\>\n\n\nThe structure of the carousel.\n\n##### Default Value\n\n`undefined`\n","CarouselState",{"source":31,"name":32},"## type alias_CarouselWidget\n> **CarouselWidget**\\\u003C`SlideData`\\> = [`Widget`](../types#widget)\\\u003C[`CarouselProps`](#carouselprops)\\\u003C`SlideData`\\>, [`CarouselState`](#carouselstate)\\\u003C`SlideData`\\>, [`CarouselApi`](#carouselapi), [`CarouselDirectives`](#carouseldirectives)\\>\n\n\nRepresents a carousel widget with specific properties, state, API, and directives.\n\n### Type Parameters\n\n#### SlideData\n\n`SlideData` *extends* `object`\n\nThe type of the data for each slide.\n","CarouselWidget",{"source":34,"name":35},"## constant_createCarousel\n> `const` **createCarousel**: [`WidgetFactory`](../types#widgetfactory)\\\u003C[`CarouselWidget`](#carouselwidget)\\\u003C\\{ `id`: `string`; \\}\\>, \\\u003C`SlideData`\\>(`config?`) => [`CarouselWidget`](#carouselwidget)\\\u003C`SlideData`\\>\\>\n\n\nCreate a Carousel with given config props\n\n### Template\n\nThe type of the data for each slide.\n\n### Param\n\nan optional carousel config\n\n### Returns\n\na CarouselWidget\n","createCarousel",{"source":37,"name":38},"## constant_getCarouselDefaultConfig\n> `const` **getCarouselDefaultConfig**: () => [`CarouselProps`](#carouselprops)\\\u003C`any`\\>\n\n\nRetrieve a shallow copy of the default Carousel config\n\n### Returns\n\n[`CarouselProps`](#carouselprops)\\\u003C`any`\\>\n\nthe default Carousel config\n","getCarouselDefaultConfig","API carousel","@agnos-ui/react-bootstrap/components/carousel"],"uses":{"params":["framework","type","slug"]}}]}
