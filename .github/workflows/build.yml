name: build
on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        description: 'NPM token to use to publish packages'
        required: false
      CODECOV_TOKEN:
        description: 'Token to upload codecov reports'
        required: false
    inputs:
      version:
        description: 'Version number (x.y.z) to set before executing the build'
        type: string
        default: ''
      docPublish:
        description: 'Whether to publish the documentation on gh-pages'
        type: boolean
        default: false
      docPath:
        description: 'If version is empty, path in which the documentation on gh-pages should be published.'
        type: string
        default: ''
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npx playwright install --with-deps
      - run: npm run syncpack:check
      - run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
      - if: inputs.version != ''
        run: |
          npm run -w demo update:stackblitzPkgs
          node scripts/setVersion.js "${{ inputs.version }}"
          npm run syncpack:check
      - run: npm run build:ci
      - run: npm run check
      - run: npm run format:check
      - run: npm run lint -- --quiet
      - name: check stackblitz angular bootstrap lockfile
        run: npm ci --dry-run
        working-directory: demo/src/lib/stackblitz/angular-bootstrap
      - name: check stackblitz angular daisyui lockfile
        run: npm ci --dry-run
        working-directory: demo/src/lib/stackblitz/angular-daisyui
      - name: check stackblitz react bootstrap lockfile
        run: npm ci --dry-run
        working-directory: demo/src/lib/stackblitz/react-bootstrap
      - name: check stackblitz react daisyui lockfile
        run: npm ci --dry-run
        working-directory: demo/src/lib/stackblitz/react-daisyui
      - name: check stackblitz svelte bootstrap lockfile
        run: npm ci --dry-run
        working-directory: demo/src/lib/stackblitz/svelte-bootstrap
      - name: check stackblitz svelte daisyui lockfile
        run: npm ci --dry-run
        working-directory: demo/src/lib/stackblitz/svelte-daisyui
      - run: npm run test:coverage
      - uses: codecov/codecov-action@v4
        with:
          files: core/coverage/lcov.info,core-bootstrap/coverage/lcov.info,angular/headless/coverage/lcov.info,svelte/preprocess/coverage/lcov.info
          flags: unit
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - run: npm run -w verdaccio verdaccio-publish
      - if: inputs.version != ''
        run: |
          npm whoami
          export PUBLISH_TAG="$(node ./scripts/publishTag.js "${{ inputs.version }}")"
          node ./scripts/npmPublish.js --provenance --tag "$PUBLISH_TAG"
          npm run -w demo update:stackblitzPkgs ${{ inputs.version }}
          npm run build -w demo
          git commit -a -m v${{ inputs.version }}
          git tag v${{ inputs.version }}
          git show HEAD
          export RELEASE_BRANCH=release/$(node scripts/versionDocFolder.js ${{ inputs.version }})
          git checkout -B $RELEASE_BRANCH
          git push origin v${{ inputs.version }} $RELEASE_BRANCH
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - if: inputs.docPublish && (inputs.version != '' || inputs.docPath != '')
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
      - if: inputs.docPublish && (inputs.version != '' || inputs.docPath != '')
        env:
          VERSION: ${{ inputs.version }}
        working-directory: gh-pages
        run: |
          if [ -n "$VERSION" ]; then
            export DOC_PATH="v$(node ../scripts/versionDocFolder.js "$VERSION")"
          else
            export DOC_PATH="$(node ../scripts/versionReleaseDocFolder.js "${{ inputs.docPath }}")"
          fi
          rm -rf "$DOC_PATH"
          cp -a ../demo/dist "$DOC_PATH"
          node ../scripts/updateVersionsList.js
          git add .
          git commit --allow-empty -a -m "$DOC_PATH from ${{ github.sha }}"
          git push origin gh-pages
