{"type":"data","nodes":[null,{"type":"data","data":[{"includesFwk":1,"menu":2},true,[3,16,36,46,74],{"title":4,"submenu":5},"Getting started",[6,10,13],{"label":7,"path":8,"subpath":9},"Introduction","docs/angular/getting-started/introduction","",{"label":11,"path":12,"subpath":9},"Installation","docs/angular/getting-started/installation",{"label":14,"path":15,"subpath":9},"Core values","docs/angular/getting-started/core-values",{"title":17,"submenu":18},"Headless",[19,21,24,27,30,33],{"label":7,"path":20,"subpath":9},"docs/angular/headless/introduction",{"label":22,"path":23,"subpath":9},"Configuration","docs/angular/headless/configuration",{"label":25,"path":26,"subpath":9},"Slots","docs/angular/headless/slots",{"label":28,"path":29,"subpath":9},"Directives","docs/angular/headless/directives",{"label":31,"path":32,"subpath":9},"Transitions","docs/angular/headless/transitions",{"label":34,"path":35,"subpath":9},"Extending","docs/angular/headless/extending",{"title":37,"submenu":38},"Bootstrap flavor",[39,41,44],{"label":7,"path":40,"subpath":9},"docs/angular/bootstrap-flavor/introduction",{"label":42,"path":43,"subpath":9},"Customization","docs/angular/bootstrap-flavor/customization",{"label":34,"path":45,"subpath":9},"docs/angular/bootstrap-flavor/extending",{"title":47,"submenu":48},"Components",[49,53,56,59,62,65,68,71],{"label":50,"path":51,"subpath":52},"Accordion","docs/angular/components/accordion/","examples",{"label":54,"path":55,"subpath":52},"Alert","docs/angular/components/alert/",{"label":57,"path":58,"subpath":52},"Modal","docs/angular/components/modal/",{"label":60,"path":61,"subpath":52},"Pagination","docs/angular/components/pagination/",{"label":63,"path":64,"subpath":52},"Progressbar","docs/angular/components/progressbar/",{"label":66,"path":67,"subpath":52},"Rating","docs/angular/components/rating/",{"label":69,"path":70,"subpath":52},"Select","docs/angular/components/select/",{"label":72,"path":73,"subpath":52},"Slider","docs/angular/components/slider/",{"title":75,"submenu":76},"Services",[77,79,82,85],{"label":7,"path":78,"subpath":9},"docs/angular/services/introduction",{"label":80,"path":81,"subpath":9},"Focustrack","docs/angular/services/focustrack",{"label":83,"path":84,"subpath":9},"Floating UI","docs/angular/services/floating-ui",{"label":86,"path":87,"subpath":9},"Intersection","docs/angular/services/intersection"],"uses":{"params":["framework"]}},{"type":"data","data":[{"content":1,"prev":2,"next":7,"slug":11},"# Floating UI\n\n## Service Overview\n\nThe Floating UI service is designed to create a flexible and dynamic floating DOM element that can be positioned relative to a reference element. It provides a set of options for customization, including positioning configuration, auto-updating behavior, and arrow styling.\n\nThe service uses a 3rd party library called [floating UI](https://floating-ui.com/).\n\nBy leveraging the provided directives and state stores, developers can easily integrate floating UI elements into their web applications with flexibility and control.\n\n## `createFloatingUI` factory\n\nUse the `createFloatingUI` function to create an instance of the Floating UI service.\nPass an optional `propsConfig` parameter to customize the initial configuration.\n\n### Configuration Options\n\nThe `propsConfig` parameter allows you to provide initial values for the following options:\n\n- **computePositionOptions** Option for positioning the floating UI relative to the reference element. Refer to [computePosition documentation](https://floating-ui.com/docs/computeposition#options) for defaults and options.\n- **autoUpdateOptions** Option for enabling auto-updating of the floating position. Refer to [autoUpdate documentation](https://floating-ui.com/docs/autoupdate#options) for defaults and options.\n- **arrowOptions** Option to customize the arrow element associated, by giving the element itself and eventually a padding. Refer to [arrow documentation](https://floating-ui.com/docs/arrow#options) for defaults and options.\n\n## Output Directives\n\n1. **Reference Directive** Apply this directive to the reference element from which the floating UI will be positioned.\n\n2. **Floating Directive** Apply this directive to the floating UI element. This directive includes styling updates based on the floating UI position.\n3. **Arrow Directive** Apply this directive to the arrow element, if present. This directive includes styling updates based on the arrow position.\n\n## State Stores\n\nThe Floating UI service exposes several state stores that represent different aspects of the UI position:\n\n- `x$`: X-coordinate of the floating UI.\n- `y$`: Y-coordinate of the floating UI.\n- `strategy$`: Strategy used for positioning.\n- `placement$`: Placement of the floating UI.\n- `middlewareData$`: Additional data provided by middleware.\n\n## Patching States\n\nFloating UI instance includes a `patch` method that allows you to patch the configuration dynamically at runtime.\n\n## Usage\n\n### In Action\n\n```sample\n{FloatingUI:floatingUI/floatingUI:500}\n```\n",{"slug":3,"mdpath":4,"title":5,"name":5,"subpath":6},"services/focustrack","../docs/04-Services/01-Focustrack.md","Focustrack","",{"slug":8,"mdpath":9,"title":10,"name":10,"subpath":6},"services/intersection","../docs/04-Services/03-Intersection.md","Intersection","services/floating-ui"],"uses":{"params":["slug"]}}]}
